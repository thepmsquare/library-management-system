{"version":3,"sources":["Firebase.js","LoginRegister.js","Header.js","Profile.js","images/defaultBook.png","Library.js","Drawer.js","Inventory.js","BooksAPIKey.js","Requests.js","History.js","UserNotifications.js","Ebooks.js","Homepage.js","VerifyEmail.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","db","firestore","LoginRegister","props","handleTabValueChange","e","newValue","setState","tabValue","handleInputChange","name","target","getAttribute","value","handleSnackbarClose","isSnackbarOpen","snackbarMessage","handleLoginSubmit","preventDefault","auth","signInWithEmailAndPassword","state","loginEmail","loginPassword","catch","error","message","handleRegisterSubmit","registerPassword","registerPasswordConfirm","registerAdminKey","collection","where","get","then","querySnapshot","docs","forEach","doc","push","data","length","Keys","indexOf","registerUser","isAdmin","createUserWithEmailAndPassword","registerEmail","userCredential","user","updateProfile","displayName","registerUsername","uid","set","sendEmailVerification","handleForgotPassword","sendPasswordResetEmail","render","className","Paper","elevation","Tabs","onChange","Tab","label","onSubmit","TextField","type","required","Button","size","onClick","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","action","Fragment","IconButton","aria-label","color","fontSize","Component","Header","handleAccountMenuOpen","isAccountMenuOpen","handleAccountMenuClose","handleChangeFocus","AppBar","position","Toolbar","handleDrawerOpen","Typography","variant","noWrap","Menu","anchorEl","document","querySelector","keepMounted","MenuItem","isUserAdmin","handleLogout","Profile","componentDidMount","unSubAdminKeys","onSnapshot","adminKey","componentWillUnmount","handleChangeDisplayNameExpandedToggle","isExpanded","isChangeDisplayNameExpanded","handleChangeDisplayNameSubmit","newUsername","handleSnackbarOpen","handleChangeEmailExpandedToggle","isChangeEmailExpanded","handleChangeEmailSubmit","credential","EmailAuthProvider","email","newEmailPassword","reauthenticateWithCredential","updateEmail","newEmail","newPassword","window","location","reload","handleChangePasswordExpandedToggle","isChangePasswordExpanded","handleChangePasswordSubmit","newPasswordConfirm","oldPassword","updatePassword","handleChangeAdminKeysExpandedToggle","isChangeAdminKeysExpanded","handleChangeAdminKeysSubmit","ref","update","newAdminKey","handleDeleteAccountExpandedToggle","isDeleteAccountExpanded","handleDeleteAccountSubmit","deletePassword","delete","Accordion","expanded","AccordionSummary","expandIcon","AccordionDetails","Library","unSubInventory","library","a","url","id","fetch","result","json","apiData","quantity","price","unSubDontShow","dontShow","some","ele","history","status","getDays","time","toDate","Date","now","fineRemaining","bookID","handleDialogClose","isRequestDialogOpen","requestId","handleRequestDialogOpen","handleRequest","filter","sameBookUserRequest","add","userID","Timestamp","fromDate","date1","date2","diffTime","Math","abs","floor","searchValue","InputProps","startAdornment","InputAdornment","TableContainer","component","Table","TableHead","TableRow","TableCell","TableBody","volumeInfo","title","toLowerCase","publisher","authors","join","map","book","src","imageLinks","thumbnail","defaultBook","alt","publishedDate","disabled","Dialog","DialogTitle","DialogContent","DialogContentText","find","DialogActions","Drawer","handleInventoryClick","handleDrawerClose","handleLibraryClick","handleRequestsClick","handleHistoryClick","handleUserNotificationsClick","handleEbooksClick","anchor","isDrawerOpen","List","ListItem","button","ListItemIcon","ListItemText","primary","Inventory","unsubInventoryListener","inventory","unSubRequestListener","lostBooks","isRestocked","toggleAddItem","curState","addItem","handleSearchSubmit","searchTitle","searchAuthor","searchPublisher","searchISBN","items","searchResult","isAddDialogOpen","isEditDialogOpen","isDeleteDialogOpen","addId","editId","idToBeDeleted","handleAddItemDialogOpen","handleAddSubmit","parseInt","addQuantity","parseFloat","addPrice","handleEditItemDialogOpen","editQuantity","editPrice","handleEditSubmit","handleDeleteDialogOpen","handleDeleteItem","querySnapshot2","docs2","handleRestock","seconds","FieldValue","increment","inputProps","pattern","categories","pageCount","lostBook","toLocaleDateString","min","fullWidth","step","Requests","unSubRequests","requests","fineUsers","Set","toTitleCase","str","replace","txt","charAt","toUpperCase","substr","isApproveRejectDialogOpen","toApproveReject","approveRejectReason","isCollectCancelDialogOpen","toCollectCancel","collectCancelReason","isReturnConfirmDialogOpen","toReturnConfirm","handleApproveAccept","arrayUnion","handleApproveRejectDialogOpen","handleApproveReject","handleCollectAccept","handleCollectCancelDialogOpen","handleCollectCancel","getFine","diffDays","handleReturnConfirmDialogOpen","handleReturnConfirm","request","getTime","multiline","History","isApproveCancelDialogOpen","toApproveCancel","isReportLostDialogOpen","toReportLost","handleApproveCancelDialogOpen","handleApproveCancel","handleReportLostDialogOpen","handleReportLost","activity","historyEle","sort","b","UserNotifications","unSubNotifications","orderBy","notifications","notification","secondary","Divider","Ebooks","accessInfo","accessViewStatus","href","webReaderLink","Homepage","signOut","componentInFocus","VerifyEmail","checkForVerification","setInterval","handleReload","clearInterval","updateUser","handleResend","handleEmailChangeToggle","isUserChangingEmail","handleEmailChangeSubmit","passwordInput","newEmailInput","App","checkLogin","onAuthStateChanged","alert","exact","path","to","pathname","emailVerified","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById","URL","process","origin","addEventListener","headers","response","contentType","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.9be51740.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/analytics\";\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBBYCDggpHEho-sMOj_HxvgSC2wetbSUB8\",\r\n  authDomain: \"library-management-syste-57f9f.firebaseapp.com\",\r\n  projectId: \"library-management-syste-57f9f\",\r\n  storageBucket: \"library-management-syste-57f9f.appspot.com\",\r\n  messagingSenderId: \"659487115186\",\r\n  appId: \"1:659487115186:web:4eed8326ab5cd4c63f86ab\",\r\n  measurementId: \"G-LT3BJB781F\",\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.analytics();\r\n\r\nexport default firebase;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Paper,\r\n  Tabs,\r\n  Tab,\r\n  TextField,\r\n  Button,\r\n  Snackbar,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport firebase from \"./Firebase\";\r\nimport \"./stylesheets/LoginRegister.css\";\r\nconst db = firebase.firestore();\r\n\r\nclass LoginRegister extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tabValue: 0,\r\n      loginEmail: \"\",\r\n      loginPassword: \"\",\r\n      registerUsername: \"\",\r\n      registerEmail: \"\",\r\n      registerPassword: \"\",\r\n      registerPasswordConfirm: \"\",\r\n      registerAdminKey: \"\",\r\n      isSnackbarOpen: false,\r\n      snackbarMessage: \"\",\r\n    };\r\n  }\r\n\r\n  handleTabValueChange = (e, newValue) => {\r\n    this.setState(() => {\r\n      return { tabValue: newValue };\r\n    });\r\n  };\r\n\r\n  handleInputChange = (e) => {\r\n    const name = e.target.getAttribute(\"name\");\r\n    const value = e.target.value;\r\n    this.setState(() => {\r\n      return {\r\n        [name]: value,\r\n      };\r\n    });\r\n  };\r\n\r\n  handleSnackbarClose = () => {\r\n    this.setState(() => {\r\n      return { isSnackbarOpen: false, snackbarMessage: \"\" };\r\n    });\r\n  };\r\n\r\n  handleLoginSubmit = (e) => {\r\n    e.preventDefault();\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(\r\n        this.state.loginEmail,\r\n        this.state.loginPassword\r\n      )\r\n      .catch((error) => {\r\n        this.setState(() => {\r\n          return {\r\n            isSnackbarOpen: true,\r\n            snackbarMessage: error.message,\r\n          };\r\n        });\r\n      });\r\n  };\r\n\r\n  handleRegisterSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (this.state.registerPassword === this.state.registerPasswordConfirm) {\r\n      if (this.state.registerAdminKey !== \"\") {\r\n        db.collection(\"AdminKeys\")\r\n          .where(\"Keys\", \"!=\", [])\r\n          .get()\r\n          .then((querySnapshot) => {\r\n            const docs = [];\r\n            querySnapshot.forEach((doc) => docs.push(doc.data()));\r\n            if (\r\n              docs.length !== 0 &&\r\n              docs[0].Keys.indexOf(this.state.registerAdminKey) !== -1\r\n            ) {\r\n              this.registerUser(true);\r\n            } else {\r\n              this.setState(() => {\r\n                return {\r\n                  isSnackbarOpen: true,\r\n                  snackbarMessage: \"Invalid Admin Key\",\r\n                };\r\n              });\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            this.setState(() => {\r\n              return {\r\n                isSnackbarOpen: true,\r\n                snackbarMessage: error.message,\r\n              };\r\n            });\r\n          });\r\n      } else {\r\n        this.registerUser(false);\r\n      }\r\n    } else {\r\n      this.setState(() => {\r\n        return {\r\n          isSnackbarOpen: true,\r\n          snackbarMessage: \"Passwords do not match.\",\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  registerUser = (isAdmin) => {\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(\r\n        this.state.registerEmail,\r\n        this.state.registerPassword\r\n      )\r\n      .then((userCredential) => {\r\n        userCredential.user\r\n          .updateProfile({\r\n            displayName: this.state.registerUsername,\r\n          })\r\n          .then(() => {\r\n            db.collection(\"Users\")\r\n              .doc(userCredential.user.uid)\r\n              .set({ isAdmin })\r\n              .then(() => {\r\n                userCredential.user.sendEmailVerification().catch((error) => {\r\n                  this.setState(() => {\r\n                    return {\r\n                      isSnackbarOpen: true,\r\n                      snackbarMessage: error.message,\r\n                    };\r\n                  });\r\n                });\r\n              })\r\n              .catch((error) => {\r\n                this.setState(() => {\r\n                  return {\r\n                    isSnackbarOpen: true,\r\n                    snackbarMessage: error.message,\r\n                  };\r\n                });\r\n              });\r\n          })\r\n          .catch((error) => {\r\n            this.setState(() => {\r\n              return {\r\n                isSnackbarOpen: true,\r\n                snackbarMessage: error.message,\r\n              };\r\n            });\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        this.setState(() => {\r\n          return {\r\n            isSnackbarOpen: true,\r\n            snackbarMessage: error.message,\r\n          };\r\n        });\r\n      });\r\n  };\r\n\r\n  handleForgotPassword = () => {\r\n    if (this.state.loginEmail) {\r\n      firebase\r\n        .auth()\r\n        .sendPasswordResetEmail(this.state.loginEmail)\r\n        .then(() => {\r\n          this.setState(() => {\r\n            return {\r\n              isSnackbarOpen: true,\r\n              snackbarMessage: `Password Reset Link sent at ${this.state.loginEmail}`,\r\n            };\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          this.setState(() => {\r\n            return {\r\n              isSnackbarOpen: true,\r\n              snackbarMessage: error.message,\r\n            };\r\n          });\r\n        });\r\n    } else {\r\n      this.setState(() => {\r\n        return {\r\n          isSnackbarOpen: true,\r\n          snackbarMessage: \"Please enter your Email address.\",\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  render = () => {\r\n    return (\r\n      <div className=\"LoginRegister\">\r\n        <Paper elevation={3} className=\"LoginRegister-FormContainer\">\r\n          <Tabs\r\n            value={this.state.tabValue}\r\n            onChange={this.handleTabValueChange}\r\n          >\r\n            <Tab label=\"Login\" />\r\n            <Tab label=\"Register\" />\r\n          </Tabs>\r\n          {this.state.tabValue === 0 ? (\r\n            <form\r\n              onSubmit={this.handleLoginSubmit}\r\n              className=\"LoginRegister-Form\"\r\n            >\r\n              <TextField\r\n                label=\"Email\"\r\n                type=\"email\"\r\n                required\r\n                name=\"loginEmail\"\r\n                value={this.state.loginEmail}\r\n                onChange={this.handleInputChange}\r\n              ></TextField>\r\n              <TextField\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                required\r\n                name=\"loginPassword\"\r\n                value={this.state.loginPassword}\r\n                onChange={this.handleInputChange}\r\n              ></TextField>\r\n              <Button type=\"submit\">Log In</Button>\r\n              <Button size=\"small\" onClick={this.handleForgotPassword}>\r\n                Forgot password?\r\n              </Button>\r\n            </form>\r\n          ) : (\r\n            <form\r\n              onSubmit={this.handleRegisterSubmit}\r\n              className=\"LoginRegister-Form\"\r\n            >\r\n              <TextField\r\n                label=\"Username\"\r\n                required\r\n                name=\"registerUsername\"\r\n                value={this.state.registerUsername}\r\n                onChange={this.handleInputChange}\r\n              ></TextField>\r\n              <TextField\r\n                label=\"Email\"\r\n                type=\"email\"\r\n                required\r\n                name=\"registerEmail\"\r\n                value={this.state.registerEmail}\r\n                onChange={this.handleInputChange}\r\n              ></TextField>\r\n              <TextField\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                required\r\n                name=\"registerPassword\"\r\n                value={this.state.registerPassword}\r\n                onChange={this.handleInputChange}\r\n              ></TextField>\r\n              <TextField\r\n                label=\"Confirm Password\"\r\n                type=\"password\"\r\n                required\r\n                name=\"registerPasswordConfirm\"\r\n                value={this.state.registerPasswordConfirm}\r\n                onChange={this.handleInputChange}\r\n              ></TextField>\r\n              <TextField\r\n                type=\"password\"\r\n                label=\"Admin Key\"\r\n                name=\"registerAdminKey\"\r\n                value={this.state.registerAdminKey}\r\n                onChange={this.handleInputChange}\r\n              ></TextField>\r\n              <Button type=\"submit\">Register</Button>\r\n            </form>\r\n          )}\r\n        </Paper>\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"left\",\r\n          }}\r\n          open={this.state.isSnackbarOpen}\r\n          autoHideDuration={6000}\r\n          onClose={this.handleSnackbarClose}\r\n          message={this.state.snackbarMessage}\r\n          action={\r\n            <React.Fragment>\r\n              <IconButton\r\n                size=\"small\"\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                onClick={this.handleSnackbarClose}\r\n              >\r\n                <CloseIcon fontSize=\"small\" />\r\n              </IconButton>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default LoginRegister;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  IconButton,\r\n  Menu,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport AccountBoxIcon from \"@material-ui/icons/AccountBox\";\r\nimport VerifiedUserIcon from \"@material-ui/icons/VerifiedUser\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport \"./stylesheets/Header.css\";\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isAccountMenuOpen: false,\r\n    };\r\n  }\r\n\r\n  handleAccountMenuOpen = () => {\r\n    this.setState(() => {\r\n      return { isAccountMenuOpen: true };\r\n    });\r\n  };\r\n\r\n  handleAccountMenuClose = () => {\r\n    this.setState(() => {\r\n      return { isAccountMenuOpen: false };\r\n    });\r\n  };\r\n\r\n  handleChangeFocus = () => {\r\n    this.props.handleChangeFocus(\"Profile\");\r\n    this.handleAccountMenuClose();\r\n  };\r\n\r\n  render = () => {\r\n    return (\r\n      <AppBar position=\"sticky\" className=\"Header\">\r\n        <Toolbar className=\"Header-Toolbar\">\r\n          <div className=\"Header-ToolbarLeft\">\r\n            <IconButton color=\"inherit\" onClick={this.props.handleDrawerOpen}>\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" noWrap>\r\n              Library Management System\r\n            </Typography>\r\n          </div>\r\n\r\n          <IconButton\r\n            color=\"inherit\"\r\n            onClick={this.handleAccountMenuOpen}\r\n            className=\"Header-AccountButton\"\r\n          >\r\n            <AccountBoxIcon />\r\n          </IconButton>\r\n        </Toolbar>\r\n\r\n        <Menu\r\n          anchorEl={document.querySelector(\".Header-AccountButton\")}\r\n          keepMounted\r\n          open={this.state.isAccountMenuOpen}\r\n          onClose={this.handleAccountMenuClose}\r\n        >\r\n          <MenuItem>\r\n            {this.props.isUserAdmin ? (\r\n              <VerifiedUserIcon className=\"Header-AdminIcon\" />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {this.props.user.displayName}\r\n          </MenuItem>\r\n          <MenuItem onClick={this.handleChangeFocus}>Profile</MenuItem>\r\n          <MenuItem onClick={this.props.handleLogout}>Logout</MenuItem>\r\n        </Menu>\r\n      </AppBar>\r\n    );\r\n  };\r\n}\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport firebase from \"./Firebase\";\r\nimport \"./stylesheets/Profile.css\";\r\nconst db = firebase.firestore();\r\n\r\nclass Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isChangeDisplayNameExpanded: false,\r\n      newUsername: \"\",\r\n      isChangeEmailExpanded: false,\r\n      newEmail: \"\",\r\n      newEmailPassword: \"\",\r\n      isChangePasswordExpanded: false,\r\n      oldPassword: \"\",\r\n      newPassword: \"\",\r\n      newPasswordConfirm: \"\",\r\n      isChangeAdminKeysExpanded: false,\r\n      newAdminKey: \"\",\r\n      isDeleteAccountExpanded: false,\r\n      deletePassword: \"\",\r\n      adminKey: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.unSubAdminKeys = db\r\n      .collection(\"AdminKeys\")\r\n      .where(\"Keys\", \"!=\", [])\r\n      .onSnapshot((querySnapshot) => {\r\n        const docs = [];\r\n        querySnapshot.forEach((doc) => docs.push(doc.data()));\r\n        if (docs[0]) {\r\n          this.setState(() => {\r\n            return { adminKey: docs[0].Keys };\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  componentWillUnmount = () => {\r\n    this.unSubAdminKeys();\r\n  };\r\n\r\n  handleChangeFocus = () => {\r\n    this.props.handleChangeFocus(\r\n      this.props.isUserAdmin ? \"Inventory\" : \"Library\"\r\n    );\r\n  };\r\n\r\n  handleInputChange = (e) => {\r\n    const name = e.target.getAttribute(\"name\");\r\n    const value = e.target.value;\r\n    this.setState(() => {\r\n      return {\r\n        [name]: value,\r\n      };\r\n    });\r\n  };\r\n\r\n  handleChangeDisplayNameExpandedToggle = (e, isExpanded) => {\r\n    this.setState(() => {\r\n      return { isChangeDisplayNameExpanded: isExpanded };\r\n    });\r\n  };\r\n\r\n  handleChangeDisplayNameSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.user\r\n      .updateProfile({\r\n        displayName: this.state.newUsername,\r\n      })\r\n      .then(() => {\r\n        this.setState(\r\n          () => {\r\n            return { newUsername: \"\", isChangeDisplayNameExpanded: false };\r\n          },\r\n          () => {\r\n            this.props.handleSnackbarOpen(\"Username Updated.\");\r\n          }\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        this.props.handleSnackbarOpen(error.message);\r\n      });\r\n  };\r\n\r\n  handleChangeEmailExpandedToggle = (e, isExpanded) => {\r\n    this.setState(() => {\r\n      return { isChangeEmailExpanded: isExpanded };\r\n    });\r\n  };\r\n\r\n  handleChangeEmailSubmit = (e) => {\r\n    e.preventDefault();\r\n    const credential = firebase.auth.EmailAuthProvider.credential(\r\n      this.props.user.email,\r\n      this.state.newEmailPassword\r\n    );\r\n    this.props.user\r\n      .reauthenticateWithCredential(credential)\r\n      .then(() => {\r\n        this.props.user\r\n          .updateEmail(this.state.newEmail)\r\n          .then(() => {\r\n            this.props.user\r\n              .sendEmailVerification()\r\n              .then(() => {\r\n                this.setState(\r\n                  () => {\r\n                    return {\r\n                      newEmail: \"\",\r\n                      newPassword: \"\",\r\n                      isChangeEmailExpanded: false,\r\n                    };\r\n                  },\r\n                  () => {\r\n                    this.props.handleSnackbarOpen(\r\n                      \"Email Updated. Verify New Email Address.\"\r\n                    );\r\n                    window.location.reload();\r\n                  }\r\n                );\r\n              })\r\n              .catch((error) => {\r\n                this.props.handleSnackbarOpen(error.message);\r\n              });\r\n          })\r\n          .catch((error) => {\r\n            this.props.handleSnackbarOpen(error.message);\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        this.props.handleSnackbarOpen(error.message);\r\n      });\r\n  };\r\n\r\n  handleChangePasswordExpandedToggle = (e, isExpanded) => {\r\n    this.setState(() => {\r\n      return { isChangePasswordExpanded: isExpanded };\r\n    });\r\n  };\r\n\r\n  handleChangePasswordSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (this.state.newPassword === this.state.newPasswordConfirm) {\r\n      const credential = firebase.auth.EmailAuthProvider.credential(\r\n        this.props.user.email,\r\n        this.state.oldPassword\r\n      );\r\n      this.props.user\r\n        .reauthenticateWithCredential(credential)\r\n        .then(() => {\r\n          this.props.user\r\n            .updatePassword(this.state.newPassword)\r\n            .then(() => {\r\n              this.setState(\r\n                () => {\r\n                  return {\r\n                    oldPassword: \"\",\r\n                    newPassword: \"\",\r\n                    newPasswordConfirm: \"\",\r\n                    isChangePasswordExpanded: false,\r\n                  };\r\n                },\r\n                () => {\r\n                  this.props.handleSnackbarOpen(\"Password Updated.\");\r\n                }\r\n              );\r\n            })\r\n            .catch((error) => {\r\n              this.props.handleSnackbarOpen(error.message);\r\n            });\r\n        })\r\n        .catch((error) => {\r\n          this.props.handleSnackbarOpen(error.message);\r\n        });\r\n    } else {\r\n      this.props.handleSnackbarOpen(\"New Passwords do not match.\");\r\n    }\r\n  };\r\n\r\n  handleChangeAdminKeysExpandedToggle = (e, isExpanded) => {\r\n    this.setState(() => {\r\n      return { isChangeAdminKeysExpanded: isExpanded };\r\n    });\r\n  };\r\n\r\n  handleChangeAdminKeysSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    db.collection(\"AdminKeys\")\r\n      .where(\"Keys\", \"!=\", [])\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        const docs = [];\r\n        querySnapshot.forEach((doc) => docs.push(doc.ref));\r\n        if (docs[0]) {\r\n          docs[0]\r\n            .update({ Keys: this.state.newAdminKey })\r\n            .then(() => {\r\n              this.setState(\r\n                () => {\r\n                  return {\r\n                    newAdminKey: \"\",\r\n                    isChangeAdminKeysExpanded: false,\r\n                  };\r\n                },\r\n                () => {\r\n                  this.props.handleSnackbarOpen(\"Updated AdminKey.\");\r\n                }\r\n              );\r\n            })\r\n            .catch((error) => {\r\n              this.props.handleSnackbarOpen(error.message);\r\n            });\r\n        } else {\r\n          this.props.handleSnackbarOpen(\"Error while fetching AdminKey.\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.props.handleSnackbarOpen(error.message);\r\n      });\r\n  };\r\n\r\n  handleDeleteAccountExpandedToggle = (e, isExpanded) => {\r\n    this.setState(() => {\r\n      return { isDeleteAccountExpanded: isExpanded };\r\n    });\r\n  };\r\n\r\n  handleDeleteAccountSubmit = (e) => {\r\n    e.preventDefault();\r\n    const credential = firebase.auth.EmailAuthProvider.credential(\r\n      this.props.user.email,\r\n      this.state.deletePassword\r\n    );\r\n    this.props.user\r\n      .reauthenticateWithCredential(credential)\r\n      .then(() => {\r\n        db.collection(\"Users\")\r\n          .doc(this.props.user.uid)\r\n          .delete()\r\n          .then(() => {\r\n            this.props.user.delete().catch((error) => {\r\n              this.props.handleSnackbarOpen(error.message);\r\n            });\r\n          })\r\n          .catch((error) => {\r\n            this.props.handleSnackbarOpen(error.message);\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        this.props.handleSnackbarOpen(error.message);\r\n      });\r\n  };\r\n\r\n  render = () => {\r\n    return (\r\n      <div className=\"Profile\">\r\n        <div className=\"Profile-BackButtonContainer\">\r\n          <Button onClick={this.handleChangeFocus}>\r\n            Back to {this.props.isUserAdmin ? \"Inventory\" : \"Library\"}\r\n          </Button>\r\n        </div>\r\n\r\n        <div className=\"Profile-AccordionContainer\">\r\n          <Accordion\r\n            expanded={this.state.isChangeDisplayNameExpanded}\r\n            onChange={this.handleChangeDisplayNameExpandedToggle}\r\n          >\r\n            <AccordionSummary\r\n              expandIcon={\r\n                !this.state.isChangeDisplayNameExpanded ? (\r\n                  <EditIcon />\r\n                ) : (\r\n                  <CloseIcon />\r\n                )\r\n              }\r\n            >\r\n              <Typography>Username</Typography>\r\n              <Typography>{this.props.user.displayName}</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              <form\r\n                className=\"Profile-AccordionForm\"\r\n                onSubmit={this.handleChangeDisplayNameSubmit}\r\n              >\r\n                <TextField\r\n                  label=\"New Username\"\r\n                  name=\"newUsername\"\r\n                  value={this.state.newUsername}\r\n                  onChange={this.handleInputChange}\r\n                  required\r\n                ></TextField>\r\n                <Button type=\"submit\">Submit</Button>\r\n              </form>\r\n            </AccordionDetails>\r\n          </Accordion>\r\n\r\n          <Accordion\r\n            expanded={this.state.isChangeEmailExpanded}\r\n            onChange={this.handleChangeEmailExpandedToggle}\r\n          >\r\n            <AccordionSummary\r\n              expandIcon={\r\n                !this.state.isChangeEmailExpanded ? <EditIcon /> : <CloseIcon />\r\n              }\r\n            >\r\n              <Typography>Email</Typography>\r\n              <Typography>{this.props.user.email}</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              <form\r\n                className=\"Profile-AccordionForm\"\r\n                onSubmit={this.handleChangeEmailSubmit}\r\n              >\r\n                <TextField\r\n                  label=\"New Email\"\r\n                  name=\"newEmail\"\r\n                  value={this.state.newEmail}\r\n                  onChange={this.handleInputChange}\r\n                  required\r\n                ></TextField>\r\n                <TextField\r\n                  label=\"Password\"\r\n                  name=\"newEmailPassword\"\r\n                  value={this.state.newEmailPassword}\r\n                  onChange={this.handleInputChange}\r\n                  type=\"password\"\r\n                  required\r\n                ></TextField>\r\n                <Button type=\"submit\">Submit</Button>\r\n              </form>\r\n            </AccordionDetails>\r\n          </Accordion>\r\n\r\n          <Accordion\r\n            expanded={this.state.isChangePasswordExpanded}\r\n            onChange={this.handleChangePasswordExpandedToggle}\r\n          >\r\n            <AccordionSummary\r\n              expandIcon={\r\n                !this.state.isChangePasswordExpanded ? (\r\n                  <EditIcon />\r\n                ) : (\r\n                  <CloseIcon />\r\n                )\r\n              }\r\n            >\r\n              <Typography>Password</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              <form\r\n                className=\"Profile-AccordionForm\"\r\n                onSubmit={this.handleChangePasswordSubmit}\r\n              >\r\n                <TextField\r\n                  label=\"Current Password\"\r\n                  name=\"oldPassword\"\r\n                  value={this.state.oldPassword}\r\n                  onChange={this.handleInputChange}\r\n                  type=\"password\"\r\n                  required\r\n                ></TextField>\r\n                <TextField\r\n                  label=\"New Password\"\r\n                  name=\"newPassword\"\r\n                  value={this.state.newPassword}\r\n                  onChange={this.handleInputChange}\r\n                  type=\"password\"\r\n                  required\r\n                ></TextField>\r\n                <TextField\r\n                  label=\"Confirm New Password\"\r\n                  name=\"newPasswordConfirm\"\r\n                  value={this.state.newPasswordConfirm}\r\n                  onChange={this.handleInputChange}\r\n                  type=\"password\"\r\n                  required\r\n                ></TextField>\r\n                <Button type=\"submit\">Submit</Button>\r\n              </form>\r\n            </AccordionDetails>\r\n          </Accordion>\r\n\r\n          {this.props.isUserAdmin ? (\r\n            <Accordion\r\n              expanded={this.state.isChangeAdminKeysExpanded}\r\n              onChange={this.handleChangeAdminKeysExpandedToggle}\r\n            >\r\n              <AccordionSummary\r\n                expandIcon={\r\n                  !this.state.isChangeAdminKeysExpanded ? (\r\n                    <EditIcon />\r\n                  ) : (\r\n                    <CloseIcon />\r\n                  )\r\n                }\r\n              >\r\n                <Typography>Admin Key</Typography>\r\n                <Typography>{this.state.adminKey}</Typography>\r\n              </AccordionSummary>\r\n              <AccordionDetails>\r\n                <form\r\n                  className=\"Profile-AccordionForm\"\r\n                  onSubmit={this.handleChangeAdminKeysSubmit}\r\n                >\r\n                  <TextField\r\n                    label=\"New Admin Key\"\r\n                    name=\"newAdminKey\"\r\n                    value={this.state.newAdminKey}\r\n                    onChange={this.handleInputChange}\r\n                    type=\"password\"\r\n                    required\r\n                  ></TextField>\r\n                  <Button type=\"submit\">Submit</Button>\r\n                </form>\r\n              </AccordionDetails>\r\n            </Accordion>\r\n          ) : null}\r\n\r\n          <Accordion\r\n            expanded={this.state.isDeleteAccountExpanded}\r\n            onChange={this.handleDeleteAccountExpandedToggle}\r\n          >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n              <Typography>Delete Account</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              <form\r\n                className=\"Profile-AccordionForm\"\r\n                onSubmit={this.handleDeleteAccountSubmit}\r\n              >\r\n                <TextField\r\n                  label=\"Password\"\r\n                  name=\"deletePassword\"\r\n                  value={this.state.deletePassword}\r\n                  onChange={this.handleInputChange}\r\n                  type=\"password\"\r\n                  required\r\n                ></TextField>\r\n                <Button type=\"submit\" color=\"secondary\">\r\n                  Delete Account\r\n                </Button>\r\n              </form>\r\n            </AccordionDetails>\r\n          </Accordion>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n}\r\nexport default Profile;\r\n","export default __webpack_public_path__ + \"static/media/defaultBook.3309b0ae.png\";","import React, { Component } from \"react\";\r\nimport {\r\n  Typography,\r\n  TableContainer,\r\n  Paper,\r\n  TableHead,\r\n  TableRow,\r\n  Table,\r\n  TableCell,\r\n  TableBody,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  Button,\r\n  InputAdornment,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport firebase from \"./Firebase\";\r\nimport defaultBook from \"./images/defaultBook.png\";\r\nimport \"./stylesheets/Library.css\";\r\nconst db = firebase.firestore();\r\nconst numOfAllowedBooks = 3;\r\n\r\nclass Library extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      library: [],\r\n      dontShow: [],\r\n      isRequestDialogOpen: false,\r\n      requestId: \"\",\r\n      fineRemaining: false,\r\n      searchValue: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.unSubInventory = db\r\n      .collection(\"Inventory\")\r\n      .where(\"quantity\", \">\", 0)\r\n      .onSnapshot((querySnapshot) => {\r\n        let library = [];\r\n        querySnapshot.forEach(async (doc) => {\r\n          const url =\r\n            \"https://www.googleapis.com/books/v1/volumes/\" + doc.data().id;\r\n          try {\r\n            const result = await fetch(url);\r\n            const apiData = await result.json();\r\n            if (apiData) {\r\n              library.push({\r\n                ...apiData,\r\n                quantity: doc.data().quantity,\r\n                price: doc.data().price,\r\n              });\r\n              this.setState(() => {\r\n                return { library };\r\n              });\r\n            } else {\r\n              // this error will not occur unless googleapi deletes a book id.\r\n              this.props.handleSnackbarOpen(\"Book Id not found.\");\r\n            }\r\n          } catch (error) {\r\n            this.props.handleSnackbarOpen(error.message);\r\n          }\r\n        });\r\n        this.setState(() => {\r\n          return { library };\r\n        });\r\n      });\r\n\r\n    this.unSubDontShow = db\r\n      .collection(\"Requests\")\r\n      .where(\"userID\", \"==\", this.props.user.uid)\r\n      .onSnapshot((querySnapshot) => {\r\n        let dontShow = [];\r\n        let docs = [];\r\n        querySnapshot.forEach((doc) => docs.push(doc.data()));\r\n        if (\r\n          docs.some((ele) => {\r\n            return (\r\n              ele.history[ele.history.length - 1].status === \"lost\" ||\r\n              (ele.history[ele.history.length - 1].status === \"collected\" &&\r\n                this.getDays(\r\n                  ele.history[ele.history.length - 1].time.toDate(),\r\n                  new Date(Date.now())\r\n                ) > 7)\r\n            );\r\n          })\r\n        ) {\r\n          this.setState(() => {\r\n            return {\r\n              fineRemaining: true,\r\n            };\r\n          });\r\n        } else {\r\n          docs.forEach((doc) => {\r\n            if (\r\n              doc.history[doc.history.length - 1].status === \"pending\" ||\r\n              doc.history[doc.history.length - 1].status === \"approved\" ||\r\n              doc.history[doc.history.length - 1].status === \"collected\"\r\n            ) {\r\n              dontShow.push(doc.bookID);\r\n            }\r\n          });\r\n          this.setState(() => {\r\n            return {\r\n              dontShow,\r\n              fineRemaining: false,\r\n            };\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  componentWillUnmount = () => {\r\n    this.unSubInventory();\r\n    this.unSubDontShow();\r\n  };\r\n\r\n  handleDialogClose = () => {\r\n    this.setState(() => {\r\n      return { isRequestDialogOpen: false, requestId: \"\" };\r\n    });\r\n  };\r\n\r\n  handleRequestDialogOpen = (id) => {\r\n    this.setState(() => {\r\n      return {\r\n        isRequestDialogOpen: true,\r\n        requestId: id,\r\n      };\r\n    });\r\n  };\r\n\r\n  handleRequest = () => {\r\n    db.collection(\"Requests\")\r\n      .where(\"userID\", \"==\", this.props.user.uid)\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        const docs = [];\r\n        querySnapshot.forEach((doc) => docs.push(doc.data()));\r\n        if (\r\n          docs.some((ele) => {\r\n            return (\r\n              ele.history[ele.history.length - 1].status === \"lost\" ||\r\n              (ele.history[ele.history.length - 1].status === \"collected\" &&\r\n                this.getDays(\r\n                  ele.history[ele.history.length - 1].time.toDate(),\r\n                  new Date(Date.now())\r\n                ) > 7)\r\n            );\r\n          })\r\n        ) {\r\n          this.handleDialogClose();\r\n          this.props.handleSnackbarOpen(\"Please Pay the Fine.\");\r\n        } else if (\r\n          docs.filter(\r\n            (ele) =>\r\n              ele.history[ele.history.length - 1].status === \"pending\" ||\r\n              ele.history[ele.history.length - 1].status === \"approved\" ||\r\n              ele.history[ele.history.length - 1].status === \"collected\"\r\n          ).length >= numOfAllowedBooks\r\n        ) {\r\n          this.handleDialogClose();\r\n          this.props.handleSnackbarOpen(\"Request Limit Exceeded.\");\r\n        } else if (\r\n          docs.filter((ele) => ele.bookID === this.state.requestId).length > 0\r\n        ) {\r\n          let sameBookUserRequest = docs.filter(\r\n            (ele) => ele.bookID === this.state.requestId\r\n          );\r\n          if (\r\n            sameBookUserRequest.some(\r\n              (ele) => ele.history[ele.history.length - 1].status === \"pending\"\r\n            )\r\n          ) {\r\n            this.handleDialogClose();\r\n            this.props.handleSnackbarOpen(\"Book Already Requested\");\r\n          } else if (\r\n            sameBookUserRequest.some(\r\n              (ele) => ele.history[ele.history.length - 1].status === \"approved\"\r\n            )\r\n          ) {\r\n            this.handleDialogClose();\r\n            this.props.handleSnackbarOpen(\"Book is Ready to collect.\");\r\n          } else if (\r\n            sameBookUserRequest.some(\r\n              (ele) =>\r\n                ele.history[ele.history.length - 1].status === \"collected\"\r\n            )\r\n          ) {\r\n            this.handleDialogClose();\r\n            this.props.handleSnackbarOpen(\"Please Return this Book first.\");\r\n          } else {\r\n            db.collection(\"Requests\")\r\n              .add({\r\n                userID: this.props.user.uid,\r\n                bookID: this.state.requestId,\r\n                history: [\r\n                  {\r\n                    status: \"pending\",\r\n                    time: firebase.firestore.Timestamp.fromDate(\r\n                      new Date(Date.now())\r\n                    ),\r\n                  },\r\n                ],\r\n              })\r\n              .then(() => {\r\n                this.handleDialogClose();\r\n                this.props.handleSnackbarOpen(\"Request Sent to Admin.\");\r\n              })\r\n              .catch((error) => {\r\n                this.handleDialogClose();\r\n                this.props.handleSnackbarOpen(error.message);\r\n              });\r\n          }\r\n        } else {\r\n          db.collection(\"Requests\")\r\n            .add({\r\n              userID: this.props.user.uid,\r\n              bookID: this.state.requestId,\r\n              history: [\r\n                {\r\n                  status: \"pending\",\r\n                  time: firebase.firestore.Timestamp.fromDate(\r\n                    new Date(Date.now())\r\n                  ),\r\n                },\r\n              ],\r\n            })\r\n            .then(() => {\r\n              this.handleDialogClose();\r\n              this.props.handleSnackbarOpen(\"Request Sent to Admin.\");\r\n            })\r\n            .catch((error) => {\r\n              this.handleDialogClose();\r\n              this.props.handleSnackbarOpen(error.message);\r\n            });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.handleDialogClose();\r\n        this.props.handleSnackbarOpen(error.message);\r\n      });\r\n  };\r\n\r\n  getDays = (date1, date2) => {\r\n    const diffTime = Math.abs(date2 - date1);\r\n    const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24));\r\n    return diffDays;\r\n  };\r\n\r\n  handleInputChange = (e) => {\r\n    const name = e.target.getAttribute(\"name\");\r\n    const value = e.target.value;\r\n    this.setState(() => {\r\n      return {\r\n        [name]: value,\r\n      };\r\n    });\r\n  };\r\n\r\n  render = () => {\r\n    return (\r\n      <div className=\"Library\">\r\n        <Typography variant=\"h3\">Library</Typography>\r\n        {this.state.library.length > 0 && !this.state.fineRemaining && (\r\n          <div className=\"Library-Container\">\r\n            <TextField\r\n              variant=\"outlined\"\r\n              value={this.state.searchValue}\r\n              name=\"searchValue\"\r\n              onChange={this.handleInputChange}\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <SearchIcon />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n            <TableContainer component={Paper}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell></TableCell>\r\n                    <TableCell>Title</TableCell>\r\n                    <TableCell>Authors</TableCell>\r\n                    <TableCell>Publisher</TableCell>\r\n                    <TableCell>Published Date</TableCell>\r\n                    <TableCell></TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {this.state.library\r\n                    .filter((ele) => {\r\n                      return this.state.searchValue\r\n                        ? ele.volumeInfo.title\r\n                            .toLowerCase()\r\n                            .indexOf(this.state.searchValue.toLowerCase()) !==\r\n                            -1 ||\r\n                          (ele.volumeInfo.publisher &&\r\n                            ele.volumeInfo.publisher\r\n                              .toLowerCase()\r\n                              .indexOf(this.state.searchValue.toLowerCase()) !==\r\n                              -1) ||\r\n                          ele.volumeInfo.authors\r\n                            .join(\" \")\r\n                            .toLowerCase()\r\n                            .indexOf(this.state.searchValue.toLowerCase()) !==\r\n                            -1\r\n                          ? true\r\n                          : false\r\n                        : true;\r\n                    })\r\n                    .map((book) => {\r\n                      return (\r\n                        this.state.dontShow.indexOf(book.id) === -1 && (\r\n                          <TableRow key={book.id}>\r\n                            <TableCell>\r\n                              <img\r\n                                src={\r\n                                  book.volumeInfo.imageLinks\r\n                                    ? book.volumeInfo.imageLinks.thumbnail\r\n                                    : defaultBook\r\n                                }\r\n                                alt={book.title}\r\n                              ></img>\r\n                            </TableCell>\r\n                            <TableCell>\r\n                              {book.volumeInfo.title\r\n                                ? book.volumeInfo.title\r\n                                : \"\"}\r\n                            </TableCell>\r\n                            <TableCell>\r\n                              {book.volumeInfo.authors\r\n                                ? book.volumeInfo.authors.join(\", \")\r\n                                : \"\"}\r\n                            </TableCell>\r\n                            <TableCell>\r\n                              {book.volumeInfo.publisher\r\n                                ? book.volumeInfo.publisher\r\n                                : \"\"}\r\n                            </TableCell>\r\n                            <TableCell>\r\n                              {book.volumeInfo.publishedDate\r\n                                ? book.volumeInfo.publishedDate\r\n                                : \"\"}\r\n                            </TableCell>\r\n\r\n                            <TableCell>\r\n                              <IconButton\r\n                                onClick={() => {\r\n                                  this.handleRequestDialogOpen(book.id);\r\n                                }}\r\n                                disabled={\r\n                                  this.state.dontShow.length >=\r\n                                  numOfAllowedBooks\r\n                                }\r\n                              >\r\n                                <AddIcon />\r\n                              </IconButton>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        )\r\n                      );\r\n                    })}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </div>\r\n        )}\r\n        {this.state.fineRemaining && (\r\n          <Typography color=\"secondary\" variant=\"h4\">\r\n            Please Pay the fine.\r\n          </Typography>\r\n        )}\r\n        <Dialog\r\n          open={this.state.isRequestDialogOpen}\r\n          onClose={this.handleDialogClose}\r\n        >\r\n          <DialogTitle>Confirm Request to Borrow.</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              The price of this book is ₹\r\n              {this.state.isRequestDialogOpen\r\n                ? this.state.library.find(\r\n                    (book) => book.id === this.state.requestId\r\n                  ).price\r\n                : \"\"}\r\n              . If unable to return the book within 7 days a fine of ₹10/week\r\n              will be charged.\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleDialogClose} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={this.handleRequest} color=\"primary\">\r\n              Confirm\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default Library;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Drawer as MUIDrawer,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport StorageIcon from \"@material-ui/icons/Storage\";\r\nimport StoreIcon from \"@material-ui/icons/Store\";\r\nimport PlaylistAddCheckIcon from \"@material-ui/icons/PlaylistAddCheck\";\r\nimport HistoryIcon from \"@material-ui/icons/History\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport MenuBookIcon from \"@material-ui/icons/MenuBook\";\r\n\r\nclass Drawer extends Component {\r\n  handleInventoryClick = () => {\r\n    this.props.handleChangeFocus(\"Inventory\");\r\n    this.props.handleDrawerClose();\r\n  };\r\n\r\n  handleLibraryClick = () => {\r\n    this.props.handleChangeFocus(\"Library\");\r\n    this.props.handleDrawerClose();\r\n  };\r\n\r\n  handleRequestsClick = () => {\r\n    this.props.handleChangeFocus(\"Requests\");\r\n    this.props.handleDrawerClose();\r\n  };\r\n\r\n  handleHistoryClick = () => {\r\n    this.props.handleChangeFocus(\"History\");\r\n    this.props.handleDrawerClose();\r\n  };\r\n\r\n  handleUserNotificationsClick = () => {\r\n    this.props.handleChangeFocus(\"UserNotifications\");\r\n    this.props.handleDrawerClose();\r\n  };\r\n\r\n  handleEbooksClick = () => {\r\n    this.props.handleChangeFocus(\"Ebooks\");\r\n    this.props.handleDrawerClose();\r\n  };\r\n\r\n  render = () => {\r\n    return (\r\n      <MUIDrawer\r\n        anchor=\"left\"\r\n        open={this.props.isDrawerOpen}\r\n        onClose={this.props.handleDrawerClose}\r\n        className=\"Drawer\"\r\n      >\r\n        <List>\r\n          {this.props.isUserAdmin && (\r\n            <ListItem\r\n              button\r\n              key=\"Inventory\"\r\n              onClick={this.handleInventoryClick}\r\n            >\r\n              <ListItemIcon>\r\n                <StorageIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Inventory\" />\r\n            </ListItem>\r\n          )}\r\n          {!this.props.isUserAdmin && (\r\n            <ListItem button key=\"Library\" onClick={this.handleLibraryClick}>\r\n              <ListItemIcon>\r\n                <StoreIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Library\" />\r\n            </ListItem>\r\n          )}\r\n          {this.props.isUserAdmin && (\r\n            <ListItem button key=\"Requests\" onClick={this.handleRequestsClick}>\r\n              <ListItemIcon>\r\n                <PlaylistAddCheckIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Requests\" />\r\n            </ListItem>\r\n          )}\r\n          {!this.props.isUserAdmin && (\r\n            <ListItem\r\n              button\r\n              key=\"UserNotifications\"\r\n              onClick={this.handleUserNotificationsClick}\r\n            >\r\n              <ListItemIcon>\r\n                <NotificationsIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Notifications\" />\r\n            </ListItem>\r\n          )}\r\n          {!this.props.isUserAdmin && (\r\n            <ListItem button key=\"History\" onClick={this.handleHistoryClick}>\r\n              <ListItemIcon>\r\n                <HistoryIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"History\" />\r\n            </ListItem>\r\n          )}\r\n          {!this.props.isUserAdmin && (\r\n            <ListItem button key=\"Ebooks\" onClick={this.handleEbooksClick}>\r\n              <ListItemIcon>\r\n                <MenuBookIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Ebooks\" />\r\n            </ListItem>\r\n          )}\r\n        </List>\r\n      </MUIDrawer>\r\n    );\r\n  };\r\n}\r\n\r\nexport default Drawer;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Typography,\r\n  Paper,\r\n  Button,\r\n  TextField,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Table,\r\n  TableCell,\r\n  TableBody,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport BooksAPIKey from \"./BooksAPIKey\";\r\nimport defaultBook from \"./images/defaultBook.png\";\r\nimport firebase from \"./Firebase\";\r\nimport \"./stylesheets/Inventory.css\";\r\nconst db = firebase.firestore();\r\n\r\nclass Inventory extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      addItem: false,\r\n      searchTitle: \"\",\r\n      searchAuthor: \"\",\r\n      searchPublisher: \"\",\r\n      searchISBN: \"\",\r\n      searchResult: [],\r\n      isAddDialogOpen: false,\r\n      addId: \"\",\r\n      addQuantity: \"\",\r\n      addPrice: \"\",\r\n      inventory: [],\r\n      isEditDialogOpen: false,\r\n      editId: \"\",\r\n      editQuantity: \"\",\r\n      editPrice: \"\",\r\n      isDeleteDialogOpen: false,\r\n      idToBeDeleted: \"\",\r\n      lostBooks: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.unsubInventoryListener = db\r\n      .collection(\"Inventory\")\r\n      .onSnapshot((querySnapshot) => {\r\n        let inventory = [];\r\n        querySnapshot.forEach(async (doc) => {\r\n          const url =\r\n            \"https://www.googleapis.com/books/v1/volumes/\" + doc.data().id;\r\n          try {\r\n            const result = await fetch(url);\r\n            const apiData = await result.json();\r\n            if (apiData) {\r\n              inventory.push({\r\n                ...apiData,\r\n                quantity: doc.data().quantity,\r\n                price: doc.data().price,\r\n              });\r\n              this.setState(() => {\r\n                return { inventory };\r\n              });\r\n            } else {\r\n              // this error will not occur unless googleapi deletes a book id.\r\n              this.props.handleSnackbarOpen(\"Book Id not found.\");\r\n            }\r\n          } catch (error) {\r\n            this.props.handleSnackbarOpen(error.message);\r\n          }\r\n        });\r\n        this.setState(() => {\r\n          return { inventory };\r\n        });\r\n      });\r\n    this.unSubRequestListener = db\r\n      .collection(\"Requests\")\r\n      .onSnapshot((querySnapshot) => {\r\n        const lostBooks = [];\r\n        querySnapshot.forEach((doc) => {\r\n          let allStatus = doc.data().history.map((ele) => ele.status);\r\n          if (allStatus.indexOf(\"lost\") !== -1 && !doc.data().isRestocked) {\r\n            lostBooks.push({ ...doc.data() });\r\n          }\r\n        });\r\n        this.setState(() => {\r\n          return { lostBooks };\r\n        });\r\n      });\r\n  };\r\n\r\n  componentWillUnmount = () => {\r\n    this.unsubInventoryListener();\r\n    this.unSubRequestListener();\r\n  };\r\n\r\n  handleInputChange = (e) => {\r\n    const name = e.target.getAttribute(\"name\");\r\n    const value = e.target.value;\r\n    this.setState(() => {\r\n      return {\r\n        [name]: value,\r\n      };\r\n    });\r\n  };\r\n\r\n  toggleAddItem = () => {\r\n    this.setState((curState) => {\r\n      return { addItem: !curState.addItem };\r\n    });\r\n  };\r\n\r\n  handleSearchSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      !this.state.searchTitle &&\r\n      !this.state.searchAuthor &&\r\n      !this.state.searchPublisher &&\r\n      !this.state.searchISBN\r\n    ) {\r\n      this.props.handleSnackbarOpen(\"Please Enter at least 1 field.\");\r\n    } else {\r\n      let url = \"https://www.googleapis.com/books/v1/volumes?q=\";\r\n      if (this.state.searchTitle) {\r\n        url += `intitle:${this.state.searchTitle}`;\r\n      }\r\n      if (this.state.searchAuthor) {\r\n        if (this.state.searchTitle) {\r\n          url += `+inauthor:${this.state.searchAuthor}`;\r\n        } else {\r\n          url += `inauthor:${this.state.searchAuthor}`;\r\n        }\r\n      }\r\n      if (this.state.searchPublisher) {\r\n        if (this.state.searchTitle || this.state.searchAuthor) {\r\n          url += `+inpublisher:${this.state.searchPublisher}`;\r\n        } else {\r\n          url += `inpublisher:${this.state.searchPublisher}`;\r\n        }\r\n      }\r\n      if (this.state.searchISBN) {\r\n        if (\r\n          this.state.searchTitle ||\r\n          this.state.searchAuthor ||\r\n          this.state.searchPublisher\r\n        ) {\r\n          url += `+isbn:${this.state.searchISBN}`;\r\n        } else {\r\n          url += `isbn:${this.state.searchISBN}`;\r\n        }\r\n      }\r\n      url += `&key=${BooksAPIKey}`;\r\n      try {\r\n        const result = await fetch(url);\r\n        const data = await result.json();\r\n        if (data.items) {\r\n          this.setState(() => {\r\n            return { searchResult: data.items };\r\n          });\r\n        } else {\r\n          this.props.handleSnackbarOpen(\"No results found.\");\r\n        }\r\n      } catch (error) {\r\n        this.props.handleSnackbarOpen(error.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  handleDialogClose = () => {\r\n    this.setState(() => {\r\n      return {\r\n        isAddDialogOpen: false,\r\n        isEditDialogOpen: false,\r\n        isDeleteDialogOpen: false,\r\n        addId: \"\",\r\n        editId: \"\",\r\n        idToBeDeleted: \"\",\r\n      };\r\n    });\r\n  };\r\n\r\n  handleAddItemDialogOpen = (id) => {\r\n    this.setState(() => {\r\n      return { addId: id, isAddDialogOpen: true };\r\n    });\r\n  };\r\n\r\n  handleAddSubmit = (e) => {\r\n    e.preventDefault();\r\n    db.collection(\"Inventory\")\r\n      .where(\"id\", \"==\", this.state.addId)\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        const docs = [];\r\n        querySnapshot.forEach((doc) => docs.push(doc));\r\n        if (docs.length > 0) {\r\n          this.handleDialogClose();\r\n          this.props.handleSnackbarOpen(\"Duplicate Item.\");\r\n        } else {\r\n          db.collection(\"Inventory\")\r\n            .add({\r\n              id: this.state.addId,\r\n              quantity: parseInt(this.state.addQuantity),\r\n              price: parseFloat(this.state.addPrice),\r\n            })\r\n            .then(() => {\r\n              this.setState(\r\n                () => {\r\n                  return {\r\n                    isAddDialogOpen: false,\r\n                    addQuantity: \"\",\r\n                    addPrice: \"\",\r\n                    addId: \"\",\r\n                    addItem: false,\r\n                    searchTitle: \"\",\r\n                    searchAuthor: \"\",\r\n                    searchPublisher: \"\",\r\n                    searchISBN: \"\",\r\n                    searchResult: [],\r\n                  };\r\n                },\r\n                () => {\r\n                  this.props.handleSnackbarOpen(\"Added to Inventory\");\r\n                }\r\n              );\r\n            })\r\n            .catch((error) => {\r\n              this.handleDialogClose();\r\n              this.props.handleSnackbarOpen(error.message);\r\n            });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.handleDialogClose();\r\n        this.props.handleSnackbarOpen(error.message);\r\n      });\r\n  };\r\n\r\n  handleEditItemDialogOpen = (id) => {\r\n    this.setState((curState) => {\r\n      const editQuantity = curState.inventory.find((ele) => ele.id === id)\r\n        .quantity;\r\n      const editPrice = curState.inventory.find((ele) => ele.id === id).price;\r\n      return { editId: id, isEditDialogOpen: true, editQuantity, editPrice };\r\n    });\r\n  };\r\n\r\n  handleEditSubmit = (e) => {\r\n    e.preventDefault();\r\n    db.collection(\"Inventory\")\r\n      .where(\"id\", \"==\", this.state.editId)\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        const docs = [];\r\n        querySnapshot.forEach((doc) => docs.push(doc.ref));\r\n        if (docs.length > 0) {\r\n          docs[0]\r\n            .update({\r\n              quantity: parseInt(this.state.editQuantity),\r\n              price: parseFloat(this.state.editPrice),\r\n            })\r\n            .then(() => {\r\n              this.setState(\r\n                () => {\r\n                  return {\r\n                    isEditDialogOpen: false,\r\n                    editQuantity: \"\",\r\n                    editPrice: \"\",\r\n                    editId: \"\",\r\n                  };\r\n                },\r\n                () => {\r\n                  this.props.handleSnackbarOpen(\"Updated Inventory\");\r\n                }\r\n              );\r\n            })\r\n            .catch((error) => {\r\n              this.handleDialogClose();\r\n              this.props.handleSnackbarOpen(error.message);\r\n            });\r\n        } else {\r\n          this.handleDialogClose();\r\n          // will not occur.\r\n          this.props.handleSnackbarOpen(\"Unexpected Error.\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.handleDialogClose();\r\n        this.props.handleSnackbarOpen(error.message);\r\n      });\r\n  };\r\n\r\n  handleDeleteDialogOpen = (id) => {\r\n    this.setState(() => {\r\n      return {\r\n        isDeleteDialogOpen: true,\r\n        idToBeDeleted: id,\r\n      };\r\n    });\r\n  };\r\n\r\n  handleDeleteItem = () => {\r\n    db.collection(\"Inventory\")\r\n      .where(\"id\", \"==\", this.state.idToBeDeleted)\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        const docs = [];\r\n        querySnapshot.forEach((doc) => docs.push(doc.ref));\r\n        db.collection(\"Requests\")\r\n          .where(\"bookID\", \"==\", this.state.idToBeDeleted)\r\n          .get()\r\n          .then((querySnapshot2) => {\r\n            const docs2 = [];\r\n            querySnapshot2.forEach((doc) => docs2.push(doc.ref));\r\n            if (docs2.length === 0) {\r\n              docs[0]\r\n                .delete()\r\n                .then(() => {\r\n                  this.setState(\r\n                    () => {\r\n                      return {\r\n                        isDeleteDialogOpen: false,\r\n                        idToBeDeleted: \"\",\r\n                      };\r\n                    },\r\n                    () => {\r\n                      this.props.handleSnackbarOpen(\r\n                        \"Item successfully deleted!\"\r\n                      );\r\n                    }\r\n                  );\r\n                })\r\n                .catch((error) => {\r\n                  this.handleDialogClose();\r\n                  this.props.handleSnackbarOpen(error.message);\r\n                });\r\n            } else {\r\n              this.handleDialogClose();\r\n              this.props.handleSnackbarOpen(\r\n                \"Cannot delete item to preserve records.\"\r\n              );\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            this.handleDialogClose();\r\n            this.props.handleSnackbarOpen(error.message);\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        this.handleDialogClose();\r\n        this.props.handleSnackbarOpen(error.message);\r\n      });\r\n  };\r\n\r\n  getDays = (date1, date2) => {\r\n    const diffTime = Math.abs(date2 - date1);\r\n    const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24));\r\n    return diffDays;\r\n  };\r\n\r\n  handleRestock = (seconds, bookID, userID) => {\r\n    db.collection(\"Inventory\")\r\n      .where(\"id\", \"==\", bookID)\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        const docs = [];\r\n        querySnapshot.forEach((doc) => docs.push(doc.ref));\r\n        docs[0]\r\n          .update({\r\n            quantity: firebase.firestore.FieldValue.increment(1),\r\n          })\r\n          .then(() => {\r\n            db.collection(\"Requests\")\r\n              .where(\"bookID\", \"==\", bookID)\r\n              .where(\"userID\", \"==\", userID)\r\n              .get()\r\n              .then((querySnapshot2) => {\r\n                const docs2 = [];\r\n                querySnapshot2.forEach((doc) => {\r\n                  if (\r\n                    doc.data().history.find((ele) => ele.status === \"lost\") &&\r\n                    doc.data().history.find((ele) => ele.status === \"lost\").time\r\n                      .seconds === seconds\r\n                  ) {\r\n                    docs2.push(doc.ref);\r\n                  }\r\n                });\r\n                docs2[0]\r\n                  .update({\r\n                    isRestocked: true,\r\n                  })\r\n                  .then(() => {\r\n                    this.props.handleSnackbarOpen(\r\n                      `${\r\n                        this.state.inventory.find((ele) => ele.id === bookID)\r\n                          .volumeInfo.title\r\n                      } restocked.`\r\n                    );\r\n                  })\r\n                  .catch((error) => {\r\n                    this.handleDialogClose();\r\n                    this.props.handleSnackbarOpen(error.message);\r\n                  });\r\n              })\r\n              .catch((error) => {\r\n                this.handleDialogClose();\r\n                this.props.handleSnackbarOpen(error.message);\r\n              });\r\n          })\r\n          .catch((error) => {\r\n            this.handleDialogClose();\r\n            this.props.handleSnackbarOpen(error.message);\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        this.props.handleSnackbarOpen(error.message);\r\n      });\r\n  };\r\n\r\n  render = () => {\r\n    return (\r\n      <div className=\"Inventory\">\r\n        <Typography variant=\"h3\">Inventory</Typography>\r\n        <Paper className=\"Inventory-AddItem\">\r\n          <Button onClick={this.toggleAddItem}>Add Book</Button>\r\n          {this.state.addItem && (\r\n            <div>\r\n              <form\r\n                onSubmit={this.handleSearchSubmit}\r\n                className=\"Inventory-AddItemForm\"\r\n              >\r\n                <Typography variant=\"h4\">Search for a book</Typography>\r\n                <TextField\r\n                  label=\"Title\"\r\n                  name=\"searchTitle\"\r\n                  value={this.state.searchTitle}\r\n                  onChange={this.handleInputChange}\r\n                ></TextField>\r\n                <TextField\r\n                  label=\"Author\"\r\n                  name=\"searchAuthor\"\r\n                  value={this.state.searchAuthor}\r\n                  onChange={this.handleInputChange}\r\n                ></TextField>\r\n                <TextField\r\n                  label=\"Publisher\"\r\n                  name=\"searchPublisher\"\r\n                  value={this.state.searchPublisher}\r\n                  onChange={this.handleInputChange}\r\n                ></TextField>\r\n                <TextField\r\n                  label=\"ISBN\"\r\n                  InputProps={{\r\n                    inputProps: { pattern: \"[0-9]{10}|[0-9]{13}\" },\r\n                  }}\r\n                  name=\"searchISBN\"\r\n                  value={this.state.searchISBN}\r\n                  onChange={this.handleInputChange}\r\n                ></TextField>\r\n\r\n                <Button type=\"submit\">Search</Button>\r\n              </form>\r\n              {this.state.searchResult.length > 0 && (\r\n                <TableContainer component={Paper}>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell></TableCell>\r\n                        <TableCell>Title</TableCell>\r\n                        <TableCell>Authors</TableCell>\r\n                        <TableCell>Publisher</TableCell>\r\n                        <TableCell>Category</TableCell>\r\n                        <TableCell>Published Date</TableCell>\r\n                        <TableCell>Number of Pages</TableCell>\r\n                        <TableCell></TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {this.state.searchResult.map((result) => {\r\n                        return (\r\n                          <TableRow key={result.id}>\r\n                            <TableCell>\r\n                              <img\r\n                                src={\r\n                                  result.volumeInfo.imageLinks\r\n                                    ? result.volumeInfo.imageLinks.thumbnail\r\n                                    : defaultBook\r\n                                }\r\n                                alt={result.title}\r\n                              ></img>\r\n                            </TableCell>\r\n                            <TableCell>\r\n                              {result.volumeInfo.title\r\n                                ? result.volumeInfo.title\r\n                                : \"\"}\r\n                            </TableCell>\r\n                            <TableCell>\r\n                              {result.volumeInfo.authors\r\n                                ? result.volumeInfo.authors.join(\", \")\r\n                                : \"\"}\r\n                            </TableCell>\r\n                            <TableCell>\r\n                              {result.volumeInfo.publisher\r\n                                ? result.volumeInfo.publisher\r\n                                : \"\"}\r\n                            </TableCell>\r\n                            <TableCell>\r\n                              {result.volumeInfo.categories\r\n                                ? result.volumeInfo.categories.join(\", \")\r\n                                : \"\"}\r\n                            </TableCell>\r\n                            <TableCell>\r\n                              {result.volumeInfo.publishedDate\r\n                                ? result.volumeInfo.publishedDate\r\n                                : \"\"}\r\n                            </TableCell>\r\n                            <TableCell>\r\n                              {result.volumeInfo.pageCount\r\n                                ? result.volumeInfo.pageCount\r\n                                : \"\"}\r\n                            </TableCell>\r\n                            <TableCell>\r\n                              <IconButton\r\n                                onClick={() => {\r\n                                  this.handleAddItemDialogOpen(result.id);\r\n                                }}\r\n                              >\r\n                                <AddIcon />\r\n                              </IconButton>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        );\r\n                      })}\r\n                    </TableBody>\r\n                  </Table>\r\n                  <Typography>\r\n                    Please search for specific terms if unable to find required\r\n                    book.\r\n                  </Typography>\r\n                </TableContainer>\r\n              )}\r\n            </div>\r\n          )}\r\n        </Paper>\r\n        {this.state.inventory.length > 0 && (\r\n          <TableContainer component={Paper}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell></TableCell>\r\n                  <TableCell>Title</TableCell>\r\n                  <TableCell>Authors</TableCell>\r\n                  <TableCell>Publisher</TableCell>\r\n                  <TableCell>Published Date</TableCell>\r\n                  <TableCell>Price (₹)</TableCell>\r\n                  <TableCell>Quantity</TableCell>\r\n                  <TableCell></TableCell>\r\n                  <TableCell></TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {this.state.inventory.map((book) => {\r\n                  return (\r\n                    <TableRow key={book.id}>\r\n                      <TableCell>\r\n                        <img\r\n                          src={\r\n                            book.volumeInfo.imageLinks\r\n                              ? book.volumeInfo.imageLinks.thumbnail\r\n                              : defaultBook\r\n                          }\r\n                          alt={book.volumeInfo.title}\r\n                        ></img>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        {book.volumeInfo.title ? book.volumeInfo.title : \"\"}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        {book.volumeInfo.authors\r\n                          ? book.volumeInfo.authors.join(\", \")\r\n                          : \"\"}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        {book.volumeInfo.publisher\r\n                          ? book.volumeInfo.publisher\r\n                          : \"\"}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        {book.volumeInfo.publishedDate\r\n                          ? book.volumeInfo.publishedDate\r\n                          : \"\"}\r\n                      </TableCell>\r\n                      <TableCell>{book.price ? book.price : \"\"}</TableCell>\r\n                      <TableCell>\r\n                        {book.quantity > -1 ? book.quantity : \"\"}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <IconButton\r\n                          onClick={() => {\r\n                            this.handleEditItemDialogOpen(book.id);\r\n                          }}\r\n                        >\r\n                          <EditIcon />\r\n                        </IconButton>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <IconButton\r\n                          onClick={() => {\r\n                            this.handleDeleteDialogOpen(book.id);\r\n                          }}\r\n                          color=\"secondary\"\r\n                        >\r\n                          <DeleteIcon />\r\n                        </IconButton>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        )}\r\n        {this.state.lostBooks.length > 0 && (\r\n          <TableContainer component={Paper}>\r\n            <Typography variant=\"h4\">Restock lost books</Typography>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Title</TableCell>\r\n                  <TableCell>Price (₹)</TableCell>\r\n                  <TableCell>User ID</TableCell>\r\n                  <TableCell>Reimbursed</TableCell>\r\n                  <TableCell>Lost Date</TableCell>\r\n                  <TableCell></TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {this.state.lostBooks.map((lostBook) => {\r\n                  return (\r\n                    <TableRow\r\n                      key={\r\n                        lostBook.history.find((ele) => ele.status === \"lost\")\r\n                          .time.seconds\r\n                      }\r\n                    >\r\n                      <TableCell>\r\n                        {this.state.inventory.find(\r\n                          (ele) => ele.id === lostBook.bookID\r\n                        ) &&\r\n                          this.state.inventory.find(\r\n                            (ele) => ele.id === lostBook.bookID\r\n                          ).volumeInfo.title}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        {this.state.inventory.find(\r\n                          (ele) => ele.id === lostBook.bookID\r\n                        ) &&\r\n                          this.state.inventory.find(\r\n                            (ele) => ele.id === lostBook.bookID\r\n                          ).price}\r\n                      </TableCell>\r\n                      <TableCell>{lostBook.userID}</TableCell>\r\n                      <TableCell>\r\n                        {lostBook.history[lostBook.history.length - 1]\r\n                          .status === \"returned\" ? (\r\n                          <CheckCircleIcon color=\"primary\" />\r\n                        ) : (\r\n                          <CancelIcon color=\"secondary\" />\r\n                        )}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        {\"(\" +\r\n                          this.getDays(\r\n                            lostBook.history\r\n                              .find((ele) => ele.status === \"lost\")\r\n                              .time.toDate(),\r\n                            new Date(Date.now())\r\n                          ) +\r\n                          \" Days ago) \" +\r\n                          lostBook.history\r\n                            .find((ele) => ele.status === \"lost\")\r\n                            .time.toDate()\r\n                            .toLocaleDateString()}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Button\r\n                          onClick={() =>\r\n                            this.handleRestock(\r\n                              lostBook.history.find(\r\n                                (ele) => ele.status === \"lost\"\r\n                              ).time.seconds,\r\n                              lostBook.bookID,\r\n                              lostBook.userID\r\n                            )\r\n                          }\r\n                        >\r\n                          Restock\r\n                        </Button>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        )}\r\n        <Dialog\r\n          open={this.state.isAddDialogOpen}\r\n          onClose={this.handleDialogClose}\r\n        >\r\n          <form onSubmit={this.handleAddSubmit}>\r\n            <DialogTitle>Add to inventory</DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText>\r\n                {this.state.isAddDialogOpen\r\n                  ? this.state.searchResult.find(\r\n                      (ele) => ele.id === this.state.addId\r\n                    ).volumeInfo.title\r\n                  : \"\"}\r\n              </DialogContentText>\r\n              <TextField\r\n                required\r\n                type=\"number\"\r\n                value={this.state.addQuantity}\r\n                onChange={this.handleInputChange}\r\n                name=\"addQuantity\"\r\n                label=\"Quantity\"\r\n                InputProps={{ inputProps: { min: 0 } }}\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                required\r\n                type=\"number\"\r\n                value={this.state.addPrice}\r\n                onChange={this.handleInputChange}\r\n                name=\"addPrice\"\r\n                label=\"Price (₹)\"\r\n                InputProps={{ inputProps: { min: 0, step: \"any\" } }}\r\n                fullWidth\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={this.handleDialogClose} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n              <Button color=\"primary\" type=\"submit\">\r\n                Add\r\n              </Button>\r\n            </DialogActions>\r\n          </form>\r\n        </Dialog>\r\n        <Dialog\r\n          open={this.state.isEditDialogOpen}\r\n          onClose={this.handleDialogClose}\r\n        >\r\n          <form onSubmit={this.handleEditSubmit}>\r\n            <DialogTitle>Edit inventory</DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText>\r\n                {this.state.isEditDialogOpen &&\r\n                this.state.inventory.find((ele) => ele.id === this.state.editId)\r\n                  ? this.state.inventory.find(\r\n                      (ele) => ele.id === this.state.editId\r\n                    ).volumeInfo.title\r\n                  : \"\"}\r\n              </DialogContentText>\r\n              <TextField\r\n                required\r\n                type=\"number\"\r\n                value={this.state.editQuantity}\r\n                onChange={this.handleInputChange}\r\n                name=\"editQuantity\"\r\n                label=\"Quantity\"\r\n                InputProps={{ inputProps: { min: 0 } }}\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                required\r\n                type=\"number\"\r\n                value={this.state.editPrice}\r\n                onChange={this.handleInputChange}\r\n                name=\"editPrice\"\r\n                label=\"Price (₹)\"\r\n                InputProps={{ inputProps: { min: 0, step: \"any\" } }}\r\n                fullWidth\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={this.handleDialogClose} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n              <Button color=\"primary\" type=\"submit\">\r\n                Save\r\n              </Button>\r\n            </DialogActions>\r\n          </form>\r\n        </Dialog>\r\n        <Dialog\r\n          open={this.state.isDeleteDialogOpen}\r\n          onClose={this.handleDialogClose}\r\n        >\r\n          <DialogTitle>Confirm Deletion.</DialogTitle>\r\n          <DialogActions>\r\n            <Button onClick={this.handleDialogClose} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={this.handleDeleteItem} color=\"secondary\">\r\n              Delete\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default Inventory;\r\n","const BooksAPIKey = \"AIzaSyBBYCDggpHEho-sMOj_HxvgSC2wetbSUB8\";\r\nexport default BooksAPIKey;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  TableContainer,\r\n  Typography,\r\n  Paper,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport firebase from \"./Firebase\";\r\nimport \"./stylesheets/Requests.css\";\r\nconst db = firebase.firestore();\r\n\r\nclass Requests extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      requests: [],\r\n      isApproveRejectDialogOpen: false,\r\n      toApproveReject: {},\r\n      approveRejectReason: \"\",\r\n      isCollectCancelDialogOpen: false,\r\n      toCollectCancel: {},\r\n      collectCancelReason: \"\",\r\n      isReturnConfirmDialogOpen: false,\r\n      toReturnConfirm: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.unSubRequests = db\r\n      .collection(\"Requests\")\r\n      .onSnapshot((querySnapshot) => {\r\n        const requests = [];\r\n        let fineUsers = [];\r\n        querySnapshot.forEach(async (doc) => {\r\n          const status = doc.data().history[doc.data().history.length - 1]\r\n            .status;\r\n          if (\r\n            status === \"pending\" ||\r\n            status === \"approved\" ||\r\n            status === \"collected\" ||\r\n            status === \"lost\"\r\n          ) {\r\n            try {\r\n              const url =\r\n                \"https://www.googleapis.com/books/v1/volumes/\" +\r\n                doc.data().bookID;\r\n              const result = await fetch(url);\r\n              const apiData = await result.json();\r\n              db.collection(\"Inventory\")\r\n                .where(\"id\", \"==\", doc.data().bookID)\r\n                .get()\r\n                .then((querySnapshot2) => {\r\n                  const docs2 = [];\r\n                  querySnapshot2.forEach((doc) => docs2.push(doc.data()));\r\n                  requests.push({\r\n                    price: docs2[0].price,\r\n                    title: apiData.volumeInfo.title,\r\n                    ...doc.data(),\r\n                    status,\r\n                  });\r\n                  this.setState(() => {\r\n                    return { requests };\r\n                  });\r\n                })\r\n                .catch((error) => {\r\n                  this.props.handleSnackbarOpen(error.message);\r\n                });\r\n            } catch (error) {\r\n              this.props.handleSnackbarOpen(error.message);\r\n            }\r\n          }\r\n\r\n          if (\r\n            (status === \"collected\" &&\r\n              this.getDays(\r\n                doc\r\n                  .data()\r\n                  .history.find((ele) => {\r\n                    return ele.status === \"collected\";\r\n                  })\r\n                  .time.toDate(),\r\n                new Date(Date.now())\r\n              ) > 7) ||\r\n            status === \"lost\"\r\n          ) {\r\n            fineUsers.push(doc.data().userID);\r\n          }\r\n        });\r\n        fineUsers = [...new Set(fineUsers)];\r\n        this.setState(() => {\r\n          return { requests, fineUsers };\r\n        });\r\n      });\r\n  };\r\n\r\n  componentWillUnmount = () => {\r\n    this.unSubRequests();\r\n  };\r\n\r\n  toTitleCase = (str) => {\r\n    return str.replace(/\\w\\S*/g, (txt) => {\r\n      return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\r\n    });\r\n  };\r\n\r\n  handleDialogClose = () => {\r\n    this.setState(() => {\r\n      return {\r\n        isApproveRejectDialogOpen: false,\r\n        toApproveReject: {},\r\n        approveRejectReason: \"\",\r\n        isCollectCancelDialogOpen: false,\r\n        toCollectCancel: {},\r\n        collectCancelReason: \"\",\r\n        isReturnConfirmDialogOpen: false,\r\n        toReturnConfirm: {},\r\n      };\r\n    });\r\n  };\r\n\r\n  handleApproveAccept = (bookID, userID, title) => {\r\n    if (this.state.fineUsers.indexOf(userID) === -1) {\r\n      db.collection(\"Requests\")\r\n        .where(\"bookID\", \"==\", bookID)\r\n        .where(\"userID\", \"==\", userID)\r\n        .get()\r\n        .then((querySnapshot) => {\r\n          const docs = [];\r\n          querySnapshot.forEach((doc) => {\r\n            const status = doc.data().history[doc.data().history.length - 1]\r\n              .status;\r\n            if (status === \"pending\") {\r\n              docs.push(doc.ref);\r\n            }\r\n          });\r\n          docs[0]\r\n            .update({\r\n              history: firebase.firestore.FieldValue.arrayUnion({\r\n                status: \"approved\",\r\n                time: firebase.firestore.Timestamp.fromDate(\r\n                  new Date(Date.now())\r\n                ),\r\n              }),\r\n            })\r\n            .then(() => {\r\n              db.collection(\"Inventory\")\r\n                .where(\"id\", \"==\", bookID)\r\n                .get()\r\n                .then((querySnapshot2) => {\r\n                  const docs2 = [];\r\n                  querySnapshot2.forEach((doc) => docs2.push(doc.ref));\r\n                  docs2[0]\r\n                    .update({\r\n                      quantity: firebase.firestore.FieldValue.increment(-1),\r\n                    })\r\n                    .then(() => {\r\n                      db.collection(\"Notifications\")\r\n                        .add({\r\n                          userID,\r\n                          message: `${title} has been approved by Admin for you to borrow and is now ready for collection.`,\r\n                          time: firebase.firestore.Timestamp.fromDate(\r\n                            new Date(Date.now())\r\n                          ),\r\n                        })\r\n                        .then(() => {\r\n                          this.props.handleSnackbarOpen(\r\n                            `${title} approved for ${userID}.`\r\n                          );\r\n                        })\r\n                        .catch((error) => {\r\n                          this.props.handleSnackbarOpen(error.message);\r\n                        });\r\n                    })\r\n                    .catch((error) => {\r\n                      this.props.handleSnackbarOpen(error.message);\r\n                    });\r\n                })\r\n                .catch((error) => {\r\n                  this.props.handleSnackbarOpen(error.message);\r\n                });\r\n            })\r\n            .catch((error) => {\r\n              this.props.handleSnackbarOpen(error.message);\r\n            });\r\n        })\r\n        .catch((error) => {\r\n          this.props.handleSnackbarOpen(error.message);\r\n        });\r\n    } else {\r\n      this.props.handleSnackbarOpen(\"User has pending fine.\");\r\n    }\r\n  };\r\n\r\n  handleApproveRejectDialogOpen = (bookID, userID, title) => {\r\n    this.setState(() => {\r\n      return {\r\n        isApproveRejectDialogOpen: true,\r\n        toApproveReject: { bookID, userID, title },\r\n      };\r\n    });\r\n  };\r\n\r\n  handleInputChange = (e) => {\r\n    const name = e.target.getAttribute(\"name\");\r\n    const value = e.target.value;\r\n    this.setState(() => {\r\n      return {\r\n        [name]: value,\r\n      };\r\n    });\r\n  };\r\n\r\n  handleApproveReject = (e) => {\r\n    e.preventDefault();\r\n    db.collection(\"Requests\")\r\n      .where(\"userID\", \"==\", this.state.toApproveReject.userID)\r\n      .where(\"bookID\", \"==\", this.state.toApproveReject.bookID)\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        const docs = [];\r\n        querySnapshot.forEach((doc) => {\r\n          const status = doc.data().history[doc.data().history.length - 1]\r\n            .status;\r\n          if (status === \"pending\") {\r\n            docs.push(doc.ref);\r\n          }\r\n        });\r\n        docs[0]\r\n          .update({\r\n            history: firebase.firestore.FieldValue.arrayUnion({\r\n              status: \"rejected\",\r\n              time: firebase.firestore.Timestamp.fromDate(new Date(Date.now())),\r\n            }),\r\n          })\r\n          .then(\r\n            db\r\n              .collection(\"Notifications\")\r\n              .add({\r\n                userID: this.state.toApproveReject.userID,\r\n                message: `${this.state.toApproveReject.title} has been Rejected by Admin for you to borrow for the following reason: ${this.state.approveRejectReason}`,\r\n                time: firebase.firestore.Timestamp.fromDate(\r\n                  new Date(Date.now())\r\n                ),\r\n              })\r\n              .then(() => {\r\n                this.props.handleSnackbarOpen(\r\n                  `${this.state.toApproveReject.title} rejected for ${this.state.toApproveReject.userID}.`\r\n                );\r\n                this.handleDialogClose();\r\n              })\r\n              .catch((error) => {\r\n                this.handleDialogClose();\r\n                this.props.handleSnackbarOpen(error.message);\r\n              })\r\n          )\r\n          .catch((error) => {\r\n            this.handleDialogClose();\r\n            this.props.handleSnackbarOpen(error.message);\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        this.handleDialogClose();\r\n        this.props.handleSnackbarOpen(error.message);\r\n      });\r\n  };\r\n\r\n  handleCollectAccept = (bookID, userID, title) => {\r\n    if (this.state.fineUsers.indexOf(userID) === -1) {\r\n      db.collection(\"Requests\")\r\n        .where(\"bookID\", \"==\", bookID)\r\n        .where(\"userID\", \"==\", userID)\r\n        .get()\r\n        .then((querySnapshot) => {\r\n          const docs = [];\r\n          querySnapshot.forEach((doc) => {\r\n            const status = doc.data().history[doc.data().history.length - 1]\r\n              .status;\r\n            if (status === \"approved\") {\r\n              docs.push(doc.ref);\r\n            }\r\n          });\r\n          docs[0]\r\n            .update({\r\n              history: firebase.firestore.FieldValue.arrayUnion({\r\n                status: \"collected\",\r\n                time: firebase.firestore.Timestamp.fromDate(\r\n                  new Date(Date.now())\r\n                ),\r\n              }),\r\n            })\r\n            .then(() => {\r\n              this.props.handleSnackbarOpen(`${title} collected by ${userID}.`);\r\n            })\r\n            .catch((error) => {\r\n              this.props.handleSnackbarOpen(error.message);\r\n            });\r\n        })\r\n        .catch((error) => {\r\n          this.props.handleSnackbarOpen(error.message);\r\n        });\r\n    } else {\r\n      this.props.handleSnackbarOpen(\"User has pending fine.\");\r\n    }\r\n  };\r\n\r\n  getDays = (date1, date2) => {\r\n    const diffTime = Math.abs(date2 - date1);\r\n    const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24));\r\n    return diffDays;\r\n  };\r\n\r\n  handleCollectCancelDialogOpen = (bookID, userID, title) => {\r\n    this.setState(() => {\r\n      return {\r\n        isCollectCancelDialogOpen: true,\r\n        toCollectCancel: { bookID, userID, title },\r\n      };\r\n    });\r\n  };\r\n\r\n  handleCollectCancel = (e) => {\r\n    e.preventDefault();\r\n    db.collection(\"Requests\")\r\n      .where(\"userID\", \"==\", this.state.toCollectCancel.userID)\r\n      .where(\"bookID\", \"==\", this.state.toCollectCancel.bookID)\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        const docs = [];\r\n        querySnapshot.forEach((doc) => {\r\n          const status = doc.data().history[doc.data().history.length - 1]\r\n            .status;\r\n          if (status === \"approved\") {\r\n            docs.push(doc.ref);\r\n          }\r\n        });\r\n        docs[0]\r\n          .update({\r\n            history: firebase.firestore.FieldValue.arrayUnion({\r\n              status: \"canceled\",\r\n              time: firebase.firestore.Timestamp.fromDate(new Date(Date.now())),\r\n            }),\r\n          })\r\n          .then(\r\n            db\r\n              .collection(\"Notifications\")\r\n              .add({\r\n                userID: this.state.toCollectCancel.userID,\r\n                message: `${this.state.toCollectCancel.title} has been canceled by Admin for you to borrow for the following reason: ${this.state.collectCancelReason}`,\r\n                time: firebase.firestore.Timestamp.fromDate(\r\n                  new Date(Date.now())\r\n                ),\r\n              })\r\n              .then(() => {\r\n                db.collection(\"Inventory\")\r\n                  .where(\"id\", \"==\", this.state.toCollectCancel.bookID)\r\n                  .get()\r\n                  .then((querySnapshot2) => {\r\n                    const docs2 = [];\r\n                    querySnapshot2.forEach((doc) => docs2.push(doc.ref));\r\n                    docs2[0]\r\n                      .update({\r\n                        quantity: firebase.firestore.FieldValue.increment(1),\r\n                      })\r\n                      .then(() => {\r\n                        this.props.handleSnackbarOpen(\r\n                          `${this.state.toCollectCancel.title} canceled for ${this.state.toCollectCancel.userID}.`\r\n                        );\r\n                        this.handleDialogClose();\r\n                      })\r\n                      .catch((error) => {\r\n                        this.props.handleSnackbarOpen(error.message);\r\n                      });\r\n                  })\r\n                  .catch((error) => {\r\n                    this.props.handleSnackbarOpen(error.message);\r\n                  });\r\n              })\r\n              .catch((error) => {\r\n                this.handleDialogClose();\r\n                this.props.handleSnackbarOpen(error.message);\r\n              })\r\n          )\r\n          .catch((error) => {\r\n            this.handleDialogClose();\r\n            this.props.handleSnackbarOpen(error.message);\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        this.handleDialogClose();\r\n        this.props.handleSnackbarOpen(error.message);\r\n      });\r\n  };\r\n\r\n  getFine = (date1, date2, price, status) => {\r\n    if (status === \"lost\") {\r\n      return 30 + parseFloat(price);\r\n    } else {\r\n      const diffDays = this.getDays(date1, date2);\r\n      if (diffDays <= 7) {\r\n        return 0;\r\n      } else if (diffDays <= 14) {\r\n        return 10;\r\n      } else if (diffDays <= 21) {\r\n        return 20;\r\n      } else if (diffDays <= 28) {\r\n        return 30;\r\n      } else {\r\n        return 30 + parseFloat(price);\r\n      }\r\n    }\r\n  };\r\n\r\n  handleReturnConfirmDialogOpen = (\r\n    bookID,\r\n    userID,\r\n    title,\r\n    history,\r\n    status,\r\n    price\r\n  ) => {\r\n    this.setState(() => {\r\n      return {\r\n        isReturnConfirmDialogOpen: true,\r\n        toReturnConfirm: { bookID, userID, title, history, status, price },\r\n      };\r\n    });\r\n  };\r\n\r\n  handleReturnConfirm = (e) => {\r\n    e.preventDefault();\r\n    db.collection(\"Requests\")\r\n      .where(\"userID\", \"==\", this.state.toReturnConfirm.userID)\r\n      .where(\"bookID\", \"==\", this.state.toReturnConfirm.bookID)\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        const docs = [];\r\n        querySnapshot.forEach((doc) => {\r\n          const status = doc.data().history[doc.data().history.length - 1]\r\n            .status;\r\n          if (status === \"lost\" || status === \"collected\") {\r\n            docs.push(doc.ref);\r\n          }\r\n        });\r\n        docs[0]\r\n          .update({\r\n            history: firebase.firestore.FieldValue.arrayUnion({\r\n              status: \"returned\",\r\n              time: firebase.firestore.Timestamp.fromDate(new Date(Date.now())),\r\n            }),\r\n          })\r\n          .then(() => {\r\n            if (this.state.toReturnConfirm.status === \"collected\") {\r\n              db.collection(\"Inventory\")\r\n                .where(\"id\", \"==\", this.state.toReturnConfirm.bookID)\r\n                .get()\r\n                .then((querySnapshot2) => {\r\n                  const docs2 = [];\r\n                  querySnapshot2.forEach((doc) => docs2.push(doc.ref));\r\n                  docs2[0]\r\n                    .update({\r\n                      quantity: firebase.firestore.FieldValue.increment(1),\r\n                    })\r\n                    .then(() => {\r\n                      this.props.handleSnackbarOpen(\r\n                        `${this.state.toReturnConfirm.title} returned by ${this.state.toReturnConfirm.userID}.`\r\n                      );\r\n                      this.handleDialogClose();\r\n                    })\r\n                    .catch((error) => {\r\n                      this.props.handleSnackbarOpen(error.message);\r\n                    });\r\n                })\r\n                .catch((error) => {\r\n                  this.props.handleSnackbarOpen(error.message);\r\n                });\r\n            } else {\r\n              this.props.handleSnackbarOpen(\r\n                `Fine for ${this.state.toReturnConfirm.title} paid by ${this.state.toReturnConfirm.userID}.`\r\n              );\r\n              this.handleDialogClose();\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            this.handleDialogClose();\r\n            this.props.handleSnackbarOpen(error.message);\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        this.handleDialogClose();\r\n        this.props.handleSnackbarOpen(error.message);\r\n      });\r\n  };\r\n\r\n  render = () => {\r\n    return (\r\n      <div className=\"Requests\">\r\n        <Typography variant=\"h3\">Requests</Typography>\r\n        {this.state.requests.filter((ele) => ele.status === \"pending\").length >\r\n          0 && (\r\n          <div>\r\n            <Typography variant=\"h5\">Not yet Approved</Typography>\r\n            <TableContainer component={Paper}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Book Title</TableCell>\r\n                    <TableCell>User ID</TableCell>\r\n                    <TableCell>Status</TableCell>\r\n                    <TableCell></TableCell>\r\n                    <TableCell></TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {this.state.requests\r\n                    .filter((ele) => ele.status === \"pending\")\r\n                    .map((request) => {\r\n                      return (\r\n                        <TableRow key={request.bookID + request.userID}>\r\n                          <TableCell>{request.title}</TableCell>\r\n                          <TableCell>{request.userID}</TableCell>\r\n                          <TableCell>\r\n                            {this.toTitleCase(request.status)}\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            <IconButton\r\n                              color=\"primary\"\r\n                              disabled={\r\n                                this.state.fineUsers.indexOf(request.userID) !==\r\n                                -1\r\n                              }\r\n                              onClick={() => {\r\n                                this.handleApproveAccept(\r\n                                  request.bookID,\r\n                                  request.userID,\r\n                                  request.title\r\n                                );\r\n                              }}\r\n                            >\r\n                              <CheckIcon />\r\n                            </IconButton>\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            <IconButton\r\n                              onClick={() => {\r\n                                this.handleApproveRejectDialogOpen(\r\n                                  request.bookID,\r\n                                  request.userID,\r\n                                  request.title\r\n                                );\r\n                              }}\r\n                              color=\"secondary\"\r\n                            >\r\n                              <CloseIcon />\r\n                            </IconButton>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      );\r\n                    })}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </div>\r\n        )}\r\n        {this.state.requests.filter((ele) => ele.status === \"approved\").length >\r\n          0 && (\r\n          <div>\r\n            <Typography variant=\"h5\">Not yet Collected</Typography>\r\n            <TableContainer component={Paper}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Book Title</TableCell>\r\n                    <TableCell>User ID</TableCell>\r\n                    <TableCell>Status</TableCell>\r\n                    <TableCell>Approved on</TableCell>\r\n                    <TableCell></TableCell>\r\n                    <TableCell></TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {this.state.requests\r\n                    .filter((ele) => ele.status === \"approved\")\r\n                    .map((request) => {\r\n                      return (\r\n                        <TableRow key={request.title + request.userID}>\r\n                          <TableCell>{request.title}</TableCell>\r\n                          <TableCell>{request.userID}</TableCell>\r\n                          <TableCell>\r\n                            {this.toTitleCase(request.status)}\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            {\"(\" +\r\n                              this.getDays(\r\n                                request.history[\r\n                                  request.history.length - 1\r\n                                ].time.toDate(),\r\n                                new Date(Date.now())\r\n                              ) +\r\n                              \" Days ago) \"}\r\n                            {request.history[request.history.length - 1].time\r\n                              .toDate()\r\n                              .toLocaleDateString()}\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            <IconButton\r\n                              color=\"primary\"\r\n                              disabled={\r\n                                this.state.fineUsers.indexOf(request.userID) !==\r\n                                -1\r\n                              }\r\n                              onClick={() => {\r\n                                this.handleCollectAccept(\r\n                                  request.bookID,\r\n                                  request.userID,\r\n                                  request.title\r\n                                );\r\n                              }}\r\n                            >\r\n                              <CheckIcon />\r\n                            </IconButton>\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            <IconButton\r\n                              color=\"secondary\"\r\n                              onClick={() => {\r\n                                this.handleCollectCancelDialogOpen(\r\n                                  request.bookID,\r\n                                  request.userID,\r\n                                  request.title\r\n                                );\r\n                              }}\r\n                            >\r\n                              <CloseIcon />\r\n                            </IconButton>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      );\r\n                    })}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </div>\r\n        )}\r\n        {this.state.requests.filter(\r\n          (ele) => ele.status === \"collected\" || ele.status === \"lost\"\r\n        ).length > 0 && (\r\n          <div>\r\n            <Typography variant=\"h5\">Not yet Returned</Typography>\r\n            <TableContainer component={Paper}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Book Title</TableCell>\r\n                    <TableCell>User ID</TableCell>\r\n                    <TableCell>Status</TableCell>\r\n                    <TableCell>Due Date</TableCell>\r\n                    <TableCell>Late Fees (₹)</TableCell>\r\n                    <TableCell></TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {this.state.requests\r\n                    .filter(\r\n                      (ele) =>\r\n                        ele.status === \"collected\" || ele.status === \"lost\"\r\n                    )\r\n                    .map((request) => {\r\n                      return (\r\n                        <TableRow key={request.title + request.userID}>\r\n                          <TableCell>{request.title}</TableCell>\r\n                          <TableCell>{request.userID}</TableCell>\r\n                          <TableCell>\r\n                            {this.toTitleCase(request.status)}\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            {new Date(\r\n                              request.history\r\n                                .find((ele) => {\r\n                                  return ele.status === \"collected\";\r\n                                })\r\n                                .time.toDate()\r\n                                .getTime() +\r\n                                7 * 24 * 60 * 60 * 1000\r\n                            ).toLocaleDateString()}\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            {this.getFine(\r\n                              request.history\r\n                                .find((ele) => {\r\n                                  return ele.status === \"collected\";\r\n                                })\r\n                                .time.toDate(),\r\n                              new Date(Date.now()),\r\n                              request.price,\r\n                              request.status\r\n                            )}\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            <IconButton\r\n                              color=\"primary\"\r\n                              onClick={() => {\r\n                                this.handleReturnConfirmDialogOpen(\r\n                                  request.bookID,\r\n                                  request.userID,\r\n                                  request.title,\r\n                                  request.history,\r\n                                  request.status,\r\n                                  request.price\r\n                                );\r\n                              }}\r\n                            >\r\n                              <CheckIcon />\r\n                            </IconButton>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      );\r\n                    })}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </div>\r\n        )}\r\n        <Dialog\r\n          open={this.state.isApproveRejectDialogOpen}\r\n          onClose={this.handleDialogClose}\r\n        >\r\n          <form onSubmit={this.handleApproveReject}>\r\n            <DialogTitle>Confirm Rejection</DialogTitle>\r\n            <DialogContent>\r\n              <Typography variant=\"h6\">\r\n                Title: {this.state.toApproveReject.title}{\" \"}\r\n              </Typography>\r\n              <Typography>\r\n                User ID: {this.state.toApproveReject.userID}{\" \"}\r\n              </Typography>\r\n\r\n              <TextField\r\n                value={this.state.approveRejectReason}\r\n                name=\"approveRejectReason\"\r\n                onChange={this.handleInputChange}\r\n                label=\"Reason\"\r\n                multiline\r\n                required\r\n              ></TextField>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={this.handleDialogClose} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n              <Button type=\"submit\" color=\"secondary\">\r\n                Reject\r\n              </Button>\r\n            </DialogActions>\r\n          </form>\r\n        </Dialog>\r\n\r\n        <Dialog\r\n          open={this.state.isCollectCancelDialogOpen}\r\n          onClose={this.handleDialogClose}\r\n        >\r\n          <form onSubmit={this.handleCollectCancel}>\r\n            <DialogTitle>Confirm Cancelation.</DialogTitle>\r\n            <DialogContent>\r\n              <Typography variant=\"h6\">\r\n                Title: {this.state.toCollectCancel.title}{\" \"}\r\n              </Typography>\r\n              <Typography>\r\n                User ID: {this.state.toCollectCancel.userID}{\" \"}\r\n              </Typography>\r\n\r\n              <TextField\r\n                value={this.state.collectCancelReason}\r\n                name=\"collectCancelReason\"\r\n                onChange={this.handleInputChange}\r\n                label=\"Reason\"\r\n                multiline\r\n                required\r\n              ></TextField>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={this.handleDialogClose} color=\"primary\">\r\n                Back\r\n              </Button>\r\n              <Button type=\"submit\" color=\"secondary\">\r\n                Cancel\r\n              </Button>\r\n            </DialogActions>\r\n          </form>\r\n        </Dialog>\r\n\r\n        <Dialog\r\n          open={this.state.isReturnConfirmDialogOpen}\r\n          onClose={this.handleDialogClose}\r\n        >\r\n          <form onSubmit={this.handleReturnConfirm}>\r\n            <DialogTitle>Confirm Return.</DialogTitle>\r\n            <DialogContent>\r\n              <Typography>\r\n                Title:{\" \"}\r\n                {this.state.isReturnConfirmDialogOpen &&\r\n                  this.state.toReturnConfirm.title}\r\n              </Typography>\r\n              <Typography>\r\n                Fine: ₹\r\n                {this.state.isReturnConfirmDialogOpen &&\r\n                  this.getFine(\r\n                    this.state.toReturnConfirm.history\r\n                      .find((ele) => {\r\n                        return ele.status === \"collected\";\r\n                      })\r\n                      .time.toDate(),\r\n                    new Date(Date.now()),\r\n                    this.state.toReturnConfirm.price,\r\n                    this.state.toReturnConfirm.status\r\n                  )}\r\n              </Typography>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={this.handleDialogClose} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n              <Button type=\"submit\" color=\"secondary\">\r\n                Confirm\r\n              </Button>\r\n            </DialogActions>\r\n          </form>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default Requests;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Typography,\r\n  TableContainer,\r\n  Paper,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  IconButton,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogActions,\r\n  DialogContent,\r\n} from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport firebase from \"./Firebase\";\r\nimport \"./stylesheets/History.css\";\r\nconst db = firebase.firestore();\r\n\r\nclass History extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      requests: [],\r\n      isApproveCancelDialogOpen: false,\r\n      toApproveCancel: {},\r\n      isCollectCancelDialogOpen: false,\r\n      toCollectCancel: {},\r\n      isReportLostDialogOpen: false,\r\n      toReportLost: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.unSubRequests = db\r\n      .collection(\"Requests\")\r\n      .where(\"userID\", \"==\", this.props.user.uid)\r\n      .onSnapshot((querySnapshot) => {\r\n        const requests = [];\r\n        querySnapshot.forEach(async (doc) => {\r\n          try {\r\n            const status = doc.data().history[doc.data().history.length - 1]\r\n              .status;\r\n            const url =\r\n              \"https://www.googleapis.com/books/v1/volumes/\" +\r\n              doc.data().bookID;\r\n            const result = await fetch(url);\r\n            const apiData = await result.json();\r\n            db.collection(\"Inventory\")\r\n              .where(\"id\", \"==\", doc.data().bookID)\r\n              .get()\r\n              .then((querySnapshot2) => {\r\n                const docs2 = [];\r\n                querySnapshot2.forEach((doc) => docs2.push(doc.data()));\r\n                requests.push({\r\n                  price: docs2[0].price,\r\n                  title: apiData.volumeInfo.title,\r\n                  ...doc.data(),\r\n                  status,\r\n                });\r\n                this.setState(() => {\r\n                  return { requests };\r\n                });\r\n              })\r\n              .catch((error) => {\r\n                this.props.handleSnackbarOpen(error.message);\r\n              });\r\n          } catch (error) {\r\n            this.props.handleSnackbarOpen(error.message);\r\n          }\r\n        });\r\n        this.setState(() => {\r\n          return { requests };\r\n        });\r\n      });\r\n  };\r\n\r\n  componentWillUnmount = () => {\r\n    this.unSubRequests();\r\n  };\r\n\r\n  toTitleCase = (str) => {\r\n    return str.replace(/\\w\\S*/g, (txt) => {\r\n      return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\r\n    });\r\n  };\r\n\r\n  getDays = (date1, date2) => {\r\n    const diffTime = Math.abs(date2 - date1);\r\n    const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24));\r\n    return diffDays;\r\n  };\r\n\r\n  getFine = (date1, date2, price, status) => {\r\n    if (status === \"lost\") {\r\n      return 30 + parseFloat(price);\r\n    } else {\r\n      const diffDays = this.getDays(date1, date2);\r\n      if (diffDays <= 7) {\r\n        return 0;\r\n      } else if (diffDays <= 14) {\r\n        return 10;\r\n      } else if (diffDays <= 21) {\r\n        return 20;\r\n      } else if (diffDays <= 28) {\r\n        return 30;\r\n      } else {\r\n        return 30 + parseFloat(price);\r\n      }\r\n    }\r\n  };\r\n\r\n  handleDialogClose = () => {\r\n    this.setState(() => {\r\n      return {\r\n        isApproveCancelDialogOpen: false,\r\n        toApproveCancel: {},\r\n        isCollectCancelDialogOpen: false,\r\n        toCollectCancel: {},\r\n        isReportLostDialogOpen: false,\r\n        toReportLost: {},\r\n      };\r\n    });\r\n  };\r\n\r\n  handleApproveCancelDialogOpen = (bookID, userID, title) => {\r\n    this.setState(() => {\r\n      return {\r\n        toApproveCancel: {\r\n          bookID,\r\n          userID,\r\n          title,\r\n        },\r\n        isApproveCancelDialogOpen: true,\r\n      };\r\n    });\r\n  };\r\n\r\n  handleApproveCancel = (e) => {\r\n    e.preventDefault();\r\n    db.collection(\"Requests\")\r\n      .where(\"bookID\", \"==\", this.state.toApproveCancel.bookID)\r\n      .where(\"userID\", \"==\", this.state.toApproveCancel.userID)\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        const docs = [];\r\n        querySnapshot.forEach((doc) => {\r\n          const status = doc.data().history[doc.data().history.length - 1]\r\n            .status;\r\n          if (status === \"pending\") {\r\n            docs.push(doc.ref);\r\n          }\r\n        });\r\n        docs[0]\r\n          .update({\r\n            history: firebase.firestore.FieldValue.arrayUnion({\r\n              status: \"canceled\",\r\n              time: firebase.firestore.Timestamp.fromDate(new Date(Date.now())),\r\n            }),\r\n          })\r\n          .then(() => {\r\n            this.props.handleSnackbarOpen(\r\n              `Request to borrow ${this.state.toApproveCancel.title} canceled.`\r\n            );\r\n            this.handleDialogClose();\r\n          })\r\n          .catch((error) => {\r\n            this.handleDialogClose();\r\n            this.props.handleSnackbarOpen(error.message);\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        this.handleDialogClose();\r\n        this.props.handleSnackbarOpen(error.message);\r\n      });\r\n  };\r\n\r\n  handleCollectCancelDialogOpen = (bookID, userID, title) => {\r\n    this.setState(() => {\r\n      return {\r\n        toCollectCancel: {\r\n          bookID,\r\n          userID,\r\n          title,\r\n        },\r\n        isCollectCancelDialogOpen: true,\r\n      };\r\n    });\r\n  };\r\n\r\n  handleCollectCancel = (e) => {\r\n    e.preventDefault();\r\n    db.collection(\"Requests\")\r\n      .where(\"bookID\", \"==\", this.state.toCollectCancel.bookID)\r\n      .where(\"userID\", \"==\", this.state.toCollectCancel.userID)\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        const docs = [];\r\n        querySnapshot.forEach((doc) => {\r\n          const status = doc.data().history[doc.data().history.length - 1]\r\n            .status;\r\n          if (status === \"approved\") {\r\n            docs.push(doc.ref);\r\n          }\r\n        });\r\n        docs[0]\r\n          .update({\r\n            history: firebase.firestore.FieldValue.arrayUnion({\r\n              status: \"canceled\",\r\n              time: firebase.firestore.Timestamp.fromDate(new Date(Date.now())),\r\n            }),\r\n          })\r\n          .then(() => {\r\n            db.collection(\"Inventory\")\r\n              .where(\"id\", \"==\", this.state.toCollectCancel.bookID)\r\n              .get()\r\n              .then((querySnapshot2) => {\r\n                const docs2 = [];\r\n                querySnapshot2.forEach((doc) => docs2.push(doc.ref));\r\n                docs2[0]\r\n                  .update({\r\n                    quantity: firebase.firestore.FieldValue.increment(1),\r\n                  })\r\n                  .then(() => {\r\n                    this.props.handleSnackbarOpen(\r\n                      `Request to borrow ${this.state.toApproveCancel.title} canceled.`\r\n                    );\r\n                    this.handleDialogClose();\r\n                  })\r\n                  .catch((error) => {\r\n                    this.handleDialogClose();\r\n                    this.props.handleSnackbarOpen(error.message);\r\n                  });\r\n              })\r\n              .catch((error) => {\r\n                this.handleDialogClose();\r\n                this.props.handleSnackbarOpen(error.message);\r\n              });\r\n          })\r\n          .catch((error) => {\r\n            this.handleDialogClose();\r\n            this.props.handleSnackbarOpen(error.message);\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        this.handleDialogClose();\r\n        this.props.handleSnackbarOpen(error.message);\r\n      });\r\n  };\r\n\r\n  handleReportLostDialogOpen = (\r\n    bookID,\r\n    userID,\r\n    title,\r\n    history,\r\n    status,\r\n    price\r\n  ) => {\r\n    this.setState(() => {\r\n      return {\r\n        toReportLost: {\r\n          bookID,\r\n          userID,\r\n          title,\r\n          history,\r\n          status,\r\n          price,\r\n        },\r\n        isReportLostDialogOpen: true,\r\n      };\r\n    });\r\n  };\r\n\r\n  handleReportLost = (e) => {\r\n    e.preventDefault();\r\n    db.collection(\"Requests\")\r\n      .where(\"bookID\", \"==\", this.state.toReportLost.bookID)\r\n      .where(\"userID\", \"==\", this.state.toReportLost.userID)\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        const docs = [];\r\n        querySnapshot.forEach((doc) => {\r\n          const status = doc.data().history[doc.data().history.length - 1]\r\n            .status;\r\n          if (status === \"collected\") {\r\n            docs.push(doc.ref);\r\n          }\r\n        });\r\n        docs[0]\r\n          .update({\r\n            history: firebase.firestore.FieldValue.arrayUnion({\r\n              status: \"lost\",\r\n              time: firebase.firestore.Timestamp.fromDate(new Date(Date.now())),\r\n            }),\r\n            isRestocked: false,\r\n          })\r\n          .then(() => {\r\n            this.props.handleSnackbarOpen(\r\n              `${this.state.toReportLost.title} reported as lost.`\r\n            );\r\n            this.handleDialogClose();\r\n          })\r\n          .catch((error) => {\r\n            this.handleDialogClose();\r\n            this.props.handleSnackbarOpen(error.message);\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        this.handleDialogClose();\r\n        this.props.handleSnackbarOpen(error.message);\r\n      });\r\n  };\r\n\r\n  render = () => {\r\n    let activity = [];\r\n    if (this.state.requests.length > 0) {\r\n      this.state.requests.forEach((ele) => {\r\n        ele.history.forEach((historyEle) => {\r\n          activity.push({ ...historyEle, title: ele.title });\r\n        });\r\n      });\r\n    }\r\n\r\n    return (\r\n      <div className=\"History\">\r\n        <Typography variant=\"h3\">History</Typography>\r\n\r\n        {this.state.requests.filter((ele) => ele.status === \"pending\").length >\r\n          0 && (\r\n          <div>\r\n            <Typography variant=\"h5\">Not yet Approved</Typography>\r\n            <TableContainer component={Paper}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Book Title</TableCell>\r\n                    <TableCell>Status</TableCell>\r\n                    <TableCell></TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {this.state.requests\r\n                    .filter((ele) => ele.status === \"pending\")\r\n                    .map((request) => {\r\n                      return (\r\n                        <TableRow key={request.bookID}>\r\n                          <TableCell>{request.title}</TableCell>\r\n                          <TableCell>\r\n                            {this.toTitleCase(request.status)}\r\n                          </TableCell>\r\n\r\n                          <TableCell>\r\n                            <IconButton\r\n                              onClick={() => {\r\n                                this.handleApproveCancelDialogOpen(\r\n                                  request.bookID,\r\n                                  request.userID,\r\n                                  request.title\r\n                                );\r\n                              }}\r\n                              color=\"secondary\"\r\n                            >\r\n                              <CloseIcon />\r\n                            </IconButton>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      );\r\n                    })}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </div>\r\n        )}\r\n\r\n        {this.state.requests.filter((ele) => ele.status === \"approved\").length >\r\n          0 && (\r\n          <div>\r\n            <Typography variant=\"h5\">Not yet Collected</Typography>\r\n            <TableContainer component={Paper}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Book Title</TableCell>\r\n                    <TableCell>Status</TableCell>\r\n                    <TableCell></TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {this.state.requests\r\n                    .filter((ele) => ele.status === \"approved\")\r\n                    .map((request) => {\r\n                      return (\r\n                        <TableRow key={request.title + request.userID}>\r\n                          <TableCell>{request.title}</TableCell>\r\n                          <TableCell>\r\n                            {this.toTitleCase(request.status)}\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            <IconButton\r\n                              color=\"secondary\"\r\n                              onClick={() => {\r\n                                this.handleCollectCancelDialogOpen(\r\n                                  request.bookID,\r\n                                  request.userID,\r\n                                  request.title\r\n                                );\r\n                              }}\r\n                            >\r\n                              <CloseIcon />\r\n                            </IconButton>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      );\r\n                    })}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </div>\r\n        )}\r\n\r\n        {this.state.requests.filter(\r\n          (ele) => ele.status === \"collected\" || ele.status === \"lost\"\r\n        ).length > 0 && (\r\n          <div>\r\n            <Typography variant=\"h5\">Not yet Returned</Typography>\r\n            <TableContainer component={Paper}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Book Title</TableCell>\r\n                    <TableCell>Status</TableCell>\r\n                    <TableCell>Due Date</TableCell>\r\n                    <TableCell>Fine (₹)</TableCell>\r\n                    <TableCell></TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {this.state.requests\r\n                    .filter(\r\n                      (ele) =>\r\n                        ele.status === \"collected\" || ele.status === \"lost\"\r\n                    )\r\n                    .map((request) => {\r\n                      return (\r\n                        <TableRow key={request.title + request.userID}>\r\n                          <TableCell>{request.title}</TableCell>\r\n                          <TableCell>\r\n                            {this.toTitleCase(request.status)}\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            {new Date(\r\n                              request.history\r\n                                .find((ele) => {\r\n                                  return ele.status === \"collected\";\r\n                                })\r\n                                .time.toDate()\r\n                                .getTime() +\r\n                                7 * 24 * 60 * 60 * 1000\r\n                            ).toLocaleDateString()}\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            {this.getFine(\r\n                              request.history\r\n                                .find((ele) => {\r\n                                  return ele.status === \"collected\";\r\n                                })\r\n                                .time.toDate(),\r\n                              new Date(Date.now()),\r\n                              request.price,\r\n                              request.status\r\n                            )}\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            {request.status === \"collected\" ? (\r\n                              <Button\r\n                                color=\"secondary\"\r\n                                onClick={() => {\r\n                                  this.handleReportLostDialogOpen(\r\n                                    request.bookID,\r\n                                    request.userID,\r\n                                    request.title,\r\n                                    request.history,\r\n                                    request.status,\r\n                                    request.price\r\n                                  );\r\n                                }}\r\n                              >\r\n                                Report Lost\r\n                              </Button>\r\n                            ) : null}\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      );\r\n                    })}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </div>\r\n        )}\r\n        {activity.length > 0 && (\r\n          <div>\r\n            <Typography variant=\"h5\">Activity</Typography>\r\n            <TableContainer component={Paper}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Book</TableCell>\r\n                    <TableCell>Status</TableCell>\r\n                    <TableCell>Date</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {activity\r\n                    .sort((a, b) => b.time.seconds - a.time.seconds)\r\n                    .map((ele) => {\r\n                      return (\r\n                        <TableRow key={ele.time.seconds}>\r\n                          <TableCell>{ele.title}</TableCell>\r\n                          <TableCell>{this.toTitleCase(ele.status)}</TableCell>\r\n                          <TableCell>\r\n                            {ele.time.toDate().toLocaleDateString()}\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      );\r\n                    })}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </div>\r\n        )}\r\n        <Dialog\r\n          open={this.state.isApproveCancelDialogOpen}\r\n          onClose={this.handleDialogClose}\r\n        >\r\n          <form onSubmit={this.handleApproveCancel}>\r\n            <DialogTitle>Confirm Cancelation.</DialogTitle>\r\n            <DialogContent>\r\n              <Typography>\r\n                Title:{\" \"}\r\n                {this.state.isApproveCancelDialogOpen &&\r\n                  this.state.toApproveCancel.title}\r\n              </Typography>\r\n              <Typography>Status: \"Pending\"</Typography>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={this.handleDialogClose} color=\"primary\">\r\n                Back\r\n              </Button>\r\n              <Button type=\"submit\" color=\"secondary\">\r\n                Cancel\r\n              </Button>\r\n            </DialogActions>\r\n          </form>\r\n        </Dialog>\r\n\r\n        <Dialog\r\n          open={this.state.isCollectCancelDialogOpen}\r\n          onClose={this.handleDialogClose}\r\n        >\r\n          <form onSubmit={this.handleCollectCancel}>\r\n            <DialogTitle>Confirm Cancelation.</DialogTitle>\r\n            <DialogContent>\r\n              <Typography>\r\n                Title:{\" \"}\r\n                {this.state.isCollectCancelDialogOpen &&\r\n                  this.state.toCollectCancel.title}\r\n              </Typography>\r\n              <Typography>Status: \"Approved\"</Typography>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={this.handleDialogClose} color=\"primary\">\r\n                Back\r\n              </Button>\r\n              <Button type=\"submit\" color=\"secondary\">\r\n                Cancel\r\n              </Button>\r\n            </DialogActions>\r\n          </form>\r\n        </Dialog>\r\n\r\n        <Dialog\r\n          open={this.state.isReportLostDialogOpen}\r\n          onClose={this.handleDialogClose}\r\n        >\r\n          <form onSubmit={this.handleReportLost}>\r\n            <DialogTitle>Report Book as Lost.</DialogTitle>\r\n            <DialogContent>\r\n              <Typography>\r\n                Title:{\" \"}\r\n                {this.state.isReportLostDialogOpen &&\r\n                  this.state.toReportLost.title}\r\n              </Typography>\r\n              <Typography>\r\n                A Fine of ₹30 added with the book MSRP of ₹\r\n                {this.state.toReportLost.price} = ₹\r\n                {this.state.isReportLostDialogOpen &&\r\n                  this.getFine(\r\n                    this.state.toReportLost.history\r\n                      .find((ele) => {\r\n                        return ele.status === \"collected\";\r\n                      })\r\n                      .time.toDate(),\r\n                    new Date(Date.now()),\r\n                    this.state.toReportLost.price,\r\n                    \"lost\"\r\n                  )}{\" \"}\r\n                will be charged. All of your current requests will be canceled\r\n                and you will not be able to request more books until the fine is\r\n                paid.\r\n              </Typography>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={this.handleDialogClose} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n              <Button type=\"submit\" color=\"secondary\">\r\n                Report Lost\r\n              </Button>\r\n            </DialogActions>\r\n          </form>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default History;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Paper,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport firebase from \"./Firebase\";\r\nimport \"./stylesheets/UserNotifications.css\";\r\nconst db = firebase.firestore();\r\n\r\nclass UserNotifications extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { notifications: [] };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.unSubNotifications = db\r\n      .collection(\"Notifications\")\r\n      .where(\"userID\", \"==\", this.props.user.uid)\r\n      .orderBy(\"time\", \"desc\")\r\n      .onSnapshot((querySnapshot) => {\r\n        const notifications = [];\r\n        querySnapshot.forEach((doc) => notifications.push(doc.data()));\r\n        this.setState(() => {\r\n          return { notifications };\r\n        });\r\n      });\r\n  };\r\n\r\n  componentWillUnmount = () => {\r\n    this.unSubNotifications();\r\n  };\r\n\r\n  render = () => {\r\n    return (\r\n      <div className=\"UserNotifications\">\r\n        <Typography variant=\"h3\">Notifications</Typography>\r\n        {this.state.notifications.length > 0 && (\r\n          <Paper className=\"UserNotifications-Container\">\r\n            <List>\r\n              {this.state.notifications.length > 0 &&\r\n                this.state.notifications.map((notification) => {\r\n                  return (\r\n                    <div key={notification.time.seconds}>\r\n                      <ListItem>\r\n                        <ListItemText\r\n                          primary={notification.message}\r\n                          secondary={notification.time\r\n                            .toDate()\r\n                            .toLocaleDateString()}\r\n                        />\r\n                      </ListItem>\r\n                      <Divider />\r\n                    </div>\r\n                  );\r\n                })}\r\n            </List>\r\n          </Paper>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default UserNotifications;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  TableContainer,\r\n  Typography,\r\n  Paper,\r\n  TableCell,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  IconButton,\r\n  Table,\r\n} from \"@material-ui/core\";\r\nimport LinkIcon from \"@material-ui/icons/Link\";\r\nimport firebase from \"./Firebase\";\r\nimport defaultBook from \"./images/defaultBook.png\";\r\nimport \"./stylesheets/Ebooks.css\";\r\nconst db = firebase.firestore();\r\n\r\nclass Ebooks extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { library: [], fineRemaining: false };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.unSubInventory = db\r\n      .collection(\"Inventory\")\r\n      .onSnapshot((querySnapshot) => {\r\n        let library = [];\r\n        querySnapshot.forEach(async (doc) => {\r\n          const url =\r\n            \"https://www.googleapis.com/books/v1/volumes/\" + doc.data().id;\r\n          try {\r\n            const result = await fetch(url);\r\n            const apiData = await result.json();\r\n            if (apiData) {\r\n              library.push({\r\n                ...apiData,\r\n              });\r\n              this.setState(() => {\r\n                return { library };\r\n              });\r\n            } else {\r\n              // this error will not occur unless googleapi deletes a book id.\r\n              this.props.handleSnackbarOpen(\"Book Id not found.\");\r\n            }\r\n          } catch (error) {\r\n            this.props.handleSnackbarOpen(error.message);\r\n          }\r\n        });\r\n        this.setState(() => {\r\n          return { library };\r\n        });\r\n      });\r\n\r\n    this.unSubDontShow = db\r\n      .collection(\"Requests\")\r\n      .where(\"userID\", \"==\", this.props.user.uid)\r\n      .onSnapshot((querySnapshot) => {\r\n        let docs = [];\r\n        querySnapshot.forEach((doc) => docs.push(doc.data()));\r\n        if (\r\n          docs.some((ele) => {\r\n            return (\r\n              ele.history[ele.history.length - 1].status === \"lost\" ||\r\n              (ele.history[ele.history.length - 1].status === \"collected\" &&\r\n                this.getDays(\r\n                  ele.history[ele.history.length - 1].time.toDate(),\r\n                  new Date(Date.now())\r\n                ) > 7)\r\n            );\r\n          })\r\n        ) {\r\n          this.setState(() => {\r\n            return {\r\n              fineRemaining: true,\r\n            };\r\n          });\r\n        } else {\r\n          this.setState(() => {\r\n            return {\r\n              fineRemaining: false,\r\n            };\r\n          });\r\n        }\r\n      });\r\n  };\r\n  render = () => {\r\n    return (\r\n      <div className=\"Ebooks\">\r\n        <Typography variant=\"h3\">Ebooks</Typography>\r\n        {this.state.library.length > 0 && !this.state.fineRemaining && (\r\n          <TableContainer component={Paper}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableCell></TableCell>\r\n                <TableCell>Title</TableCell>\r\n                <TableCell>Authors</TableCell>\r\n                <TableCell>Publisher</TableCell>\r\n                <TableCell>Published Date</TableCell>\r\n                <TableCell></TableCell>\r\n              </TableHead>\r\n\r\n              <TableBody>\r\n                {this.state.library\r\n                  .filter((ele) => ele.accessInfo.accessViewStatus !== \"NONE\")\r\n                  .map((book) => {\r\n                    return (\r\n                      <TableRow key={book.id}>\r\n                        <TableCell>\r\n                          <img\r\n                            src={\r\n                              book.volumeInfo.imageLinks\r\n                                ? book.volumeInfo.imageLinks.thumbnail\r\n                                : defaultBook\r\n                            }\r\n                            alt={book.title}\r\n                          ></img>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          {book.volumeInfo.title ? book.volumeInfo.title : \"\"}\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          {book.volumeInfo.authors\r\n                            ? book.volumeInfo.authors.join(\", \")\r\n                            : \"\"}\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          {book.volumeInfo.publisher\r\n                            ? book.volumeInfo.publisher\r\n                            : \"\"}\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          {book.volumeInfo.publishedDate\r\n                            ? book.volumeInfo.publishedDate\r\n                            : \"\"}\r\n                        </TableCell>\r\n\r\n                        <TableCell>\r\n                          <IconButton\r\n                            href={book.accessInfo.webReaderLink}\r\n                            target=\"_blank\"\r\n                          >\r\n                            <LinkIcon />\r\n                          </IconButton>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        )}\r\n        {this.state.fineRemaining && (\r\n          <Typography color=\"secondary\" variant=\"h4\">\r\n            Please Pay the fine.\r\n          </Typography>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default Ebooks;\r\n","import React, { Component } from \"react\";\r\nimport firebase from \"./Firebase\";\r\nimport { Snackbar, IconButton } from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Header from \"./Header\";\r\nimport Profile from \"./Profile\";\r\nimport Library from \"./Library\";\r\nimport Drawer from \"./Drawer\";\r\nimport Inventory from \"./Inventory\";\r\nimport Requests from \"./Requests\";\r\nimport History from \"./History\";\r\nimport UserNotifications from \"./UserNotifications\";\r\nimport Ebooks from \"./Ebooks\";\r\nimport \"./stylesheets/Homepage.css\";\r\n\r\nclass Homepage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isSnackbarOpen: false,\r\n      snackbarMessage: \"\",\r\n      componentInFocus: this.props.isUserAdmin ? \"Inventory\" : \"Library\",\r\n      isDrawerOpen: false,\r\n    };\r\n  }\r\n\r\n  handleLogout = () => {\r\n    firebase.auth().signOut();\r\n  };\r\n\r\n  handleSnackbarOpen = (snackbarMessage) => {\r\n    this.setState(() => {\r\n      return { isSnackbarOpen: true, snackbarMessage };\r\n    });\r\n  };\r\n\r\n  handleSnackbarClose = () => {\r\n    this.setState(() => {\r\n      return { isSnackbarOpen: false, snackbarMessage: \"\" };\r\n    });\r\n  };\r\n\r\n  handleChangeFocus = (componentInFocus) => {\r\n    this.setState(() => {\r\n      return { componentInFocus };\r\n    });\r\n  };\r\n\r\n  handleDrawerClose = () => {\r\n    this.setState(() => {\r\n      return {\r\n        isDrawerOpen: false,\r\n      };\r\n    });\r\n  };\r\n\r\n  handleDrawerOpen = () => {\r\n    this.setState(() => {\r\n      return {\r\n        isDrawerOpen: true,\r\n      };\r\n    });\r\n  };\r\n\r\n  render = () => {\r\n    return (\r\n      <div className=\"Homepage\">\r\n        <Header\r\n          user={this.props.user}\r\n          isUserAdmin={this.props.isUserAdmin}\r\n          handleSnackbarOpen={this.handleSnackbarOpen}\r\n          handleLogout={this.handleLogout}\r\n          handleChangeFocus={this.handleChangeFocus}\r\n          handleDrawerOpen={this.handleDrawerOpen}\r\n        />\r\n        {this.state.componentInFocus === \"Library\" &&\r\n          !this.props.isUserAdmin && (\r\n            <Library\r\n              user={this.props.user}\r\n              handleSnackbarOpen={this.handleSnackbarOpen}\r\n            />\r\n          )}\r\n        {this.state.componentInFocus === \"Profile\" && (\r\n          <Profile\r\n            handleChangeFocus={this.handleChangeFocus}\r\n            user={this.props.user}\r\n            isUserAdmin={this.props.isUserAdmin}\r\n            handleSnackbarOpen={this.handleSnackbarOpen}\r\n          />\r\n        )}\r\n        {this.state.componentInFocus === \"Inventory\" &&\r\n          this.props.isUserAdmin && (\r\n            <Inventory handleSnackbarOpen={this.handleSnackbarOpen} />\r\n          )}\r\n        {this.state.componentInFocus === \"Requests\" &&\r\n          this.props.isUserAdmin && (\r\n            <Requests handleSnackbarOpen={this.handleSnackbarOpen} />\r\n          )}\r\n        {this.state.componentInFocus === \"UserNotifications\" &&\r\n          !this.props.isUserAdmin && (\r\n            <UserNotifications\r\n              handleSnackbarOpen={this.handleSnackbarOpen}\r\n              user={this.props.user}\r\n            />\r\n          )}\r\n        {this.state.componentInFocus === \"History\" &&\r\n          !this.props.isUserAdmin && (\r\n            <History\r\n              handleSnackbarOpen={this.handleSnackbarOpen}\r\n              user={this.props.user}\r\n            />\r\n          )}\r\n        {this.state.componentInFocus === \"Ebooks\" &&\r\n          !this.props.isUserAdmin && (\r\n            <Ebooks\r\n              handleSnackbarOpen={this.handleSnackbarOpen}\r\n              user={this.props.user}\r\n            />\r\n          )}\r\n        <Drawer\r\n          isDrawerOpen={this.state.isDrawerOpen}\r\n          handleDrawerClose={this.handleDrawerClose}\r\n          isUserAdmin={this.props.isUserAdmin}\r\n          handleChangeFocus={this.handleChangeFocus}\r\n        />\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"left\",\r\n          }}\r\n          open={this.state.isSnackbarOpen}\r\n          autoHideDuration={6000}\r\n          onClose={this.handleSnackbarClose}\r\n          message={this.state.snackbarMessage}\r\n          action={\r\n            <React.Fragment>\r\n              <IconButton\r\n                size=\"small\"\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                onClick={this.handleSnackbarClose}\r\n              >\r\n                <CloseIcon fontSize=\"small\" />\r\n              </IconButton>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default Homepage;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Typography,\r\n  Snackbar,\r\n  IconButton,\r\n  Paper,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport firebase from \"./Firebase\";\r\nimport \"./stylesheets/VerifyEmail.css\";\r\n\r\nclass VerifyEmail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isSnackbarOpen: false,\r\n      snackbarMessage: \"\",\r\n      isUserChangingEmail: false,\r\n      newEmailInput: \"\",\r\n      passwordInput: \"\",\r\n    };\r\n  }\r\n  componentDidMount = () => {\r\n    this.checkForVerification = setInterval(this.handleReload, 3000);\r\n  };\r\n  componentWillUnmount = () => {\r\n    clearInterval(this.checkForVerification);\r\n  };\r\n  handleSnackbarClose = () => {\r\n    this.setState(() => {\r\n      return { isSnackbarOpen: false, snackbarMessage: \"\" };\r\n    });\r\n  };\r\n\r\n  handleLogout = () => {\r\n    firebase.auth().signOut();\r\n  };\r\n\r\n  handleReload = () => {\r\n    this.props.user.reload();\r\n    this.props.updateUser(this.props.user);\r\n  };\r\n\r\n  handleResend = () => {\r\n    this.props.user\r\n      .sendEmailVerification()\r\n      .then(() => {\r\n        this.setState(() => {\r\n          return {\r\n            isSnackbarOpen: true,\r\n            snackbarMessage: `Email Resent to ${this.props.user.email}.`,\r\n          };\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        this.setState(() => {\r\n          return {\r\n            isSnackbarOpen: true,\r\n            snackbarMessage: error.message,\r\n          };\r\n        });\r\n      });\r\n  };\r\n\r\n  handleEmailChangeToggle = () => {\r\n    this.setState((curState) => {\r\n      return { isUserChangingEmail: !curState.isUserChangingEmail };\r\n    });\r\n  };\r\n\r\n  handleInputChange = (e) => {\r\n    const name = e.target.getAttribute(\"name\");\r\n    const value = e.target.value;\r\n    this.setState(() => {\r\n      return {\r\n        [name]: value,\r\n      };\r\n    });\r\n  };\r\n\r\n  handleEmailChangeSubmit = (e) => {\r\n    e.preventDefault();\r\n    const credential = firebase.auth.EmailAuthProvider.credential(\r\n      this.props.user.email,\r\n      this.state.passwordInput\r\n    );\r\n    this.props.user\r\n      .reauthenticateWithCredential(credential)\r\n      .then(() => {\r\n        this.props.user\r\n          .updateEmail(this.state.newEmailInput)\r\n          .then(() => {\r\n            this.setState(\r\n              () => {\r\n                return {\r\n                  isSnackbarOpen: true,\r\n                  snackbarMessage: `Email changed to ${this.state.newEmailInput}`,\r\n                  isUserChangingEmail: false,\r\n                  newEmailInput: \"\",\r\n                  passwordInput: \"\",\r\n                };\r\n              },\r\n              () => {\r\n                this.props.user.reload();\r\n              }\r\n            );\r\n          })\r\n          .catch((error) => {\r\n            this.setState(() => {\r\n              return {\r\n                isSnackbarOpen: true,\r\n                snackbarMessage: error.message,\r\n              };\r\n            });\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        this.setState(() => {\r\n          return {\r\n            isSnackbarOpen: true,\r\n            snackbarMessage: error.message,\r\n          };\r\n        });\r\n      });\r\n  };\r\n\r\n  render = () => {\r\n    return (\r\n      <div className=\"VerifyEmail\">\r\n        <Typography>\r\n          {this.props.user.displayName}, please Verify Email at{\" \"}\r\n          {this.props.user.email}.\r\n        </Typography>\r\n        <Button onClick={this.handleResend}>Resend Email</Button>\r\n        <Button onClick={this.handleReload}>Already Verified?</Button>\r\n        <Button onClick={this.handleEmailChangeToggle}>\r\n          Change Email Address\r\n        </Button>\r\n        {this.state.isUserChangingEmail ? (\r\n          <Paper className=\"VerifyEmail-FormContainer\">\r\n            <form\r\n              onSubmit={this.handleEmailChangeSubmit}\r\n              className=\"VerifyEmail-Form\"\r\n            >\r\n              <TextField\r\n                label=\"New Email Address\"\r\n                type=\"email\"\r\n                required\r\n                name=\"newEmailInput\"\r\n                value={this.state.newEmailInput}\r\n                onChange={this.handleInputChange}\r\n              ></TextField>\r\n              <TextField\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                required\r\n                name=\"passwordInput\"\r\n                value={this.state.passwordInput}\r\n                onChange={this.handleInputChange}\r\n              ></TextField>\r\n              <Button type=\"submit\">Submit</Button>\r\n            </form>\r\n          </Paper>\r\n        ) : null}\r\n        <Button color=\"secondary\" onClick={this.handleLogout}>\r\n          Logout\r\n        </Button>\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"left\",\r\n          }}\r\n          open={this.state.isSnackbarOpen}\r\n          autoHideDuration={6000}\r\n          onClose={this.handleSnackbarClose}\r\n          message={this.state.snackbarMessage}\r\n          action={\r\n            <React.Fragment>\r\n              <IconButton\r\n                size=\"small\"\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                onClick={this.handleSnackbarClose}\r\n              >\r\n                <CloseIcon fontSize=\"small\" />\r\n              </IconButton>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default VerifyEmail;\r\n","import React, { Component } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport firebase from \"./Firebase\";\nimport LoginRegister from \"./LoginRegister\";\nimport Homepage from \"./Homepage\";\nimport VerifyEmail from \"./VerifyEmail\";\nconst db = firebase.firestore();\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: false,\n      isUserAdmin: false,\n    };\n  }\n\n  componentDidMount = () => {\n    this.checkLogin();\n  };\n\n  updateUser = (user) => {\n    this.setState(() => {\n      return { user };\n    });\n  };\n\n  checkLogin = () => {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        db.collection(\"Users\")\n          .doc(user.uid)\n          .get()\n          .then((doc) => {\n            let isUserAdmin = doc.data() ? doc.data().isAdmin : false;\n            this.setState(() => {\n              return { user, isUserAdmin };\n            });\n          })\n          .catch((error) => {\n            // idk how to handle this error.\n            alert(error.message);\n            firebase.auth().signOut();\n          });\n      } else {\n        this.setState(() => {\n          return { user: false };\n        });\n      }\n    });\n  };\n\n  render = () => {\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/library-management-system/login\">\n            {this.state.user ? (\n              <Redirect\n                to={{\n                  pathname: \"/library-management-system\",\n                }}\n              />\n            ) : (\n              <LoginRegister />\n            )}\n          </Route>\n          <Route exact path=\"/library-management-system\">\n            {this.state.user ? (\n              this.state.user.emailVerified ? (\n                <Homepage\n                  user={this.state.user}\n                  isUserAdmin={this.state.isUserAdmin}\n                />\n              ) : (\n                <VerifyEmail\n                  user={this.state.user}\n                  updateUser={this.updateUser}\n                />\n              )\n            ) : (\n              <Redirect\n                to={{\n                  pathname: \"/library-management-system/login\",\n                }}\n              />\n            )}\n          </Route>\n        </Switch>\n      </div>\n    );\n  };\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}