{"version":3,"sources":["Firebase.js","LoginRegister.js","Header.js","Profile.js","Library.js","Homepage.js","VerifyEmail.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","db","firestore","LoginRegister","props","handleTabValueChange","e","newValue","setState","tabValue","handleInputChange","name","target","getAttribute","value","handleSnackbarClose","isSnackbarOpen","snackbarMessage","handleLoginSubmit","preventDefault","auth","signInWithEmailAndPassword","state","loginEmail","loginPassword","catch","error","message","handleRegisterSubmit","registerPassword","registerPasswordConfirm","registerAdminKey","collection","where","get","then","querySnapshot","docs","forEach","doc","push","data","length","Keys","indexOf","registerUser","isAdmin","createUserWithEmailAndPassword","registerEmail","userCredential","user","updateProfile","displayName","registerUsername","uid","set","sendEmailVerification","render","className","Paper","elevation","Tabs","onChange","Tab","label","onSubmit","TextField","type","required","Button","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","action","Fragment","IconButton","size","aria-label","color","onClick","fontSize","Component","Header","handleAccountMenuOpen","isAccountMenuOpen","handleAccountMenuClose","handleChangeFocus","AppBar","position","Toolbar","Typography","variant","Menu","anchorEl","document","querySelector","keepMounted","MenuItem","userIsAdmin","handleLogout","Profile","Library","Homepage","signOut","handleSnackbarOpen","snackbarOpen","componentInFocus","VerifyEmail","handleReload","window","location","reload","handleResend","email","handleEmailChangeToggle","curState","isUserChangingEmail","handleEmailChangeSubmit","credential","EmailAuthProvider","passwordInput","reauthenticateWithCredential","updateEmail","newEmailInput","App","componentDidMount","checkLogin","onAuthStateChanged","alert","exact","path","to","pathname","emailVerified","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.e29be618.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/analytics\";\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBBYCDggpHEho-sMOj_HxvgSC2wetbSUB8\",\r\n  authDomain: \"library-management-syste-57f9f.firebaseapp.com\",\r\n  projectId: \"library-management-syste-57f9f\",\r\n  storageBucket: \"library-management-syste-57f9f.appspot.com\",\r\n  messagingSenderId: \"659487115186\",\r\n  appId: \"1:659487115186:web:4eed8326ab5cd4c63f86ab\",\r\n  measurementId: \"G-LT3BJB781F\",\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.analytics();\r\n\r\nexport default firebase;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Paper,\r\n  Tabs,\r\n  Tab,\r\n  TextField,\r\n  Button,\r\n  Snackbar,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport firebase from \"./Firebase\";\r\nimport \"./stylesheets/LoginRegister.css\";\r\nconst db = firebase.firestore();\r\n\r\nclass LoginRegister extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tabValue: 0,\r\n      loginEmail: \"\",\r\n      loginPassword: \"\",\r\n      registerUsername: \"\",\r\n      registerEmail: \"\",\r\n      registerPassword: \"\",\r\n      registerPasswordConfirm: \"\",\r\n      registerAdminKey: \"\",\r\n      isSnackbarOpen: false,\r\n      snackbarMessage: \"\",\r\n    };\r\n  }\r\n\r\n  handleTabValueChange = (e, newValue) => {\r\n    this.setState(() => {\r\n      return { tabValue: newValue };\r\n    });\r\n  };\r\n\r\n  handleInputChange = (e) => {\r\n    const name = e.target.getAttribute(\"name\");\r\n    const value = e.target.value;\r\n    this.setState(() => {\r\n      return {\r\n        [name]: value,\r\n      };\r\n    });\r\n  };\r\n\r\n  handleSnackbarClose = () => {\r\n    this.setState(() => {\r\n      return { isSnackbarOpen: false, snackbarMessage: \"\" };\r\n    });\r\n  };\r\n\r\n  handleLoginSubmit = (e) => {\r\n    e.preventDefault();\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(\r\n        this.state.loginEmail,\r\n        this.state.loginPassword\r\n      )\r\n      .catch((error) => {\r\n        this.setState(() => {\r\n          return {\r\n            isSnackbarOpen: true,\r\n            snackbarMessage: error.message,\r\n          };\r\n        });\r\n      });\r\n  };\r\n\r\n  handleRegisterSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (this.state.registerPassword === this.state.registerPasswordConfirm) {\r\n      if (this.state.registerAdminKey !== \"\") {\r\n        db.collection(\"AdminKeys\")\r\n          .where(\"Keys\", \"!=\", [])\r\n          .get()\r\n          .then((querySnapshot) => {\r\n            const docs = [];\r\n            querySnapshot.forEach((doc) => docs.push(doc.data()));\r\n            if (\r\n              docs.length !== 0 &&\r\n              docs[0].Keys.indexOf(this.state.registerAdminKey) !== -1\r\n            ) {\r\n              this.registerUser(true);\r\n            } else {\r\n              this.setState(() => {\r\n                return {\r\n                  isSnackbarOpen: true,\r\n                  snackbarMessage: \"Invalid Admin Keys\",\r\n                };\r\n              });\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            this.setState(() => {\r\n              return {\r\n                isSnackbarOpen: true,\r\n                snackbarMessage: error.message,\r\n              };\r\n            });\r\n          });\r\n      } else {\r\n        this.registerUser(false);\r\n      }\r\n    } else {\r\n      this.setState(() => {\r\n        return {\r\n          isSnackbarOpen: true,\r\n          snackbarMessage: \"Passwords do not match.\",\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  registerUser = (isAdmin) => {\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(\r\n        this.state.registerEmail,\r\n        this.state.registerPassword\r\n      )\r\n      .then((userCredential) => {\r\n        userCredential.user\r\n          .updateProfile({\r\n            displayName: this.state.registerUsername,\r\n          })\r\n          .then(() => {\r\n            db.collection(\"Users\")\r\n              .doc(userCredential.user.uid)\r\n              .set({ isAdmin })\r\n              .then(() => {\r\n                userCredential.user.sendEmailVerification().catch((error) => {\r\n                  this.setState(() => {\r\n                    return {\r\n                      isSnackbarOpen: true,\r\n                      snackbarMessage: error.message,\r\n                    };\r\n                  });\r\n                });\r\n              })\r\n              .catch((error) => {\r\n                this.setState(() => {\r\n                  return {\r\n                    isSnackbarOpen: true,\r\n                    snackbarMessage: error.message,\r\n                  };\r\n                });\r\n              });\r\n          })\r\n          .catch((error) => {\r\n            this.setState(() => {\r\n              return {\r\n                isSnackbarOpen: true,\r\n                snackbarMessage: error.message,\r\n              };\r\n            });\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        this.setState(() => {\r\n          return {\r\n            isSnackbarOpen: true,\r\n            snackbarMessage: error.message,\r\n          };\r\n        });\r\n      });\r\n  };\r\n\r\n  render = () => {\r\n    return (\r\n      <div className=\"LoginRegister\">\r\n        <Paper elevation={3} className=\"LoginRegister-FormContainer\">\r\n          <Tabs\r\n            value={this.state.tabValue}\r\n            onChange={this.handleTabValueChange}\r\n          >\r\n            <Tab label=\"Login\" />\r\n            <Tab label=\"Register\" />\r\n          </Tabs>\r\n          {this.state.tabValue === 0 ? (\r\n            <form\r\n              onSubmit={this.handleLoginSubmit}\r\n              className=\"LoginRegister-Form\"\r\n            >\r\n              <TextField\r\n                label=\"Email\"\r\n                type=\"email\"\r\n                required\r\n                name=\"loginEmail\"\r\n                value={this.state.loginEmail}\r\n                onChange={this.handleInputChange}\r\n              ></TextField>\r\n              <TextField\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                required\r\n                name=\"loginPassword\"\r\n                value={this.state.loginPassword}\r\n                onChange={this.handleInputChange}\r\n              ></TextField>\r\n              <Button type=\"submit\">Log In</Button>\r\n            </form>\r\n          ) : (\r\n            <form\r\n              onSubmit={this.handleRegisterSubmit}\r\n              className=\"LoginRegister-Form\"\r\n            >\r\n              <TextField\r\n                label=\"Username\"\r\n                required\r\n                name=\"registerUsername\"\r\n                value={this.state.registerUsername}\r\n                onChange={this.handleInputChange}\r\n              ></TextField>\r\n              <TextField\r\n                label=\"Email\"\r\n                type=\"email\"\r\n                required\r\n                name=\"registerEmail\"\r\n                value={this.state.registerEmail}\r\n                onChange={this.handleInputChange}\r\n              ></TextField>\r\n              <TextField\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                required\r\n                name=\"registerPassword\"\r\n                value={this.state.registerPassword}\r\n                onChange={this.handleInputChange}\r\n              ></TextField>\r\n              <TextField\r\n                label=\"Confirm Password\"\r\n                type=\"password\"\r\n                required\r\n                name=\"registerPasswordConfirm\"\r\n                value={this.state.registerPasswordConfirm}\r\n                onChange={this.handleInputChange}\r\n              ></TextField>\r\n              <TextField\r\n                type=\"password\"\r\n                label=\"Admin Key\"\r\n                name=\"registerAdminKey\"\r\n                value={this.state.registerAdminKey}\r\n                onChange={this.handleInputChange}\r\n              ></TextField>\r\n              <Button type=\"submit\">Register</Button>\r\n            </form>\r\n          )}\r\n        </Paper>\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"left\",\r\n          }}\r\n          open={this.state.isSnackbarOpen}\r\n          autoHideDuration={6000}\r\n          onClose={this.handleSnackbarClose}\r\n          message={this.state.snackbarMessage}\r\n          action={\r\n            <React.Fragment>\r\n              <IconButton\r\n                size=\"small\"\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                onClick={this.handleSnackbarClose}\r\n              >\r\n                <CloseIcon fontSize=\"small\" />\r\n              </IconButton>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default LoginRegister;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  IconButton,\r\n  Menu,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport AccountBoxIcon from \"@material-ui/icons/AccountBox\";\r\nimport VerifiedUserIcon from \"@material-ui/icons/VerifiedUser\";\r\nimport \"./stylesheets/Header.css\";\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isAccountMenuOpen: false,\r\n    };\r\n  }\r\n\r\n  handleAccountMenuOpen = () => {\r\n    this.setState(() => {\r\n      return { isAccountMenuOpen: true };\r\n    });\r\n  };\r\n\r\n  handleAccountMenuClose = () => {\r\n    this.setState(() => {\r\n      return { isAccountMenuOpen: false };\r\n    });\r\n  };\r\n\r\n  handleChangeFocus = () => {\r\n    this.props.handleChangeFocus(\"Profile\");\r\n  };\r\n\r\n  render = () => {\r\n    return (\r\n      <AppBar position=\"sticky\" className=\"Header\">\r\n        <Toolbar className=\"Header-Toolbar\">\r\n          <Typography variant=\"h6\">Library Management System</Typography>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            onClick={this.handleAccountMenuOpen}\r\n            className=\"Header-AccountButton\"\r\n          >\r\n            <AccountBoxIcon />\r\n          </IconButton>\r\n        </Toolbar>\r\n\r\n        <Menu\r\n          anchorEl={document.querySelector(\".Header-AccountButton\")}\r\n          keepMounted\r\n          open={this.state.isAccountMenuOpen}\r\n          onClose={this.handleAccountMenuClose}\r\n        >\r\n          <MenuItem>\r\n            {this.props.userIsAdmin ? (\r\n              <VerifiedUserIcon className=\"Header-AdminIcon\" />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {this.props.user.displayName}\r\n          </MenuItem>\r\n          <MenuItem onClick={this.handleChangeFocus}>Profile</MenuItem>\r\n          <MenuItem onClick={this.props.handleLogout}>Logout</MenuItem>\r\n        </Menu>\r\n      </AppBar>\r\n    );\r\n  };\r\n}\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nclass Profile extends Component {\r\n  handleChangeFocus = () => {\r\n    this.props.handleChangeFocus(\"Library\");\r\n  };\r\n\r\n  render = () => {\r\n    return (\r\n      <div className=\"Profile\">\r\n        <Button onClick={this.handleChangeFocus}>Back to Library</Button>\r\n      </div>\r\n    );\r\n  };\r\n}\r\nexport default Profile;\r\n","import React, { Component } from \"react\";\r\nclass Library extends Component {\r\n  render = () => {\r\n    return (\r\n      <div className=\"Library\">\r\n        <h1>Library</h1>\r\n      </div>\r\n    );\r\n  };\r\n}\r\nexport default Library;\r\n","import React, { Component } from \"react\";\r\nimport firebase from \"./Firebase\";\r\nimport { Snackbar, IconButton } from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Header from \"./Header\";\r\nimport Profile from \"./Profile\";\r\nimport Library from \"./Library\";\r\n\r\nclass Homepage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isSnackbarOpen: false,\r\n      snackbarMessage: \"\",\r\n      componentInFocus: \"Library\",\r\n    };\r\n  }\r\n\r\n  handleLogout = () => {\r\n    firebase.auth().signOut();\r\n  };\r\n\r\n  handleSnackbarOpen = (snackbarMessage) => {\r\n    this.setState(() => {\r\n      return { snackbarOpen: true, snackbarMessage };\r\n    });\r\n  };\r\n\r\n  handleSnackbarClose = () => {\r\n    this.setState(() => {\r\n      return { snackbarOpen: false, snackbarMessage: \"\" };\r\n    });\r\n  };\r\n\r\n  handleChangeFocus = (componentInFocus) => {\r\n    this.setState(() => {\r\n      return { componentInFocus };\r\n    });\r\n  };\r\n\r\n  render = () => {\r\n    return (\r\n      <div className=\"Homepage\">\r\n        <Header\r\n          user={this.props.user}\r\n          userIsAdmin={this.props.userIsAdmin}\r\n          handleSnackbarOpen={this.handleSnackbarOpen}\r\n          handleLogout={this.handleLogout}\r\n          handleChangeFocus={this.handleChangeFocus}\r\n        />\r\n        {this.state.componentInFocus === \"Library\" && <Library />}\r\n        {this.state.componentInFocus === \"Profile\" && (\r\n          <Profile handleChangeFocus={this.handleChangeFocus} />\r\n        )}\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"left\",\r\n          }}\r\n          open={this.state.snackbarOpen}\r\n          autoHideDuration={6000}\r\n          onClose={this.handleSnackbarClose}\r\n          message={this.state.snackbarMessage}\r\n          action={\r\n            <React.Fragment>\r\n              <IconButton\r\n                size=\"small\"\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                onClick={this.handleSnackbarClose}\r\n              >\r\n                <CloseIcon fontSize=\"small\" />\r\n              </IconButton>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default Homepage;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Typography,\r\n  Snackbar,\r\n  IconButton,\r\n  Paper,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport firebase from \"./Firebase\";\r\nimport \"./stylesheets/VerifyEmail.css\";\r\n\r\nclass VerifyEmail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      snackbarOpen: false,\r\n      snackbarMessage: \"\",\r\n      isUserChangingEmail: false,\r\n      newEmailInput: \"\",\r\n      passwordInput: \"\",\r\n    };\r\n  }\r\n\r\n  handleSnackbarClose = () => {\r\n    this.setState(() => {\r\n      return { snackbarOpen: false, snackbarMessage: \"\" };\r\n    });\r\n  };\r\n\r\n  handleLogout = () => {\r\n    firebase.auth().signOut();\r\n  };\r\n\r\n  handleReload = () => {\r\n    window.location.reload();\r\n  };\r\n\r\n  handleResend = () => {\r\n    this.props.user\r\n      .sendEmailVerification()\r\n      .then(() => {\r\n        this.setState(() => {\r\n          return {\r\n            snackbarOpen: true,\r\n            snackbarMessage: `Email Resent to ${this.props.user.email}.`,\r\n          };\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        this.setState(() => {\r\n          return {\r\n            snackbarOpen: true,\r\n            snackbarMessage: error.message,\r\n          };\r\n        });\r\n      });\r\n  };\r\n\r\n  handleEmailChangeToggle = () => {\r\n    this.setState((curState) => {\r\n      return { isUserChangingEmail: !curState.isUserChangingEmail };\r\n    });\r\n  };\r\n\r\n  handleInputChange = (e) => {\r\n    const name = e.target.getAttribute(\"name\");\r\n    const value = e.target.value;\r\n    this.setState(() => {\r\n      return {\r\n        [name]: value,\r\n      };\r\n    });\r\n  };\r\n\r\n  handleEmailChangeSubmit = (e) => {\r\n    e.preventDefault();\r\n    const credential = firebase.auth.EmailAuthProvider.credential(\r\n      this.props.user.email,\r\n      this.state.passwordInput\r\n    );\r\n    this.props.user\r\n      .reauthenticateWithCredential(credential)\r\n      .then(() => {\r\n        this.props.user\r\n          .updateEmail(this.state.newEmailInput)\r\n          .then(() => {\r\n            this.setState(\r\n              () => {\r\n                return {\r\n                  snackbarOpen: true,\r\n                  snackbarMessage: `Email changed to ${this.state.newEmailInput}`,\r\n                  isUserChangingEmail: false,\r\n                  newEmailInput: \"\",\r\n                  passwordInput: \"\",\r\n                };\r\n              },\r\n              () => {\r\n                this.props.user.reload();\r\n              }\r\n            );\r\n          })\r\n          .catch((error) => {\r\n            this.setState(() => {\r\n              return {\r\n                snackbarOpen: true,\r\n                snackbarMessage: error.message,\r\n              };\r\n            });\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        this.setState(() => {\r\n          return {\r\n            snackbarOpen: true,\r\n            snackbarMessage: error.message,\r\n          };\r\n        });\r\n      });\r\n  };\r\n\r\n  render = () => {\r\n    return (\r\n      <div className=\"VerifyEmail\">\r\n        <Typography>\r\n          {this.props.user.displayName}, please Verify Email at{\" \"}\r\n          {this.props.user.email}.\r\n        </Typography>\r\n        <Button onClick={this.handleResend}>Resend Email</Button>\r\n        <Button onClick={this.handleReload}>Already Verified?</Button>\r\n        <Button onClick={this.handleEmailChangeToggle}>\r\n          Change Email Address\r\n        </Button>\r\n        {this.state.isUserChangingEmail ? (\r\n          <Paper className=\"VerifyEmail-FormContainer\">\r\n            <form\r\n              onSubmit={this.handleEmailChangeSubmit}\r\n              className=\"VerifyEmail-Form\"\r\n            >\r\n              <TextField\r\n                label=\"New Email Address\"\r\n                type=\"email\"\r\n                required\r\n                name=\"newEmailInput\"\r\n                value={this.state.newEmailInput}\r\n                onChange={this.handleInputChange}\r\n              ></TextField>\r\n              <TextField\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                required\r\n                name=\"passwordInput\"\r\n                value={this.state.passwordInput}\r\n                onChange={this.handleInputChange}\r\n              ></TextField>\r\n              <Button type=\"submit\">Submit</Button>\r\n            </form>\r\n          </Paper>\r\n        ) : null}\r\n        <Button color=\"secondary\" onClick={this.handleLogout}>\r\n          Logout\r\n        </Button>\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"left\",\r\n          }}\r\n          open={this.state.snackbarOpen}\r\n          autoHideDuration={6000}\r\n          onClose={this.handleSnackbarClose}\r\n          message={this.state.snackbarMessage}\r\n          action={\r\n            <React.Fragment>\r\n              <IconButton\r\n                size=\"small\"\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                onClick={this.handleSnackbarClose}\r\n              >\r\n                <CloseIcon fontSize=\"small\" />\r\n              </IconButton>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default VerifyEmail;\r\n","import React, { Component } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport firebase from \"./Firebase\";\nimport LoginRegister from \"./LoginRegister\";\nimport Homepage from \"./Homepage\";\nimport VerifyEmail from \"./VerifyEmail\";\nconst db = firebase.firestore();\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: false,\n      userIsAdmin: false,\n    };\n  }\n\n  componentDidMount = () => {\n    this.checkLogin();\n  };\n\n  checkLogin = () => {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        db.collection(\"Users\")\n          .doc(user.uid)\n          .get()\n          .then((doc) => {\n            let userIsAdmin = doc.data() ? doc.data().isAdmin : false;\n            this.setState(() => {\n              return { user, userIsAdmin };\n            });\n          })\n          .catch((error) => {\n            // idk how to handle this error.\n            alert(error.message);\n            firebase.auth().signOut();\n          });\n      } else {\n        this.setState(() => {\n          return { user: false };\n        });\n      }\n    });\n  };\n\n  render = () => {\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/library-management-system/login\">\n            {this.state.user ? (\n              <Redirect\n                to={{\n                  pathname: \"/library-management-system\",\n                }}\n              />\n            ) : (\n              <LoginRegister />\n            )}\n          </Route>\n          <Route exact path=\"/library-management-system\">\n            {this.state.user ? (\n              this.state.user.emailVerified ? (\n                <Homepage\n                  user={this.state.user}\n                  userIsAdmin={this.state.userIsAdmin}\n                />\n              ) : (\n                <VerifyEmail user={this.state.user} />\n              )\n            ) : (\n              <Redirect\n                to={{\n                  pathname: \"/library-management-system/login\",\n                }}\n              />\n            )}\n          </Route>\n        </Switch>\n      </div>\n    );\n  };\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}