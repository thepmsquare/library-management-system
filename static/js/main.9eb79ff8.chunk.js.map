{"version":3,"sources":["Firebase.js","LoginRegister.js","Header.js","Profile.js","images/defaultBook.png","Library.js","Drawer.js","Inventory.js","BooksAPIKey.js","Homepage.js","VerifyEmail.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","db","firestore","LoginRegister","props","handleTabValueChange","e","newValue","setState","tabValue","handleInputChange","name","target","getAttribute","value","handleSnackbarClose","isSnackbarOpen","snackbarMessage","handleLoginSubmit","preventDefault","auth","signInWithEmailAndPassword","state","loginEmail","loginPassword","catch","error","message","handleRegisterSubmit","registerPassword","registerPasswordConfirm","registerAdminKey","collection","where","get","then","querySnapshot","docs","forEach","doc","push","data","length","Keys","indexOf","registerUser","isAdmin","createUserWithEmailAndPassword","registerEmail","userCredential","user","updateProfile","displayName","registerUsername","uid","set","sendEmailVerification","handleForgotPassword","sendPasswordResetEmail","render","className","Paper","elevation","Tabs","onChange","Tab","label","onSubmit","TextField","type","required","Button","size","onClick","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","action","Fragment","IconButton","aria-label","color","fontSize","Component","Header","handleAccountMenuOpen","isAccountMenuOpen","handleAccountMenuClose","handleChangeFocus","AppBar","position","Toolbar","handleDrawerOpen","Typography","variant","noWrap","Menu","anchorEl","document","querySelector","keepMounted","MenuItem","isUserAdmin","handleLogout","Profile","componentDidMount","unSubAdminKeys","onSnapshot","adminKey","componentWillUnmount","handleChangeDisplayNameExpandedToggle","isExpanded","isChangeDisplayNameExpanded","handleChangeDisplayNameSubmit","newUsername","handleSnackbarOpen","handleChangeEmailExpandedToggle","isChangeEmailExpanded","handleChangeEmailSubmit","credential","EmailAuthProvider","email","newEmailPassword","reauthenticateWithCredential","updateEmail","newEmail","newPassword","window","location","reload","handleChangePasswordExpandedToggle","isChangePasswordExpanded","handleChangePasswordSubmit","newPasswordConfirm","oldPassword","updatePassword","handleChangeAdminKeysExpandedToggle","isChangeAdminKeysExpanded","handleChangeAdminKeysSubmit","ref","update","newAdminKey","handleDeleteAccountExpandedToggle","isDeleteAccountExpanded","handleDeleteAccountSubmit","deletePassword","delete","Accordion","expanded","AccordionSummary","expandIcon","AccordionDetails","Library","unSubInventory","library","a","url","id","fetch","result","json","apiData","quantity","price","unSubDontShow","querySnapshot2","dontShow","bookID","handleDialogClose","isRequestDialogOpen","requestId","handleRequestDialogOpen","handleRequest","docs2","add","userID","status","TableContainer","component","Table","TableHead","TableRow","TableCell","TableBody","map","book","src","volumeInfo","imageLinks","thumbnail","defaultBook","alt","title","authors","join","publisher","publishedDate","disabled","Dialog","DialogTitle","DialogContent","DialogContentText","find","DialogActions","Drawer","handleInventoryClick","handleDrawerClose","handleLibraryClick","anchor","isDrawerOpen","List","ListItem","button","ListItemIcon","ListItemText","primary","Inventory","unsubInventoryListener","inventory","toggleAddItem","curState","addItem","handleSearchSubmit","searchTitle","searchAuthor","searchPublisher","searchISBN","items","searchResult","isAddDialogOpen","isEditDialogOpen","isDeleteDialogOpen","addId","editId","idToBeDeleted","handleAddItemDialogOpen","handleAddSubmit","parseInt","addQuantity","parseFloat","addPrice","handleEditItemDialogOpen","editQuantity","ele","editPrice","handleEditSubmit","handleDeleteDialogOpen","handleDeleteItem","InputProps","inputProps","pattern","categories","pageCount","min","fullWidth","step","Homepage","signOut","componentInFocus","VerifyEmail","handleReload","handleResend","handleEmailChangeToggle","isUserChangingEmail","handleEmailChangeSubmit","passwordInput","newEmailInput","App","checkLogin","onAuthStateChanged","alert","exact","path","to","pathname","emailVerified","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById","URL","process","href","origin","addEventListener","headers","response","contentType","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.9eb79ff8.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/analytics\";\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBBYCDggpHEho-sMOj_HxvgSC2wetbSUB8\",\r\n  authDomain: \"library-management-syste-57f9f.firebaseapp.com\",\r\n  projectId: \"library-management-syste-57f9f\",\r\n  storageBucket: \"library-management-syste-57f9f.appspot.com\",\r\n  messagingSenderId: \"659487115186\",\r\n  appId: \"1:659487115186:web:4eed8326ab5cd4c63f86ab\",\r\n  measurementId: \"G-LT3BJB781F\",\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.analytics();\r\n\r\nexport default firebase;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Paper,\r\n  Tabs,\r\n  Tab,\r\n  TextField,\r\n  Button,\r\n  Snackbar,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport firebase from \"./Firebase\";\r\nimport \"./stylesheets/LoginRegister.css\";\r\nconst db = firebase.firestore();\r\n\r\nclass LoginRegister extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tabValue: 0,\r\n      loginEmail: \"\",\r\n      loginPassword: \"\",\r\n      registerUsername: \"\",\r\n      registerEmail: \"\",\r\n      registerPassword: \"\",\r\n      registerPasswordConfirm: \"\",\r\n      registerAdminKey: \"\",\r\n      isSnackbarOpen: false,\r\n      snackbarMessage: \"\",\r\n    };\r\n  }\r\n\r\n  handleTabValueChange = (e, newValue) => {\r\n    this.setState(() => {\r\n      return { tabValue: newValue };\r\n    });\r\n  };\r\n\r\n  handleInputChange = (e) => {\r\n    const name = e.target.getAttribute(\"name\");\r\n    const value = e.target.value;\r\n    this.setState(() => {\r\n      return {\r\n        [name]: value,\r\n      };\r\n    });\r\n  };\r\n\r\n  handleSnackbarClose = () => {\r\n    this.setState(() => {\r\n      return { isSnackbarOpen: false, snackbarMessage: \"\" };\r\n    });\r\n  };\r\n\r\n  handleLoginSubmit = (e) => {\r\n    e.preventDefault();\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(\r\n        this.state.loginEmail,\r\n        this.state.loginPassword\r\n      )\r\n      .catch((error) => {\r\n        this.setState(() => {\r\n          return {\r\n            isSnackbarOpen: true,\r\n            snackbarMessage: error.message,\r\n          };\r\n        });\r\n      });\r\n  };\r\n\r\n  handleRegisterSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (this.state.registerPassword === this.state.registerPasswordConfirm) {\r\n      if (this.state.registerAdminKey !== \"\") {\r\n        db.collection(\"AdminKeys\")\r\n          .where(\"Keys\", \"!=\", [])\r\n          .get()\r\n          .then((querySnapshot) => {\r\n            const docs = [];\r\n            querySnapshot.forEach((doc) => docs.push(doc.data()));\r\n            if (\r\n              docs.length !== 0 &&\r\n              docs[0].Keys.indexOf(this.state.registerAdminKey) !== -1\r\n            ) {\r\n              this.registerUser(true);\r\n            } else {\r\n              this.setState(() => {\r\n                return {\r\n                  isSnackbarOpen: true,\r\n                  snackbarMessage: \"Invalid Admin Key\",\r\n                };\r\n              });\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            this.setState(() => {\r\n              return {\r\n                isSnackbarOpen: true,\r\n                snackbarMessage: error.message,\r\n              };\r\n            });\r\n          });\r\n      } else {\r\n        this.registerUser(false);\r\n      }\r\n    } else {\r\n      this.setState(() => {\r\n        return {\r\n          isSnackbarOpen: true,\r\n          snackbarMessage: \"Passwords do not match.\",\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  registerUser = (isAdmin) => {\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(\r\n        this.state.registerEmail,\r\n        this.state.registerPassword\r\n      )\r\n      .then((userCredential) => {\r\n        userCredential.user\r\n          .updateProfile({\r\n            displayName: this.state.registerUsername,\r\n          })\r\n          .then(() => {\r\n            db.collection(\"Users\")\r\n              .doc(userCredential.user.uid)\r\n              .set({ isAdmin })\r\n              .then(() => {\r\n                userCredential.user.sendEmailVerification().catch((error) => {\r\n                  this.setState(() => {\r\n                    return {\r\n                      isSnackbarOpen: true,\r\n                      snackbarMessage: error.message,\r\n                    };\r\n                  });\r\n                });\r\n              })\r\n              .catch((error) => {\r\n                this.setState(() => {\r\n                  return {\r\n                    isSnackbarOpen: true,\r\n                    snackbarMessage: error.message,\r\n                  };\r\n                });\r\n              });\r\n          })\r\n          .catch((error) => {\r\n            this.setState(() => {\r\n              return {\r\n                isSnackbarOpen: true,\r\n                snackbarMessage: error.message,\r\n              };\r\n            });\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        this.setState(() => {\r\n          return {\r\n            isSnackbarOpen: true,\r\n            snackbarMessage: error.message,\r\n          };\r\n        });\r\n      });\r\n  };\r\n\r\n  handleForgotPassword = () => {\r\n    if (this.state.loginEmail) {\r\n      firebase\r\n        .auth()\r\n        .sendPasswordResetEmail(this.state.loginEmail)\r\n        .then(() => {\r\n          this.setState(() => {\r\n            return {\r\n              isSnackbarOpen: true,\r\n              snackbarMessage: `Password Reset Link sent at ${this.state.loginEmail}`,\r\n            };\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          this.setState(() => {\r\n            return {\r\n              isSnackbarOpen: true,\r\n              snackbarMessage: error.message,\r\n            };\r\n          });\r\n        });\r\n    } else {\r\n      this.setState(() => {\r\n        return {\r\n          isSnackbarOpen: true,\r\n          snackbarMessage: \"Please enter your Email address.\",\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  render = () => {\r\n    return (\r\n      <div className=\"LoginRegister\">\r\n        <Paper elevation={3} className=\"LoginRegister-FormContainer\">\r\n          <Tabs\r\n            value={this.state.tabValue}\r\n            onChange={this.handleTabValueChange}\r\n          >\r\n            <Tab label=\"Login\" />\r\n            <Tab label=\"Register\" />\r\n          </Tabs>\r\n          {this.state.tabValue === 0 ? (\r\n            <form\r\n              onSubmit={this.handleLoginSubmit}\r\n              className=\"LoginRegister-Form\"\r\n            >\r\n              <TextField\r\n                label=\"Email\"\r\n                type=\"email\"\r\n                required\r\n                name=\"loginEmail\"\r\n                value={this.state.loginEmail}\r\n                onChange={this.handleInputChange}\r\n              ></TextField>\r\n              <TextField\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                required\r\n                name=\"loginPassword\"\r\n                value={this.state.loginPassword}\r\n                onChange={this.handleInputChange}\r\n              ></TextField>\r\n              <Button type=\"submit\">Log In</Button>\r\n              <Button size=\"small\" onClick={this.handleForgotPassword}>\r\n                Forgot password?\r\n              </Button>\r\n            </form>\r\n          ) : (\r\n            <form\r\n              onSubmit={this.handleRegisterSubmit}\r\n              className=\"LoginRegister-Form\"\r\n            >\r\n              <TextField\r\n                label=\"Username\"\r\n                required\r\n                name=\"registerUsername\"\r\n                value={this.state.registerUsername}\r\n                onChange={this.handleInputChange}\r\n              ></TextField>\r\n              <TextField\r\n                label=\"Email\"\r\n                type=\"email\"\r\n                required\r\n                name=\"registerEmail\"\r\n                value={this.state.registerEmail}\r\n                onChange={this.handleInputChange}\r\n              ></TextField>\r\n              <TextField\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                required\r\n                name=\"registerPassword\"\r\n                value={this.state.registerPassword}\r\n                onChange={this.handleInputChange}\r\n              ></TextField>\r\n              <TextField\r\n                label=\"Confirm Password\"\r\n                type=\"password\"\r\n                required\r\n                name=\"registerPasswordConfirm\"\r\n                value={this.state.registerPasswordConfirm}\r\n                onChange={this.handleInputChange}\r\n              ></TextField>\r\n              <TextField\r\n                type=\"password\"\r\n                label=\"Admin Key\"\r\n                name=\"registerAdminKey\"\r\n                value={this.state.registerAdminKey}\r\n                onChange={this.handleInputChange}\r\n              ></TextField>\r\n              <Button type=\"submit\">Register</Button>\r\n            </form>\r\n          )}\r\n        </Paper>\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"left\",\r\n          }}\r\n          open={this.state.isSnackbarOpen}\r\n          autoHideDuration={6000}\r\n          onClose={this.handleSnackbarClose}\r\n          message={this.state.snackbarMessage}\r\n          action={\r\n            <React.Fragment>\r\n              <IconButton\r\n                size=\"small\"\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                onClick={this.handleSnackbarClose}\r\n              >\r\n                <CloseIcon fontSize=\"small\" />\r\n              </IconButton>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default LoginRegister;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  IconButton,\r\n  Menu,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport AccountBoxIcon from \"@material-ui/icons/AccountBox\";\r\nimport VerifiedUserIcon from \"@material-ui/icons/VerifiedUser\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport \"./stylesheets/Header.css\";\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isAccountMenuOpen: false,\r\n    };\r\n  }\r\n\r\n  handleAccountMenuOpen = () => {\r\n    this.setState(() => {\r\n      return { isAccountMenuOpen: true };\r\n    });\r\n  };\r\n\r\n  handleAccountMenuClose = () => {\r\n    this.setState(() => {\r\n      return { isAccountMenuOpen: false };\r\n    });\r\n  };\r\n\r\n  handleChangeFocus = () => {\r\n    this.props.handleChangeFocus(\"Profile\");\r\n    this.handleAccountMenuClose();\r\n  };\r\n\r\n  render = () => {\r\n    return (\r\n      <AppBar position=\"sticky\" className=\"Header\">\r\n        <Toolbar className=\"Header-Toolbar\">\r\n          <div className=\"Header-ToolbarLeft\">\r\n            <IconButton color=\"inherit\" onClick={this.props.handleDrawerOpen}>\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" noWrap>\r\n              Library Management System\r\n            </Typography>\r\n          </div>\r\n\r\n          <IconButton\r\n            color=\"inherit\"\r\n            onClick={this.handleAccountMenuOpen}\r\n            className=\"Header-AccountButton\"\r\n          >\r\n            <AccountBoxIcon />\r\n          </IconButton>\r\n        </Toolbar>\r\n\r\n        <Menu\r\n          anchorEl={document.querySelector(\".Header-AccountButton\")}\r\n          keepMounted\r\n          open={this.state.isAccountMenuOpen}\r\n          onClose={this.handleAccountMenuClose}\r\n        >\r\n          <MenuItem>\r\n            {this.props.isUserAdmin ? (\r\n              <VerifiedUserIcon className=\"Header-AdminIcon\" />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {this.props.user.displayName}\r\n          </MenuItem>\r\n          <MenuItem onClick={this.handleChangeFocus}>Profile</MenuItem>\r\n          <MenuItem onClick={this.props.handleLogout}>Logout</MenuItem>\r\n        </Menu>\r\n      </AppBar>\r\n    );\r\n  };\r\n}\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport firebase from \"./Firebase\";\r\nimport \"./stylesheets/Profile.css\";\r\nconst db = firebase.firestore();\r\n\r\nclass Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isChangeDisplayNameExpanded: false,\r\n      newUsername: \"\",\r\n      isChangeEmailExpanded: false,\r\n      newEmail: \"\",\r\n      newEmailPassword: \"\",\r\n      isChangePasswordExpanded: false,\r\n      oldPassword: \"\",\r\n      newPassword: \"\",\r\n      newPasswordConfirm: \"\",\r\n      isChangeAdminKeysExpanded: false,\r\n      newAdminKey: \"\",\r\n      isDeleteAccountExpanded: false,\r\n      deletePassword: \"\",\r\n      adminKey: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.unSubAdminKeys = db\r\n      .collection(\"AdminKeys\")\r\n      .where(\"Keys\", \"!=\", [])\r\n      .onSnapshot((querySnapshot) => {\r\n        const docs = [];\r\n        querySnapshot.forEach((doc) => docs.push(doc.data()));\r\n        if (docs[0]) {\r\n          this.setState(() => {\r\n            return { adminKey: docs[0].Keys };\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  componentWillUnmount = () => {\r\n    this.unSubAdminKeys();\r\n  };\r\n\r\n  handleChangeFocus = () => {\r\n    this.props.handleChangeFocus(\"Library\");\r\n  };\r\n\r\n  handleInputChange = (e) => {\r\n    const name = e.target.getAttribute(\"name\");\r\n    const value = e.target.value;\r\n    this.setState(() => {\r\n      return {\r\n        [name]: value,\r\n      };\r\n    });\r\n  };\r\n\r\n  handleChangeDisplayNameExpandedToggle = (e, isExpanded) => {\r\n    this.setState(() => {\r\n      return { isChangeDisplayNameExpanded: isExpanded };\r\n    });\r\n  };\r\n\r\n  handleChangeDisplayNameSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.user\r\n      .updateProfile({\r\n        displayName: this.state.newUsername,\r\n      })\r\n      .then(() => {\r\n        this.setState(\r\n          () => {\r\n            return { newUsername: \"\", isChangeDisplayNameExpanded: false };\r\n          },\r\n          () => {\r\n            this.props.handleSnackbarOpen(\"Username Updated.\");\r\n          }\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        this.props.handleSnackbarOpen(error.message);\r\n      });\r\n  };\r\n\r\n  handleChangeEmailExpandedToggle = (e, isExpanded) => {\r\n    this.setState(() => {\r\n      return { isChangeEmailExpanded: isExpanded };\r\n    });\r\n  };\r\n\r\n  handleChangeEmailSubmit = (e) => {\r\n    e.preventDefault();\r\n    const credential = firebase.auth.EmailAuthProvider.credential(\r\n      this.props.user.email,\r\n      this.state.newEmailPassword\r\n    );\r\n    this.props.user\r\n      .reauthenticateWithCredential(credential)\r\n      .then(() => {\r\n        this.props.user\r\n          .updateEmail(this.state.newEmail)\r\n          .then(() => {\r\n            this.props.user\r\n              .sendEmailVerification()\r\n              .then(() => {\r\n                this.setState(\r\n                  () => {\r\n                    return {\r\n                      newEmail: \"\",\r\n                      newPassword: \"\",\r\n                      isChangeEmailExpanded: false,\r\n                    };\r\n                  },\r\n                  () => {\r\n                    this.props.handleSnackbarOpen(\r\n                      \"Email Updated. Verify New Email Address.\"\r\n                    );\r\n                    window.location.reload();\r\n                  }\r\n                );\r\n              })\r\n              .catch((error) => {\r\n                this.props.handleSnackbarOpen(error.message);\r\n              });\r\n          })\r\n          .catch((error) => {\r\n            this.props.handleSnackbarOpen(error.message);\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        this.props.handleSnackbarOpen(error.message);\r\n      });\r\n  };\r\n\r\n  handleChangePasswordExpandedToggle = (e, isExpanded) => {\r\n    this.setState(() => {\r\n      return { isChangePasswordExpanded: isExpanded };\r\n    });\r\n  };\r\n\r\n  handleChangePasswordSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (this.state.newPassword === this.state.newPasswordConfirm) {\r\n      const credential = firebase.auth.EmailAuthProvider.credential(\r\n        this.props.user.email,\r\n        this.state.oldPassword\r\n      );\r\n      this.props.user\r\n        .reauthenticateWithCredential(credential)\r\n        .then(() => {\r\n          this.props.user\r\n            .updatePassword(this.state.newPassword)\r\n            .then(() => {\r\n              this.setState(\r\n                () => {\r\n                  return {\r\n                    oldPassword: \"\",\r\n                    newPassword: \"\",\r\n                    newPasswordConfirm: \"\",\r\n                    isChangePasswordExpanded: false,\r\n                  };\r\n                },\r\n                () => {\r\n                  this.props.handleSnackbarOpen(\"Password Updated.\");\r\n                }\r\n              );\r\n            })\r\n            .catch((error) => {\r\n              this.props.handleSnackbarOpen(error.message);\r\n            });\r\n        })\r\n        .catch((error) => {\r\n          this.props.handleSnackbarOpen(error.message);\r\n        });\r\n    } else {\r\n      this.props.handleSnackbarOpen(\"New Passwords do not match.\");\r\n    }\r\n  };\r\n\r\n  handleChangeAdminKeysExpandedToggle = (e, isExpanded) => {\r\n    this.setState(() => {\r\n      return { isChangeAdminKeysExpanded: isExpanded };\r\n    });\r\n  };\r\n\r\n  handleChangeAdminKeysSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    db.collection(\"AdminKeys\")\r\n      .where(\"Keys\", \"!=\", [])\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        const docs = [];\r\n        querySnapshot.forEach((doc) => docs.push(doc.ref));\r\n        if (docs[0]) {\r\n          docs[0]\r\n            .update({ Keys: this.state.newAdminKey })\r\n            .then(() => {\r\n              this.setState(\r\n                () => {\r\n                  return {\r\n                    newAdminKey: \"\",\r\n                    isChangeAdminKeysExpanded: false,\r\n                  };\r\n                },\r\n                () => {\r\n                  this.props.handleSnackbarOpen(\"Updated AdminKey.\");\r\n                }\r\n              );\r\n            })\r\n            .catch((error) => {\r\n              this.props.handleSnackbarOpen(error.message);\r\n            });\r\n        } else {\r\n          this.props.handleSnackbarOpen(\"Error while fetching AdminKey.\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.props.handleSnackbarOpen(error.message);\r\n      });\r\n  };\r\n\r\n  handleDeleteAccountExpandedToggle = (e, isExpanded) => {\r\n    this.setState(() => {\r\n      return { isDeleteAccountExpanded: isExpanded };\r\n    });\r\n  };\r\n\r\n  handleDeleteAccountSubmit = (e) => {\r\n    e.preventDefault();\r\n    const credential = firebase.auth.EmailAuthProvider.credential(\r\n      this.props.user.email,\r\n      this.state.deletePassword\r\n    );\r\n    this.props.user\r\n      .reauthenticateWithCredential(credential)\r\n      .then(() => {\r\n        db.collection(\"Users\")\r\n          .doc(this.props.user.uid)\r\n          .delete()\r\n          .then(() => {\r\n            this.props.user.delete().catch((error) => {\r\n              this.props.handleSnackbarOpen(error.message);\r\n            });\r\n          })\r\n          .catch((error) => {\r\n            this.props.handleSnackbarOpen(error.message);\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        this.props.handleSnackbarOpen(error.message);\r\n      });\r\n  };\r\n\r\n  render = () => {\r\n    return (\r\n      <div className=\"Profile\">\r\n        <div className=\"Profile-BackButtonContainer\">\r\n          <Button onClick={this.handleChangeFocus}>Back to Library</Button>\r\n        </div>\r\n\r\n        <div>\r\n          <Accordion\r\n            expanded={this.state.isChangeDisplayNameExpanded}\r\n            onChange={this.handleChangeDisplayNameExpandedToggle}\r\n          >\r\n            <AccordionSummary\r\n              expandIcon={\r\n                !this.state.isChangeDisplayNameExpanded ? (\r\n                  <EditIcon />\r\n                ) : (\r\n                  <CloseIcon />\r\n                )\r\n              }\r\n            >\r\n              <Typography>Username</Typography>\r\n              <Typography>{this.props.user.displayName}</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              <form\r\n                className=\"Profile-AccordionForm\"\r\n                onSubmit={this.handleChangeDisplayNameSubmit}\r\n              >\r\n                <TextField\r\n                  label=\"New Username\"\r\n                  name=\"newUsername\"\r\n                  value={this.state.newUsername}\r\n                  onChange={this.handleInputChange}\r\n                  required\r\n                ></TextField>\r\n                <Button type=\"submit\">Submit</Button>\r\n              </form>\r\n            </AccordionDetails>\r\n          </Accordion>\r\n\r\n          <Accordion\r\n            expanded={this.state.isChangeEmailExpanded}\r\n            onChange={this.handleChangeEmailExpandedToggle}\r\n          >\r\n            <AccordionSummary\r\n              expandIcon={\r\n                !this.state.isChangeEmailExpanded ? <EditIcon /> : <CloseIcon />\r\n              }\r\n            >\r\n              <Typography>Email</Typography>\r\n              <Typography>{this.props.user.email}</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              <form\r\n                className=\"Profile-AccordionForm\"\r\n                onSubmit={this.handleChangeEmailSubmit}\r\n              >\r\n                <TextField\r\n                  label=\"New Email\"\r\n                  name=\"newEmail\"\r\n                  value={this.state.newEmail}\r\n                  onChange={this.handleInputChange}\r\n                  required\r\n                ></TextField>\r\n                <TextField\r\n                  label=\"Password\"\r\n                  name=\"newEmailPassword\"\r\n                  value={this.state.newEmailPassword}\r\n                  onChange={this.handleInputChange}\r\n                  type=\"password\"\r\n                  required\r\n                ></TextField>\r\n                <Button type=\"submit\">Submit</Button>\r\n              </form>\r\n            </AccordionDetails>\r\n          </Accordion>\r\n\r\n          <Accordion\r\n            expanded={this.state.isChangePasswordExpanded}\r\n            onChange={this.handleChangePasswordExpandedToggle}\r\n          >\r\n            <AccordionSummary\r\n              expandIcon={\r\n                !this.state.isChangePasswordExpanded ? (\r\n                  <EditIcon />\r\n                ) : (\r\n                  <CloseIcon />\r\n                )\r\n              }\r\n            >\r\n              <Typography>Password</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              <form\r\n                className=\"Profile-AccordionForm\"\r\n                onSubmit={this.handleChangePasswordSubmit}\r\n              >\r\n                <TextField\r\n                  label=\"Current Password\"\r\n                  name=\"oldPassword\"\r\n                  value={this.state.oldPassword}\r\n                  onChange={this.handleInputChange}\r\n                  type=\"password\"\r\n                  required\r\n                ></TextField>\r\n                <TextField\r\n                  label=\"New Password\"\r\n                  name=\"newPassword\"\r\n                  value={this.state.newPassword}\r\n                  onChange={this.handleInputChange}\r\n                  type=\"password\"\r\n                  required\r\n                ></TextField>\r\n                <TextField\r\n                  label=\"Confirm New Password\"\r\n                  name=\"newPasswordConfirm\"\r\n                  value={this.state.newPasswordConfirm}\r\n                  onChange={this.handleInputChange}\r\n                  type=\"password\"\r\n                  required\r\n                ></TextField>\r\n                <Button type=\"submit\">Submit</Button>\r\n              </form>\r\n            </AccordionDetails>\r\n          </Accordion>\r\n\r\n          {this.props.isUserAdmin ? (\r\n            <Accordion\r\n              expanded={this.state.isChangeAdminKeysExpanded}\r\n              onChange={this.handleChangeAdminKeysExpandedToggle}\r\n            >\r\n              <AccordionSummary\r\n                expandIcon={\r\n                  !this.state.isChangeAdminKeysExpanded ? (\r\n                    <EditIcon />\r\n                  ) : (\r\n                    <CloseIcon />\r\n                  )\r\n                }\r\n              >\r\n                <Typography>Admin Key</Typography>\r\n                <Typography>{this.state.adminKey}</Typography>\r\n              </AccordionSummary>\r\n              <AccordionDetails>\r\n                <form\r\n                  className=\"Profile-AccordionForm\"\r\n                  onSubmit={this.handleChangeAdminKeysSubmit}\r\n                >\r\n                  <TextField\r\n                    label=\"New Admin Key\"\r\n                    name=\"newAdminKey\"\r\n                    value={this.state.newAdminKey}\r\n                    onChange={this.handleInputChange}\r\n                    type=\"password\"\r\n                    required\r\n                  ></TextField>\r\n                  <Button type=\"submit\">Submit</Button>\r\n                </form>\r\n              </AccordionDetails>\r\n            </Accordion>\r\n          ) : null}\r\n\r\n          <Accordion\r\n            expanded={this.state.isDeleteAccountExpanded}\r\n            onChange={this.handleDeleteAccountExpandedToggle}\r\n          >\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n              <Typography>Delete Account</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              <form\r\n                className=\"Profile-AccordionForm\"\r\n                onSubmit={this.handleDeleteAccountSubmit}\r\n              >\r\n                <TextField\r\n                  label=\"Password\"\r\n                  name=\"deletePassword\"\r\n                  value={this.state.deletePassword}\r\n                  onChange={this.handleInputChange}\r\n                  type=\"password\"\r\n                  required\r\n                ></TextField>\r\n                <Button type=\"submit\" color=\"secondary\">\r\n                  Delete Account\r\n                </Button>\r\n              </form>\r\n            </AccordionDetails>\r\n          </Accordion>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n}\r\nexport default Profile;\r\n","export default __webpack_public_path__ + \"static/media/defaultBook.3309b0ae.png\";","import React, { Component } from \"react\";\r\nimport {\r\n  Typography,\r\n  TableContainer,\r\n  Paper,\r\n  TableHead,\r\n  TableRow,\r\n  Table,\r\n  TableCell,\r\n  TableBody,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport firebase from \"./Firebase\";\r\nimport defaultBook from \"./images/defaultBook.png\";\r\nimport \"./stylesheets/Library.css\";\r\nconst db = firebase.firestore();\r\nconst numOfAllowedBooks = 3;\r\n\r\nclass Library extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      library: [],\r\n      dontShow: [],\r\n      isRequestDialogOpen: false,\r\n      requestId: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.unSubInventory = db\r\n      .collection(\"Inventory\")\r\n      .where(\"quantity\", \">\", 0)\r\n      .onSnapshot((querySnapshot) => {\r\n        let library = [];\r\n        querySnapshot.forEach(async (doc) => {\r\n          const url =\r\n            \"https://www.googleapis.com/books/v1/volumes/\" + doc.data().id;\r\n          try {\r\n            const result = await fetch(url);\r\n            const apiData = await result.json();\r\n            if (apiData) {\r\n              library.push({\r\n                ...apiData,\r\n                quantity: doc.data().quantity,\r\n                price: doc.data().price,\r\n              });\r\n              this.setState(() => {\r\n                return { library };\r\n              });\r\n            } else {\r\n              // this error will not occur unless googleapi deletes a book id.\r\n              this.props.handleSnackbarOpen(\"Book Id not found.\");\r\n            }\r\n          } catch (error) {\r\n            this.props.handleSnackbarOpen(error.message);\r\n          }\r\n        });\r\n      });\r\n    this.unSubDontShow = db\r\n      .collection(\"Requests\")\r\n      .where(\"userID\", \"==\", this.props.user.uid)\r\n      .where(\"status\", \"in\", [\"pending\", \"approved\", \"collected\"])\r\n      .onSnapshot((querySnapshot2) => {\r\n        let dontShow = [];\r\n        querySnapshot2.forEach((doc) => dontShow.push(doc.data().bookID));\r\n        this.setState(() => {\r\n          return {\r\n            dontShow,\r\n          };\r\n        });\r\n      });\r\n  };\r\n\r\n  componentWillUnmount = () => {\r\n    this.unSubInventory();\r\n    this.unSubDontShow();\r\n  };\r\n\r\n  handleDialogClose = () => {\r\n    this.setState(() => {\r\n      return { isRequestDialogOpen: false, requestId: \"\" };\r\n    });\r\n  };\r\n\r\n  handleRequestDialogOpen = (id) => {\r\n    this.setState(() => {\r\n      return {\r\n        isRequestDialogOpen: true,\r\n        requestId: id,\r\n      };\r\n    });\r\n  };\r\n\r\n  handleRequest = () => {\r\n    db.collection(\"Requests\")\r\n      .where(\"userID\", \"==\", this.props.user.uid)\r\n      .where(\"bookID\", \"==\", this.state.requestId)\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        const docs = [];\r\n        querySnapshot.forEach((doc) => docs.push(doc.data()));\r\n        if (docs.length > 0) {\r\n          this.props.handleSnackbarOpen(\"Book Already Requested\");\r\n        } else {\r\n          db.collection(\"Requests\")\r\n            .where(\"userID\", \"==\", this.props.user.uid)\r\n            .get()\r\n            .then((querySnapshot2) => {\r\n              const docs2 = [];\r\n              querySnapshot2.forEach((doc) => docs2.push(doc.data()));\r\n              if (docs2.length >= numOfAllowedBooks) {\r\n                this.props.handleSnackbarOpen(\"Request Limit Exceeded.\");\r\n              } else {\r\n                db.collection(\"Requests\")\r\n                  .add({\r\n                    userID: this.props.user.uid,\r\n                    bookID: this.state.requestId,\r\n                    status: \"pending\",\r\n                  })\r\n                  .then(() => {\r\n                    this.handleDialogClose();\r\n                    this.props.handleSnackbarOpen(\"Request Sent to Admin.\");\r\n                  })\r\n                  .catch((error) => {\r\n                    this.handleDialogClose();\r\n                    this.props.handleSnackbarOpen(error.message);\r\n                  });\r\n              }\r\n            })\r\n            .catch((error) => {\r\n              this.handleDialogClose();\r\n              this.props.handleSnackbarOpen(error.message);\r\n            });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.handleDialogClose();\r\n        this.props.handleSnackbarOpen(error.message);\r\n      });\r\n  };\r\n\r\n  render = () => {\r\n    return (\r\n      <div className=\"Library\">\r\n        <Typography variant=\"h3\">Library</Typography>\r\n        {this.state.library.length > 0 && (\r\n          <TableContainer component={Paper}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell></TableCell>\r\n                  <TableCell>Title</TableCell>\r\n                  <TableCell>Authors</TableCell>\r\n                  <TableCell>Publisher</TableCell>\r\n                  <TableCell>Published Date</TableCell>\r\n                  <TableCell></TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {this.state.library.map((book) => {\r\n                  return (\r\n                    this.state.dontShow.indexOf(book.id) === -1 && (\r\n                      <TableRow key={book.id}>\r\n                        <TableCell>\r\n                          <img\r\n                            src={\r\n                              book.volumeInfo.imageLinks\r\n                                ? book.volumeInfo.imageLinks.thumbnail\r\n                                : defaultBook\r\n                            }\r\n                            alt={book.title}\r\n                          ></img>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          {book.volumeInfo.title ? book.volumeInfo.title : \"\"}\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          {book.volumeInfo.authors\r\n                            ? book.volumeInfo.authors.join(\", \")\r\n                            : \"\"}\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          {book.volumeInfo.publisher\r\n                            ? book.volumeInfo.publisher\r\n                            : \"\"}\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          {book.volumeInfo.publishedDate\r\n                            ? book.volumeInfo.publishedDate\r\n                            : \"\"}\r\n                        </TableCell>\r\n\r\n                        <TableCell>\r\n                          <IconButton\r\n                            onClick={() => {\r\n                              this.handleRequestDialogOpen(book.id);\r\n                            }}\r\n                            disabled={\r\n                              this.state.dontShow.length >= numOfAllowedBooks\r\n                            }\r\n                          >\r\n                            <AddIcon />\r\n                          </IconButton>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    )\r\n                  );\r\n                })}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        )}\r\n        <Dialog\r\n          open={this.state.isRequestDialogOpen}\r\n          onClose={this.handleDialogClose}\r\n        >\r\n          <DialogTitle>Confirm Request to Borrow.</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              The price of this book is ₹\r\n              {this.state.isRequestDialogOpen\r\n                ? this.state.library.find(\r\n                    (book) => book.id === this.state.requestId\r\n                  ).price\r\n                : \"\"}\r\n              . If unable to return the book within 7 days a fine of ₹10/week\r\n              will be charged.\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleDialogClose} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={this.handleRequest} color=\"primary\">\r\n              Confirm\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default Library;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Drawer as MUIDrawer,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport StorageIcon from \"@material-ui/icons/Storage\";\r\nimport StoreIcon from \"@material-ui/icons/Store\";\r\n\r\nclass Drawer extends Component {\r\n  handleInventoryClick = () => {\r\n    this.props.handleChangeFocus(\"Inventory\");\r\n    this.props.handleDrawerClose();\r\n  };\r\n\r\n  handleLibraryClick = () => {\r\n    this.props.handleChangeFocus(\"Library\");\r\n    this.props.handleDrawerClose();\r\n  };\r\n\r\n  render = () => {\r\n    return (\r\n      <MUIDrawer\r\n        anchor=\"left\"\r\n        open={this.props.isDrawerOpen}\r\n        onClose={this.props.handleDrawerClose}\r\n        className=\"Drawer\"\r\n      >\r\n        <List>\r\n          {this.props.isUserAdmin && (\r\n            <ListItem\r\n              button\r\n              key=\"Inventory\"\r\n              onClick={this.handleInventoryClick}\r\n            >\r\n              <ListItemIcon>\r\n                <StorageIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Inventory\" />\r\n            </ListItem>\r\n          )}\r\n          {!this.props.isUserAdmin && (\r\n            <ListItem button key=\"Library\" onClick={this.handleLibraryClick}>\r\n              <ListItemIcon>\r\n                <StoreIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Library\" />\r\n            </ListItem>\r\n          )}\r\n        </List>\r\n      </MUIDrawer>\r\n    );\r\n  };\r\n}\r\n\r\nexport default Drawer;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Typography,\r\n  Paper,\r\n  Button,\r\n  TextField,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Table,\r\n  TableCell,\r\n  TableBody,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport BooksAPIKey from \"./BooksAPIKey\";\r\nimport defaultBook from \"./images/defaultBook.png\";\r\nimport firebase from \"./Firebase\";\r\nimport \"./stylesheets/Inventory.css\";\r\nconst db = firebase.firestore();\r\n\r\nclass Inventory extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      addItem: false,\r\n      searchTitle: \"\",\r\n      searchAuthor: \"\",\r\n      searchPublisher: \"\",\r\n      searchISBN: \"\",\r\n      searchResult: [],\r\n      isAddDialogOpen: false,\r\n      addId: \"\",\r\n      addQuantity: \"\",\r\n      addPrice: \"\",\r\n      inventory: [],\r\n      isEditDialogOpen: false,\r\n      editId: \"\",\r\n      editQuantity: \"\",\r\n      editPrice: \"\",\r\n      isDeleteDialogOpen: false,\r\n      idToBeDeleted: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.unsubInventoryListener = db\r\n      .collection(\"Inventory\")\r\n      .onSnapshot((querySnapshot) => {\r\n        let inventory = [];\r\n        querySnapshot.forEach(async (doc) => {\r\n          const url =\r\n            \"https://www.googleapis.com/books/v1/volumes/\" + doc.data().id;\r\n          try {\r\n            const result = await fetch(url);\r\n            const apiData = await result.json();\r\n            if (apiData) {\r\n              inventory.push({\r\n                ...apiData,\r\n                quantity: doc.data().quantity,\r\n                price: doc.data().price,\r\n              });\r\n              this.setState(() => {\r\n                return { inventory };\r\n              });\r\n            } else {\r\n              // this error will not occur unless googleapi deletes a book id.\r\n              this.props.handleSnackbarOpen(\"Book Id not found.\");\r\n            }\r\n          } catch (error) {\r\n            this.props.handleSnackbarOpen(error.message);\r\n          }\r\n        });\r\n      });\r\n  };\r\n\r\n  componentWillUnmount = () => {\r\n    this.unsubInventoryListener();\r\n  };\r\n\r\n  handleInputChange = (e) => {\r\n    const name = e.target.getAttribute(\"name\");\r\n    const value = e.target.value;\r\n    this.setState(() => {\r\n      return {\r\n        [name]: value,\r\n      };\r\n    });\r\n  };\r\n\r\n  toggleAddItem = () => {\r\n    this.setState((curState) => {\r\n      return { addItem: !curState.addItem };\r\n    });\r\n  };\r\n\r\n  handleSearchSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      !this.state.searchTitle &&\r\n      !this.state.searchAuthor &&\r\n      !this.state.searchPublisher &&\r\n      !this.state.searchISBN\r\n    ) {\r\n      this.props.handleSnackbarOpen(\"Please Enter at least 1 field.\");\r\n    } else {\r\n      let url = \"https://www.googleapis.com/books/v1/volumes?q=\";\r\n      if (this.state.searchTitle) {\r\n        url += `intitle:${this.state.searchTitle}`;\r\n      }\r\n      if (this.state.searchAuthor) {\r\n        if (this.state.searchTitle) {\r\n          url += `+inauthor:${this.state.searchAuthor}`;\r\n        } else {\r\n          url += `inauthor:${this.state.searchAuthor}`;\r\n        }\r\n      }\r\n      if (this.state.searchPublisher) {\r\n        if (this.state.searchTitle || this.state.searchAuthor) {\r\n          url += `+inpublisher:${this.state.searchPublisher}`;\r\n        } else {\r\n          url += `inpublisher:${this.state.searchPublisher}`;\r\n        }\r\n      }\r\n      if (this.state.searchISBN) {\r\n        if (\r\n          this.state.searchTitle ||\r\n          this.state.searchAuthor ||\r\n          this.state.searchPublisher\r\n        ) {\r\n          url += `+isbn:${this.state.searchISBN}`;\r\n        } else {\r\n          url += `isbn:${this.state.searchISBN}`;\r\n        }\r\n      }\r\n      url += `&key=${BooksAPIKey}`;\r\n      try {\r\n        const result = await fetch(url);\r\n        const data = await result.json();\r\n        if (data.items) {\r\n          this.setState(() => {\r\n            return { searchResult: data.items };\r\n          });\r\n        } else {\r\n          this.props.handleSnackbarOpen(\"No results found.\");\r\n        }\r\n      } catch (error) {\r\n        this.props.handleSnackbarOpen(error.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  handleDialogClose = () => {\r\n    this.setState(() => {\r\n      return {\r\n        isAddDialogOpen: false,\r\n        isEditDialogOpen: false,\r\n        isDeleteDialogOpen: false,\r\n        addId: \"\",\r\n        editId: \"\",\r\n        idToBeDeleted: \"\",\r\n      };\r\n    });\r\n  };\r\n\r\n  handleAddItemDialogOpen = (id) => {\r\n    this.setState(() => {\r\n      return { addId: id, isAddDialogOpen: true };\r\n    });\r\n  };\r\n\r\n  handleAddSubmit = (e) => {\r\n    e.preventDefault();\r\n    db.collection(\"Inventory\")\r\n      .where(\"id\", \"==\", this.state.addId)\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        const docs = [];\r\n        querySnapshot.forEach((doc) => docs.push(doc));\r\n        if (docs.length > 0) {\r\n          this.handleDialogClose();\r\n          this.props.handleSnackbarOpen(\"Duplicate Item.\");\r\n        } else {\r\n          db.collection(\"Inventory\")\r\n            .add({\r\n              id: this.state.addId,\r\n              quantity: parseInt(this.state.addQuantity),\r\n              price: parseFloat(this.state.addPrice),\r\n            })\r\n            .then(() => {\r\n              this.setState(\r\n                () => {\r\n                  return {\r\n                    isAddDialogOpen: false,\r\n                    addQuantity: \"\",\r\n                    addPrice: \"\",\r\n                    addId: \"\",\r\n                    addItem: false,\r\n                    searchTitle: \"\",\r\n                    searchAuthor: \"\",\r\n                    searchPublisher: \"\",\r\n                    searchISBN: \"\",\r\n                    searchResult: [],\r\n                  };\r\n                },\r\n                () => {\r\n                  this.props.handleSnackbarOpen(\"Added to Inventory\");\r\n                }\r\n              );\r\n            })\r\n            .catch((error) => {\r\n              this.handleDialogClose();\r\n              this.props.handleSnackbarOpen(error.message);\r\n            });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.handleDialogClose();\r\n        this.props.handleSnackbarOpen(error.message);\r\n      });\r\n  };\r\n\r\n  handleEditItemDialogOpen = (id) => {\r\n    this.setState((curState) => {\r\n      const editQuantity = curState.inventory.find((ele) => ele.id === id)\r\n        .quantity;\r\n      const editPrice = curState.inventory.find((ele) => ele.id === id).price;\r\n      return { editId: id, isEditDialogOpen: true, editQuantity, editPrice };\r\n    });\r\n  };\r\n\r\n  handleEditSubmit = (e) => {\r\n    e.preventDefault();\r\n    db.collection(\"Inventory\")\r\n      .where(\"id\", \"==\", this.state.editId)\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        const docs = [];\r\n        querySnapshot.forEach((doc) => docs.push(doc.ref));\r\n        if (docs.length > 0) {\r\n          docs[0]\r\n            .update({\r\n              quantity: parseInt(this.state.editQuantity),\r\n              price: parseFloat(this.state.editPrice),\r\n            })\r\n            .then(() => {\r\n              this.setState(\r\n                () => {\r\n                  return {\r\n                    isEditDialogOpen: false,\r\n                    editQuantity: \"\",\r\n                    editPrice: \"\",\r\n                    editId: \"\",\r\n                  };\r\n                },\r\n                () => {\r\n                  this.props.handleSnackbarOpen(\"Updated Inventory\");\r\n                }\r\n              );\r\n            })\r\n            .catch((error) => {\r\n              this.handleDialogClose();\r\n              this.props.handleSnackbarOpen(error.message);\r\n            });\r\n        } else {\r\n          this.handleDialogClose();\r\n          // will not occur.\r\n          this.props.handleSnackbarOpen(\"Unexpected Error.\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.handleDialogClose();\r\n        this.props.handleSnackbarOpen(error.message);\r\n      });\r\n  };\r\n\r\n  handleDeleteDialogOpen = (id) => {\r\n    this.setState(() => {\r\n      return {\r\n        isDeleteDialogOpen: true,\r\n        idToBeDeleted: id,\r\n      };\r\n    });\r\n  };\r\n\r\n  handleDeleteItem = () => {\r\n    db.collection(\"Inventory\")\r\n      .where(\"id\", \"==\", this.state.idToBeDeleted)\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        const docs = [];\r\n        querySnapshot.forEach((doc) => docs.push(doc.ref));\r\n        docs[0]\r\n          .delete()\r\n          .then(() => {\r\n            this.setState(\r\n              () => {\r\n                return {\r\n                  isDeleteDialogOpen: false,\r\n                  idToBeDeleted: \"\",\r\n                };\r\n              },\r\n              () => {\r\n                this.props.handleSnackbarOpen(\"Item successfully deleted!\");\r\n              }\r\n            );\r\n          })\r\n          .catch((error) => {\r\n            this.handleDialogClose();\r\n            this.props.handleSnackbarOpen(error.message);\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        this.handleDialogClose();\r\n        this.props.handleSnackbarOpen(error.message);\r\n      });\r\n  };\r\n\r\n  render = () => {\r\n    return (\r\n      <div className=\"Inventory\">\r\n        <Typography variant=\"h3\">Inventory</Typography>\r\n        <Paper className=\"Inventory-AddItem\">\r\n          <Button onClick={this.toggleAddItem}>Add Book</Button>\r\n          {this.state.addItem && (\r\n            <div>\r\n              <form\r\n                onSubmit={this.handleSearchSubmit}\r\n                className=\"Inventory-AddItemForm\"\r\n              >\r\n                <Typography variant=\"h4\">Search for a book</Typography>\r\n                <TextField\r\n                  label=\"Title\"\r\n                  name=\"searchTitle\"\r\n                  value={this.state.searchTitle}\r\n                  onChange={this.handleInputChange}\r\n                ></TextField>\r\n                <TextField\r\n                  label=\"Author\"\r\n                  name=\"searchAuthor\"\r\n                  value={this.state.searchAuthor}\r\n                  onChange={this.handleInputChange}\r\n                ></TextField>\r\n                <TextField\r\n                  label=\"Publisher\"\r\n                  name=\"searchPublisher\"\r\n                  value={this.state.searchPublisher}\r\n                  onChange={this.handleInputChange}\r\n                ></TextField>\r\n                <TextField\r\n                  label=\"ISBN\"\r\n                  InputProps={{\r\n                    inputProps: { pattern: \"[0-9]{10}|[0-9]{13}\" },\r\n                  }}\r\n                  name=\"searchISBN\"\r\n                  value={this.state.searchISBN}\r\n                  onChange={this.handleInputChange}\r\n                ></TextField>\r\n\r\n                <Button type=\"submit\">Search</Button>\r\n              </form>\r\n              {this.state.searchResult.length > 0 && (\r\n                <TableContainer component={Paper}>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell></TableCell>\r\n                        <TableCell>Title</TableCell>\r\n                        <TableCell>Authors</TableCell>\r\n                        <TableCell>Publisher</TableCell>\r\n                        <TableCell>Category</TableCell>\r\n                        <TableCell>Published Date</TableCell>\r\n                        <TableCell>Number of Pages</TableCell>\r\n                        <TableCell></TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {this.state.searchResult.map((result) => {\r\n                        return (\r\n                          <TableRow key={result.id}>\r\n                            <TableCell>\r\n                              <img\r\n                                src={\r\n                                  result.volumeInfo.imageLinks\r\n                                    ? result.volumeInfo.imageLinks.thumbnail\r\n                                    : defaultBook\r\n                                }\r\n                                alt={result.title}\r\n                              ></img>\r\n                            </TableCell>\r\n                            <TableCell>\r\n                              {result.volumeInfo.title\r\n                                ? result.volumeInfo.title\r\n                                : \"\"}\r\n                            </TableCell>\r\n                            <TableCell>\r\n                              {result.volumeInfo.authors\r\n                                ? result.volumeInfo.authors.join(\", \")\r\n                                : \"\"}\r\n                            </TableCell>\r\n                            <TableCell>\r\n                              {result.volumeInfo.publisher\r\n                                ? result.volumeInfo.publisher\r\n                                : \"\"}\r\n                            </TableCell>\r\n                            <TableCell>\r\n                              {result.volumeInfo.categories\r\n                                ? result.volumeInfo.categories.join(\", \")\r\n                                : \"\"}\r\n                            </TableCell>\r\n                            <TableCell>\r\n                              {result.volumeInfo.publishedDate\r\n                                ? result.volumeInfo.publishedDate\r\n                                : \"\"}\r\n                            </TableCell>\r\n                            <TableCell>\r\n                              {result.volumeInfo.pageCount\r\n                                ? result.volumeInfo.pageCount\r\n                                : \"\"}\r\n                            </TableCell>\r\n                            <TableCell>\r\n                              <IconButton\r\n                                onClick={() => {\r\n                                  this.handleAddItemDialogOpen(result.id);\r\n                                }}\r\n                              >\r\n                                <AddIcon />\r\n                              </IconButton>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        );\r\n                      })}\r\n                    </TableBody>\r\n                  </Table>\r\n                  <Typography>\r\n                    Please search for specific terms if unable to find required\r\n                    book.\r\n                  </Typography>\r\n                </TableContainer>\r\n              )}\r\n            </div>\r\n          )}\r\n        </Paper>\r\n        {this.state.inventory.length > 0 && (\r\n          <TableContainer component={Paper}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell></TableCell>\r\n                  <TableCell>Title</TableCell>\r\n                  <TableCell>Authors</TableCell>\r\n                  <TableCell>Publisher</TableCell>\r\n                  <TableCell>Published Date</TableCell>\r\n                  <TableCell>Price (₹)</TableCell>\r\n                  <TableCell>Quantity</TableCell>\r\n                  <TableCell></TableCell>\r\n                  <TableCell></TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {this.state.inventory.map((book) => {\r\n                  return (\r\n                    <TableRow key={book.id}>\r\n                      <TableCell>\r\n                        <img\r\n                          src={\r\n                            book.volumeInfo.imageLinks\r\n                              ? book.volumeInfo.imageLinks.thumbnail\r\n                              : defaultBook\r\n                          }\r\n                          alt={book.title}\r\n                        ></img>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        {book.volumeInfo.title ? book.volumeInfo.title : \"\"}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        {book.volumeInfo.authors\r\n                          ? book.volumeInfo.authors.join(\", \")\r\n                          : \"\"}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        {book.volumeInfo.publisher\r\n                          ? book.volumeInfo.publisher\r\n                          : \"\"}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        {book.volumeInfo.publishedDate\r\n                          ? book.volumeInfo.publishedDate\r\n                          : \"\"}\r\n                      </TableCell>\r\n                      <TableCell>{book.price ? book.price : \"\"}</TableCell>\r\n                      <TableCell>\r\n                        {book.quantity ? book.quantity : \"\"}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <IconButton\r\n                          onClick={() => {\r\n                            this.handleEditItemDialogOpen(book.id);\r\n                          }}\r\n                        >\r\n                          <EditIcon />\r\n                        </IconButton>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <IconButton\r\n                          onClick={() => {\r\n                            this.handleDeleteDialogOpen(book.id);\r\n                          }}\r\n                          color=\"secondary\"\r\n                        >\r\n                          <DeleteIcon />\r\n                        </IconButton>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        )}\r\n        <Dialog\r\n          open={this.state.isAddDialogOpen}\r\n          onClose={this.handleDialogClose}\r\n        >\r\n          <form onSubmit={this.handleAddSubmit}>\r\n            <DialogTitle>Add to inventory</DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText>\r\n                {this.state.isAddDialogOpen\r\n                  ? this.state.searchResult.find(\r\n                      (ele) => ele.id === this.state.addId\r\n                    ).volumeInfo.title\r\n                  : \"\"}\r\n              </DialogContentText>\r\n              <TextField\r\n                required\r\n                type=\"number\"\r\n                value={this.state.addQuantity}\r\n                onChange={this.handleInputChange}\r\n                name=\"addQuantity\"\r\n                label=\"Quantity\"\r\n                InputProps={{ inputProps: { min: 0 } }}\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                required\r\n                type=\"number\"\r\n                value={this.state.addPrice}\r\n                onChange={this.handleInputChange}\r\n                name=\"addPrice\"\r\n                label=\"Price (₹)\"\r\n                InputProps={{ inputProps: { min: 0, step: \"any\" } }}\r\n                fullWidth\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={this.handleDialogClose} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n              <Button color=\"primary\" type=\"submit\">\r\n                Add\r\n              </Button>\r\n            </DialogActions>\r\n          </form>\r\n        </Dialog>\r\n        <Dialog\r\n          open={this.state.isEditDialogOpen}\r\n          onClose={this.handleDialogClose}\r\n        >\r\n          <form onSubmit={this.handleEditSubmit}>\r\n            <DialogTitle>Edit inventory</DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText>\r\n                {this.state.isEditDialogOpen\r\n                  ? this.state.inventory.find(\r\n                      (ele) => ele.id === this.state.editId\r\n                    ).volumeInfo.title\r\n                  : \"\"}\r\n              </DialogContentText>\r\n              <TextField\r\n                required\r\n                type=\"number\"\r\n                value={this.state.editQuantity}\r\n                onChange={this.handleInputChange}\r\n                name=\"editQuantity\"\r\n                label=\"Quantity\"\r\n                InputProps={{ inputProps: { min: 0 } }}\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                required\r\n                type=\"number\"\r\n                value={this.state.editPrice}\r\n                onChange={this.handleInputChange}\r\n                name=\"editPrice\"\r\n                label=\"Price (₹)\"\r\n                InputProps={{ inputProps: { min: 0, step: \"any\" } }}\r\n                fullWidth\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={this.handleDialogClose} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n              <Button color=\"primary\" type=\"submit\">\r\n                Save\r\n              </Button>\r\n            </DialogActions>\r\n          </form>\r\n        </Dialog>\r\n        <Dialog\r\n          open={this.state.isDeleteDialogOpen}\r\n          onClose={this.handleDialogClose}\r\n        >\r\n          <DialogTitle>Confirm Deletion.</DialogTitle>\r\n          <DialogActions>\r\n            <Button onClick={this.handleDialogClose} color=\"primary\">\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={this.handleDeleteItem} color=\"secondary\">\r\n              Delete\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default Inventory;\r\n","const BooksAPIKey = \"AIzaSyBBYCDggpHEho-sMOj_HxvgSC2wetbSUB8\";\r\nexport default BooksAPIKey;\r\n","import React, { Component } from \"react\";\r\nimport firebase from \"./Firebase\";\r\nimport { Snackbar, IconButton } from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Header from \"./Header\";\r\nimport Profile from \"./Profile\";\r\nimport Library from \"./Library\";\r\nimport Drawer from \"./Drawer\";\r\nimport Inventory from \"./Inventory\";\r\nimport \"./stylesheets/Homepage.css\";\r\n\r\nclass Homepage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isSnackbarOpen: false,\r\n      snackbarMessage: \"\",\r\n      componentInFocus: this.props.isUserAdmin ? \"Inventory\" : \"Library\",\r\n      isDrawerOpen: false,\r\n    };\r\n  }\r\n\r\n  handleLogout = () => {\r\n    firebase.auth().signOut();\r\n  };\r\n\r\n  handleSnackbarOpen = (snackbarMessage) => {\r\n    this.setState(() => {\r\n      return { isSnackbarOpen: true, snackbarMessage };\r\n    });\r\n  };\r\n\r\n  handleSnackbarClose = () => {\r\n    this.setState(() => {\r\n      return { isSnackbarOpen: false, snackbarMessage: \"\" };\r\n    });\r\n  };\r\n\r\n  handleChangeFocus = (componentInFocus) => {\r\n    this.setState(() => {\r\n      return { componentInFocus };\r\n    });\r\n  };\r\n\r\n  handleDrawerClose = () => {\r\n    this.setState(() => {\r\n      return {\r\n        isDrawerOpen: false,\r\n      };\r\n    });\r\n  };\r\n\r\n  handleDrawerOpen = () => {\r\n    this.setState(() => {\r\n      return {\r\n        isDrawerOpen: true,\r\n      };\r\n    });\r\n  };\r\n\r\n  render = () => {\r\n    return (\r\n      <div className=\"Homepage\">\r\n        <Header\r\n          user={this.props.user}\r\n          isUserAdmin={this.props.isUserAdmin}\r\n          handleSnackbarOpen={this.handleSnackbarOpen}\r\n          handleLogout={this.handleLogout}\r\n          handleChangeFocus={this.handleChangeFocus}\r\n          handleDrawerOpen={this.handleDrawerOpen}\r\n        />\r\n        {this.state.componentInFocus === \"Library\" && (\r\n          <Library\r\n            user={this.props.user}\r\n            handleSnackbarOpen={this.handleSnackbarOpen}\r\n          />\r\n        )}\r\n        {this.state.componentInFocus === \"Profile\" && (\r\n          <Profile\r\n            handleChangeFocus={this.handleChangeFocus}\r\n            user={this.props.user}\r\n            isUserAdmin={this.props.isUserAdmin}\r\n            handleSnackbarOpen={this.handleSnackbarOpen}\r\n          />\r\n        )}\r\n        {this.state.componentInFocus === \"Inventory\" && (\r\n          <Inventory handleSnackbarOpen={this.handleSnackbarOpen} />\r\n        )}\r\n        <Drawer\r\n          isDrawerOpen={this.state.isDrawerOpen}\r\n          handleDrawerClose={this.handleDrawerClose}\r\n          isUserAdmin={this.props.isUserAdmin}\r\n          handleChangeFocus={this.handleChangeFocus}\r\n        />\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"left\",\r\n          }}\r\n          open={this.state.isSnackbarOpen}\r\n          autoHideDuration={6000}\r\n          onClose={this.handleSnackbarClose}\r\n          message={this.state.snackbarMessage}\r\n          action={\r\n            <React.Fragment>\r\n              <IconButton\r\n                size=\"small\"\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                onClick={this.handleSnackbarClose}\r\n              >\r\n                <CloseIcon fontSize=\"small\" />\r\n              </IconButton>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default Homepage;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Typography,\r\n  Snackbar,\r\n  IconButton,\r\n  Paper,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport firebase from \"./Firebase\";\r\nimport \"./stylesheets/VerifyEmail.css\";\r\n\r\nclass VerifyEmail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isSnackbarOpen: false,\r\n      snackbarMessage: \"\",\r\n      isUserChangingEmail: false,\r\n      newEmailInput: \"\",\r\n      passwordInput: \"\",\r\n    };\r\n  }\r\n\r\n  handleSnackbarClose = () => {\r\n    this.setState(() => {\r\n      return { isSnackbarOpen: false, snackbarMessage: \"\" };\r\n    });\r\n  };\r\n\r\n  handleLogout = () => {\r\n    firebase.auth().signOut();\r\n  };\r\n\r\n  handleReload = () => {\r\n    window.location.reload();\r\n  };\r\n\r\n  handleResend = () => {\r\n    this.props.user\r\n      .sendEmailVerification()\r\n      .then(() => {\r\n        this.setState(() => {\r\n          return {\r\n            isSnackbarOpen: true,\r\n            snackbarMessage: `Email Resent to ${this.props.user.email}.`,\r\n          };\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        this.setState(() => {\r\n          return {\r\n            isSnackbarOpen: true,\r\n            snackbarMessage: error.message,\r\n          };\r\n        });\r\n      });\r\n  };\r\n\r\n  handleEmailChangeToggle = () => {\r\n    this.setState((curState) => {\r\n      return { isUserChangingEmail: !curState.isUserChangingEmail };\r\n    });\r\n  };\r\n\r\n  handleInputChange = (e) => {\r\n    const name = e.target.getAttribute(\"name\");\r\n    const value = e.target.value;\r\n    this.setState(() => {\r\n      return {\r\n        [name]: value,\r\n      };\r\n    });\r\n  };\r\n\r\n  handleEmailChangeSubmit = (e) => {\r\n    e.preventDefault();\r\n    const credential = firebase.auth.EmailAuthProvider.credential(\r\n      this.props.user.email,\r\n      this.state.passwordInput\r\n    );\r\n    this.props.user\r\n      .reauthenticateWithCredential(credential)\r\n      .then(() => {\r\n        this.props.user\r\n          .updateEmail(this.state.newEmailInput)\r\n          .then(() => {\r\n            this.setState(\r\n              () => {\r\n                return {\r\n                  isSnackbarOpen: true,\r\n                  snackbarMessage: `Email changed to ${this.state.newEmailInput}`,\r\n                  isUserChangingEmail: false,\r\n                  newEmailInput: \"\",\r\n                  passwordInput: \"\",\r\n                };\r\n              },\r\n              () => {\r\n                this.props.user.reload();\r\n              }\r\n            );\r\n          })\r\n          .catch((error) => {\r\n            this.setState(() => {\r\n              return {\r\n                isSnackbarOpen: true,\r\n                snackbarMessage: error.message,\r\n              };\r\n            });\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        this.setState(() => {\r\n          return {\r\n            isSnackbarOpen: true,\r\n            snackbarMessage: error.message,\r\n          };\r\n        });\r\n      });\r\n  };\r\n\r\n  render = () => {\r\n    return (\r\n      <div className=\"VerifyEmail\">\r\n        <Typography>\r\n          {this.props.user.displayName}, please Verify Email at{\" \"}\r\n          {this.props.user.email}.\r\n        </Typography>\r\n        <Button onClick={this.handleResend}>Resend Email</Button>\r\n        <Button onClick={this.handleReload}>Already Verified?</Button>\r\n        <Button onClick={this.handleEmailChangeToggle}>\r\n          Change Email Address\r\n        </Button>\r\n        {this.state.isUserChangingEmail ? (\r\n          <Paper className=\"VerifyEmail-FormContainer\">\r\n            <form\r\n              onSubmit={this.handleEmailChangeSubmit}\r\n              className=\"VerifyEmail-Form\"\r\n            >\r\n              <TextField\r\n                label=\"New Email Address\"\r\n                type=\"email\"\r\n                required\r\n                name=\"newEmailInput\"\r\n                value={this.state.newEmailInput}\r\n                onChange={this.handleInputChange}\r\n              ></TextField>\r\n              <TextField\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                required\r\n                name=\"passwordInput\"\r\n                value={this.state.passwordInput}\r\n                onChange={this.handleInputChange}\r\n              ></TextField>\r\n              <Button type=\"submit\">Submit</Button>\r\n            </form>\r\n          </Paper>\r\n        ) : null}\r\n        <Button color=\"secondary\" onClick={this.handleLogout}>\r\n          Logout\r\n        </Button>\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"left\",\r\n          }}\r\n          open={this.state.isSnackbarOpen}\r\n          autoHideDuration={6000}\r\n          onClose={this.handleSnackbarClose}\r\n          message={this.state.snackbarMessage}\r\n          action={\r\n            <React.Fragment>\r\n              <IconButton\r\n                size=\"small\"\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                onClick={this.handleSnackbarClose}\r\n              >\r\n                <CloseIcon fontSize=\"small\" />\r\n              </IconButton>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default VerifyEmail;\r\n","import React, { Component } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport firebase from \"./Firebase\";\nimport LoginRegister from \"./LoginRegister\";\nimport Homepage from \"./Homepage\";\nimport VerifyEmail from \"./VerifyEmail\";\nconst db = firebase.firestore();\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: false,\n      isUserAdmin: false,\n    };\n  }\n\n  componentDidMount = () => {\n    this.checkLogin();\n  };\n\n  checkLogin = () => {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        db.collection(\"Users\")\n          .doc(user.uid)\n          .get()\n          .then((doc) => {\n            let isUserAdmin = doc.data() ? doc.data().isAdmin : false;\n            this.setState(() => {\n              return { user, isUserAdmin };\n            });\n          })\n          .catch((error) => {\n            // idk how to handle this error.\n            alert(error.message);\n            firebase.auth().signOut();\n          });\n      } else {\n        this.setState(() => {\n          return { user: false };\n        });\n      }\n    });\n  };\n\n  render = () => {\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/library-management-system/login\">\n            {this.state.user ? (\n              <Redirect\n                to={{\n                  pathname: \"/library-management-system\",\n                }}\n              />\n            ) : (\n              <LoginRegister />\n            )}\n          </Route>\n          <Route exact path=\"/library-management-system\">\n            {this.state.user ? (\n              this.state.user.emailVerified ? (\n                <Homepage\n                  user={this.state.user}\n                  isUserAdmin={this.state.isUserAdmin}\n                />\n              ) : (\n                <VerifyEmail user={this.state.user} />\n              )\n            ) : (\n              <Redirect\n                to={{\n                  pathname: \"/library-management-system/login\",\n                }}\n              />\n            )}\n          </Route>\n        </Switch>\n      </div>\n    );\n  };\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}